
Filename: .firebaserc
Content:
{
  "projects": {
    "default": "portal-gambit"
  }
}


================================================================================

Filename: .github/workflows/firebase-hosting-merge.yml
Content:
# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Add environment file creation step
      - name: Create .env file
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "VITE_FIREBASE_DATABASE_URL=${{ secrets.VITE_FIREBASE_DATABASE_URL }}" >> .env
          echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> .env
          
      - run: npm ci && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTAL_GAMBIT }}
          channelId: live
          projectId: portal-gambit

env:
  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
  VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
  VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
  VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
  VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
  VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
  VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
  VITE_FIREBASE_DATABASE_URL: ${{ secrets.VITE_FIREBASE_DATABASE_URL }}
  VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}


================================================================================

Filename: .github/workflows/firebase-hosting-pull-request.yml
Content:
# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
on: pull_request
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTAL_GAMBIT }}
          projectId: portal-gambit
      - run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "VITE_FIREBASE_DATABASE_URL=${{ secrets.VITE_FIREBASE_DATABASE_URL }}" >> .env
          echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> .env
env:
  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
  VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
  VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
  VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
  VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
  VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
  VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
  VITE_FIREBASE_DATABASE_URL: ${{ secrets.VITE_FIREBASE_DATABASE_URL }}
  VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}


================================================================================

Filename: .gitignore
Content:
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

.env
.env.local
repo_contents.txt
.firebase/
.firebaserc

================================================================================

Filename: PortalChessGame.jsx
Content:
import { useState, useEffect } from 'react';
import { ref, onValue, update } from 'firebase/database';
import { database } from '../../firebase/config';
import { useAuth } from '../../contexts/AuthContext';
import CustomChessBoard from './CustomChessBoard';
import './PortalChessGame.css';

const PortalChessGame = ({ gameId }) => {
  const [gameState, setGameState] = useState(null);
  const [portalMode, setPortalMode] = useState(false);
  const { user, loading } = useAuth();

  useEffect(() => {
    if (!gameId || loading) return;

    const gameRef = ref(database, `games/${gameId}`);
    const unsubscribe = onValue(gameRef, (snapshot) => {
      const data = snapshot.val();
      if (data) {
        setGameState(data);
      }
    });

    return () => unsubscribe();
  }, [gameId, user, loading]);

  const isMyTurn = () => {
    if (!gameState || !user) return false;

    const myColor = gameState.white_player === user.uid ? 'white' :
                   gameState.black_player === user.uid ? 'black' : null;

    if (!myColor) return false;
    return myColor === gameState.current_turn;
  };

  const handleMove = (newBoard) => {
    const newTurn = gameState.current_turn === 'white' ? 'black' : 'white';
    
    update(ref(database, `games/${gameId}`), {
      board: newBoard,
      current_turn: newTurn,
      lastMoveTime: Date.now()
    });
  };

  const getGameStatus = () => {
    if (loading) return 'Loading...';
    if (!user) return 'Please sign in to play';
    if (!gameState) return 'Game not found';

    const isPlayer = [gameState.white_player, gameState.black_player].includes(user.uid);
    if (!isPlayer) return 'You are observing this game';

    if (gameState.status === 'waiting' || !gameState.black_player) {
      return 'Waiting for opponent...';
    }

    if (gameState.status === 'active') {
      return isMyTurn() ? 'Your turn' : "Opponent's turn";
    }

    return 'Game ended';
  };

  return (
    <div className="game-container">
      <div className="game-controls">
        <button
          onClick={() => setPortalMode(!portalMode)}
          className={`portal-button ${portalMode ? 'active' : ''}`}
          disabled={!isMyTurn()}
        >
          {portalMode ? 'Cancel Portal' : 'Place Portal'}
        </button>

        {portalMode && (
          <div className="portal-instructions">
            Click two squares to create linked portals
          </div>
        )}
      </div>

      <div className="board-container">
        <CustomChessBoard
          gameId={gameId}
          onMove={handleMove}
          currentTurn={gameState?.current_turn}
          isMyTurn={isMyTurn()}
          gameState={gameState}
        />
      </div>

      <div className="game-status">
        {getGameStatus()}
      </div>

      {/* Debug information - you can remove this in production */}
      {user && gameState && (
        <div className="debug-info" style={{
          fontSize: '12px',
          color: '#666',
          marginTop: '10px',
          padding: '10px',
          backgroundColor: '#f5f5f5',
          borderRadius: '4px'
        }}>
          <div>Player: {user.email}</div>
          <div>Role: {
            gameState.white_player === user.uid ? 'White' :
            gameState.black_player === user.uid ? 'Black' :
            'Observer'
          }</div>
          <div>Current Turn: {gameState.current_turn}</div>
          <div>Game Status: {gameState.status}</div>
        </div>
      )}
    </div>
  );
};

export default PortalChessGame;

================================================================================

Filename: README.md
Content:
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh


================================================================================

Filename: eslint.config.js
Content:
import js from '@eslint/js'
import globals from 'globals'
import react from 'eslint-plugin-react'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    settings: { react: { version: '18.3' } },
    plugins: {
      react,
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...react.configs.recommended.rules,
      ...react.configs['jsx-runtime'].rules,
      ...reactHooks.configs.recommended.rules,
      'react/jsx-no-target-blank': 'off',
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
]


================================================================================

Filename: firebase.json
Content:
{
  "hosting": {
    "public": "dist",
    "ignore": [
      "firebase.json",
      "**/.*",
      "**/node_modules/**"
    ],
    "rewrites": [
      {
        "source": "**",
        "destination": "/index.html"
      }
    ]
  }
}


================================================================================

Filename: index.html
Content:
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicons/515.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Portal Gambit</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>


================================================================================

Filename: package-lock.json
Content:
{
  "name": "portal-gambit-frontend",
  "version": "0.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "portal-gambit-frontend",
      "version": "0.0.0",
      "dependencies": {
        "@tailwindcss/forms": "^0.5.10",
        "@tailwindcss/vite": "^4.0.3",
        "chess.js": "^1.0.0",
        "firebase": "^11.2.0",
        "framer-motion": "^12.5.0",
        "lucide-react": "^0.483.0",
        "peerjs": "^1.5.4",
        "react": "^18.3.1",
        "react-chessboard": "^4.7.2",
        "react-dom": "^18.3.1",
        "react-icons": "^5.5.0",
        "react-router-dom": "^7.1.3",
        "tailwindcss": "^4.0.3",
        "uuid": "^11.1.0"
      },
      "devDependencies": {
        "@eslint/js": "^9.17.0",
        "@types/react": "^18.3.18",
        "@types/react-dom": "^18.3.5",
        "@vitejs/plugin-react": "^1.3.2",
        "eslint": "^9.17.0",
        "eslint-plugin-react": "^7.37.2",
        "eslint-plugin-react-hooks": "^5.0.0",
        "eslint-plugin-react-refresh": "^0.4.16",
        "globals": "^15.14.0",
        "vite": "^6.2.6"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.26.2",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.26.2.tgz",
      "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.25.9",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.0.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.26.8",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.8.tgz",
      "integrity": "sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.26.9.tgz",
      "integrity": "sha512-lWBYIrF7qK5+GjY5Uy+/hEgp8OJWOD/rpy74GplYRhEauvbHDeFB8t5hPOZxCZ0Oxf4Cc36tK51/l3ymJysrKw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.26.9",
        "@babel/helper-compilation-targets": "^7.26.5",
        "@babel/helper-module-transforms": "^7.26.0",
        "@babel/helpers": "^7.26.9",
        "@babel/parser": "^7.26.9",
        "@babel/template": "^7.26.9",
        "@babel/traverse": "^7.26.9",
        "@babel/types": "^7.26.9",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.26.9.tgz",
      "integrity": "sha512-kEWdzjOAUMW4hAyrzJ0ZaTOu9OmpyDIQicIh0zg0EEcEkYXZb2TjtBhnHi2ViX7PKwZqF4xwqfAm299/QMP3lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.26.9",
        "@babel/types": "^7.26.9",
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.25",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.25.9.tgz",
      "integrity": "sha512-gv7320KBUFJz1RnylIg5WWYPRXKZ884AGkYpgpWW02TH66Dl+HaC1t1CKd0z3R4b6hdYEcmrNZHUmfCP+1u3/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.26.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz",
      "integrity": "sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.26.5",
        "@babel/helper-validator-option": "^7.25.9",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
      "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.26.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
      "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9",
        "@babel/traverse": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.26.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz",
      "integrity": "sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
      "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
      "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
      "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.0.tgz",
      "integrity": "sha512-U5eyP/CTFPuNE3qk+WZMxFkp/4zUzdceQlfzf7DdGdhp+Fezd7HD+i8Y24ZuTMKX3wQBld449jijbGq6OdGNQg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.0",
        "@babel/types": "^7.27.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.27.0.tgz",
      "integrity": "sha512-iaepho73/2Pz7w2eMS0Q5f83+0RKI7i4xmiYeBmDzfRVbQtTOG7Ts0S4HzJVsTMGI9keU8rNfuZr8DKfSt7Yyg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.0"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-syntax-jsx": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.25.9.tgz",
      "integrity": "sha512-ld6oezHQMZsZfp6pWtbjaNDF2tiiCYYDqQszHt5VV437lewP9aSi2Of99CK0D0XB21k7FLgnLcmQKyKzynfeAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.25.9.tgz",
      "integrity": "sha512-s5XwpQYCqGerXl+Pu6VDL3x0j2d82eiV77UJ8a2mDHAW7j9SWRqQ2y1fNo1Z74CdcYipl5Z41zvjj4Nfzq36rw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.25.9",
        "@babel/helper-module-imports": "^7.25.9",
        "@babel/helper-plugin-utils": "^7.25.9",
        "@babel/plugin-syntax-jsx": "^7.25.9",
        "@babel/types": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-development": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.25.9.tgz",
      "integrity": "sha512-9mj6rm7XVYs4mdLIpbZnHOYdpW42uoiBCTVowg7sP1thUOiANgMb4UtpRivR0pp5iL+ocvUv7X4mZgFRpJEzGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/plugin-transform-react-jsx": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.25.9.tgz",
      "integrity": "sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.25.9.tgz",
      "integrity": "sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.0.tgz",
      "integrity": "sha512-VtPOkrdPHZsKc/clNqyi9WUA8TINkZ4cGk63UUE3u4pmB2k+ZMQRDuIOagv8UVd6j7k0T3+RRIb7beKTebNbcw==",
      "license": "MIT",
      "dependencies": {
        "regenerator-runtime": "^0.14.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.0.tgz",
      "integrity": "sha512-2ncevenBqXI6qRMukPlXwHKHchC7RyMuu4xv5JBXRfOGVcTy1mXCD12qrp7Jsoxll1EV3+9sE4GugBVRjT2jFA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/parser": "^7.27.0",
        "@babel/types": "^7.27.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.26.9",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.9.tgz",
      "integrity": "sha512-ZYW7L+pL8ahU5fXmNbPF+iZFHCv5scFak7MZ9bwaRPLUhHh7QQEMjZUg0HevihoqCM5iSYHN61EyCoZvqC+bxg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.26.2",
        "@babel/generator": "^7.26.9",
        "@babel/parser": "^7.26.9",
        "@babel/template": "^7.26.9",
        "@babel/types": "^7.26.9",
        "debug": "^4.3.1",
        "globals": "^11.1.0"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse/node_modules/globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.27.0.tgz",
      "integrity": "sha512-H45s8fVLYjbhFH62dIJ3WtmJ6RSPt/3DRO0ZcT2SUiYiQyz3BLVb9ADEnLl91m74aQPS3AzzeajZHYOalWe3bg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.0.tgz",
      "integrity": "sha512-O7vun9Sf8DFjH2UtqK8Ku3LkquL9SZL8OLY1T5NZkA34+wG3OQF7cl4Ql8vdNzM6fzBbYfLaiRLIOZ+2FOCgBQ==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.0.tgz",
      "integrity": "sha512-PTyWCYYiU0+1eJKmw21lWtC+d08JDZPQ5g+kFyxP0V+es6VPPSUhM6zk8iImp2jbV6GwjX4pap0JFbUQN65X1g==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.0.tgz",
      "integrity": "sha512-grvv8WncGjDSyUBjN9yHXNt+cq0snxXbDxy5pJtzMKGmmpPxeAmAhWxXI+01lU5rwZomDgD3kJwulEnhTRUd6g==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.0.tgz",
      "integrity": "sha512-m/ix7SfKG5buCnxasr52+LI78SQ+wgdENi9CqyCXwjVR2X4Jkz+BpC3le3AoBPYTC9NHklwngVXvbJ9/Akhrfg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.0.tgz",
      "integrity": "sha512-mVwdUb5SRkPayVadIOI78K7aAnPamoeFR2bT5nszFUZ9P8UpK4ratOdYbZZXYSqPKMHfS1wdHCJk1P1EZpRdvw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.0.tgz",
      "integrity": "sha512-DgDaYsPWFTS4S3nWpFcMn/33ZZwAAeAFKNHNa1QN0rI4pUjgqf0f7ONmXf6d22tqTY+H9FNdgeaAa+YIFUn2Rg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.0.tgz",
      "integrity": "sha512-VN4ocxy6dxefN1MepBx/iD1dH5K8qNtNe227I0mnTRjry8tj5MRk4zprLEdG8WPyAPb93/e4pSgi1SoHdgOa4w==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.0.tgz",
      "integrity": "sha512-mrSgt7lCh07FY+hDD1TxiTyIHyttn6vnjesnPoVDNmDfOmggTLXRv8Id5fNZey1gl/V2dyVK1VXXqVsQIiAk+A==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.0.tgz",
      "integrity": "sha512-vkB3IYj2IDo3g9xX7HqhPYxVkNQe8qTK55fraQyTzTX/fxaDtXiEnavv9geOsonh2Fd2RMB+i5cbhu2zMNWJwg==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.0.tgz",
      "integrity": "sha512-9QAQjTWNDM/Vk2bgBl17yWuZxZNQIF0OUUuPZRKoDtqF2k4EtYbpyiG5/Dk7nqeK6kIJWPYldkOcBqjXjrUlmg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.0.tgz",
      "integrity": "sha512-43ET5bHbphBegyeqLb7I1eYn2P/JYGNmzzdidq/w0T8E2SsYL1U6un2NFROFRg1JZLTzdCoRomg8Rvf9M6W6Gg==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.0.tgz",
      "integrity": "sha512-fC95c/xyNFueMhClxJmeRIj2yrSMdDfmqJnyOY4ZqsALkDrrKJfIg5NTMSzVBr5YW1jf+l7/cndBfP3MSDpoHw==",
      "cpu": [
        "loong64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.0.tgz",
      "integrity": "sha512-nkAMFju7KDW73T1DdH7glcyIptm95a7Le8irTQNO/qtkoyypZAnjchQgooFUDQhNAy4iu08N79W4T4pMBwhPwQ==",
      "cpu": [
        "mips64el"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.0.tgz",
      "integrity": "sha512-NhyOejdhRGS8Iwv+KKR2zTq2PpysF9XqY+Zk77vQHqNbo/PwZCzB5/h7VGuREZm1fixhs4Q/qWRSi5zmAiO4Fw==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.0.tgz",
      "integrity": "sha512-5S/rbP5OY+GHLC5qXp1y/Mx//e92L1YDqkiBbO9TQOvuFXM+iDqUNG5XopAnXoRH3FjIUDkeGcY1cgNvnXp/kA==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.0.tgz",
      "integrity": "sha512-XM2BFsEBz0Fw37V0zU4CXfcfuACMrppsMFKdYY2WuTS3yi8O1nFOhil/xhKTmE1nPmVyvQJjJivgDT+xh8pXJA==",
      "cpu": [
        "s390x"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.0.tgz",
      "integrity": "sha512-9yl91rHw/cpwMCNytUDxwj2XjFpxML0y9HAOH9pNVQDpQrBxHy01Dx+vaMu0N1CKa/RzBD2hB4u//nfc+Sd3Cw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.0.tgz",
      "integrity": "sha512-RuG4PSMPFfrkH6UwCAqBzauBWTygTvb1nxWasEJooGSJ/NwRw7b2HOwyRTQIU97Hq37l3npXoZGYMy3b3xYvPw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.0.tgz",
      "integrity": "sha512-jl+qisSB5jk01N5f7sPCsBENCOlPiS/xptD5yxOx2oqQfyourJwIKLRA2yqWdifj3owQZCL2sn6o08dBzZGQzA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.0.tgz",
      "integrity": "sha512-21sUNbq2r84YE+SJDfaQRvdgznTD8Xc0oc3p3iW/a1EVWeNj/SdUCbm5U0itZPQYRuRTW20fPMWMpcrciH2EJw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.0.tgz",
      "integrity": "sha512-2gwwriSMPcCFRlPlKx3zLQhfN/2WjJ2NSlg5TKLQOJdV0mSxIcYNTMhk3H3ulL/cak+Xj0lY1Ym9ysDV1igceg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.0.tgz",
      "integrity": "sha512-bxI7ThgLzPrPz484/S9jLlvUAHYMzy6I0XiU1ZMeAEOBcS0VePBFxh1JjTQt3Xiat5b6Oh4x7UC7IwKQKIJRIg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.0.tgz",
      "integrity": "sha512-ZUAc2YK6JW89xTbXvftxdnYy3m4iHIkDtK3CLce8wg8M2L+YZhIvO1DKpxrd0Yr59AeNNkTiic9YLf6FTtXWMw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.0.tgz",
      "integrity": "sha512-eSNxISBu8XweVEWG31/JzjkIGbGIJN/TrRoiSVZwZ6pkC6VX4Im/WV2cz559/TXLcYbcrDN8JtKgd9DJVIo8GA==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.0.tgz",
      "integrity": "sha512-ZENoHJBxA20C2zFzh6AI4fT6RraMzjYw4xKWemRTRmRVtN9c5DcH9r/f2ihEkMjOW5eGgrwCslG/+Y/3bL+DHQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz",
      "integrity": "sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.19.2",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.19.2.tgz",
      "integrity": "sha512-GNKqxfHG2ySmJOBSHg7LxeUx4xpuCoFjacmlCoYWEbaPXLwvfIjixRI12xCQZeULksQb23uiA8F40w5TojpV7w==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.12.0.tgz",
      "integrity": "sha512-cmrR6pytBuSMTaBweKoGMwu3EiHiEC+DoyupPmlZ0HxBJBtIxwe+j/E4XPIKNx+Q74c8lXKPwYawBf5glsTkHg==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.0.tgz",
      "integrity": "sha512-yaVPAiNAalnCZedKLdR21GOGILMLKPyqSLWaAjQFvYA2i/ciDi8ArYVr69Anohb6cH2Ukhqti4aFnYyPm8wdwQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.21.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.21.0.tgz",
      "integrity": "sha512-BqStZ3HX8Yz6LvsF5ByXYrtigrV5AXADWLAGc7PH/1SxOb7/FIYYMszZZWiUou/GB9P2lXWk2SV4d+Z8h0nknw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.2.7",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.2.7.tgz",
      "integrity": "sha512-JubJ5B2pJ4k4yGxaNLdbjrnk9d/iDz6/q8wOilpIowd6PJPgaxCuHBnBszq7Ce2TyMrywm5r4PnKm6V3iiZF+g==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/core": "^0.12.0",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@firebase/analytics": {
      "version": "0.10.12",
      "resolved": "https://registry.npmjs.org/@firebase/analytics/-/analytics-0.10.12.tgz",
      "integrity": "sha512-iDCGnw6qdFqwI5ywkgece99WADJNoymu+nLIQI4fZM/vCZ3bEo4wlpEetW71s1HqGpI0hQStiPhqVjFxDb2yyw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/installations": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/analytics-compat": {
      "version": "0.2.18",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-compat/-/analytics-compat-0.2.18.tgz",
      "integrity": "sha512-Hw9mzsSMZaQu6wrTbi3kYYwGw9nBqOHr47pVLxfr5v8CalsdrG5gfs9XUlPOZjHRVISp3oQrh1j7d3E+ulHPjQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/analytics": "0.10.12",
        "@firebase/analytics-types": "0.8.3",
        "@firebase/component": "0.6.13",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/analytics-types": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-types/-/analytics-types-0.8.3.tgz",
      "integrity": "sha512-VrIp/d8iq2g501qO46uGz3hjbDb8xzYMrbu8Tp0ovzIzrvJZ2fvmj649gTjge/b7cCCcjT0H37g1gVtlNhnkbg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app": {
      "version": "0.11.2",
      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.11.2.tgz",
      "integrity": "sha512-bFee0hPJZBzNtiizRxdgsu8C9DW3mn1y0OJJ4zHQsccjDYzGOfvN0G3CMGyBIiwNctsFpQa8orbp2IKywoUeqA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@firebase/app-check": {
      "version": "0.8.12",
      "resolved": "https://registry.npmjs.org/@firebase/app-check/-/app-check-0.8.12.tgz",
      "integrity": "sha512-LxjcoIFOU4sgK07ZWb8XDHxuVB+UKs41vPK+Sg9PeZMvEoz84fndFAx8Nz2nipiya2EmyxBgVhff8Hi6GBt+XA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/app-check-compat": {
      "version": "0.3.19",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-compat/-/app-check-compat-0.3.19.tgz",
      "integrity": "sha512-G8FMiqhrKc4gEEujrBDBBrbRav8MGqoLObWj1hy/riCSg4XlRYhpnq3ev8E9HTirqU1tAGH6oJl7vr+jfM7YNA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check": "0.8.12",
        "@firebase/app-check-types": "0.5.3",
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/app-check-interop-types": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-interop-types/-/app-check-interop-types-0.3.3.tgz",
      "integrity": "sha512-gAlxfPLT2j8bTI/qfe3ahl2I2YcBQ8cFIBdhAQA4I2f3TndcO+22YizyGYuttLHPQEpWkhmpFW60VCFEPg4g5A==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-check-types": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-types/-/app-check-types-0.5.3.tgz",
      "integrity": "sha512-hyl5rKSj0QmwPdsAxrI5x1otDlByQ7bvNvVt8G/XPO2CSwE++rmSVf3VEhaeOR4J8ZFaF0Z0NDSmLejPweZ3ng==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-compat": {
      "version": "0.2.51",
      "resolved": "https://registry.npmjs.org/@firebase/app-compat/-/app-compat-0.2.51.tgz",
      "integrity": "sha512-pxF1+coABt+ugqNI0YXDlmkKv4kh3pjI5BqIJJ1VXBo42OZbKMsQbFeos14YBrWwiqqSjUvQ70FBNsv5E2wuxg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app": "0.11.2",
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@firebase/app-types": {
      "version": "0.9.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.3.tgz",
      "integrity": "sha512-kRVpIl4vVGJ4baogMDINbyrIOtOxqhkZQg4jTq3l8Lw6WSk0xfpEYzezFu+Kl4ve4fbPl79dvwRtaFqAC/ucCw==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth-compat": {
      "version": "0.5.19",
      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.5.19.tgz",
      "integrity": "sha512-v898POphOIBJliKF76SiGOXh4EdhO5fM6S9a2ZKf/8wHdBea/qwxwZoVVya4DW6Mi7vWyp1lIzHbFgwRz8G9TA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth": "1.9.1",
        "@firebase/auth-types": "0.13.0",
        "@firebase/component": "0.6.13",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/auth-compat/node_modules/@firebase/auth": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.9.1.tgz",
      "integrity": "sha512-9KKo5SNVkyJzftsW+daS+PGDbeJ+MFJWXQFHDqqPPH3acWHtiNnGHH5HGpIJErEELrsm9xMPie5zfZ0XpGU8+w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@react-native-async-storage/async-storage": "^1.18.1"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@firebase/auth-interop-types": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.4.tgz",
      "integrity": "sha512-JPgcXKCuO+CWqGDnigBtvo09HeBs5u/Ktc2GaFj2m01hLarbxthLNm7Fk8iOP1aqAtXV+fnnGj7U28xmk7IwVA==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth-types": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth-types/-/auth-types-0.13.0.tgz",
      "integrity": "sha512-S/PuIjni0AQRLF+l9ck0YpsMOdE8GO2KU6ubmBB7P+7TJUCQDa3R1dlgYm9UzGbbePMZsp0xzB93f2b/CgxMOg==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/component": {
      "version": "0.6.13",
      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.6.13.tgz",
      "integrity": "sha512-I/Eg1NpAtZ8AAfq8mpdfXnuUpcLxIDdCDtTzWSh+FXnp/9eCKJ3SNbOCKrUCyhLzNa2SiPJYruei0sxVjaOTeg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@firebase/data-connect": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@firebase/data-connect/-/data-connect-0.3.1.tgz",
      "integrity": "sha512-PNlfAJ2mcbyRlWfm41nfk8EksTuvMFTFIX+puNzeUa6OTIDtyp1IX1NJVc7n6WpfbErN7tNqcOEMe6BMtpcjVA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/database": {
      "version": "1.0.13",
      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.0.13.tgz",
      "integrity": "sha512-cdc+LuseKdJXzlrCx8ePMXyctSWtYS9SsP3y7EeA85GzNh/IL0b7HOq0eShridL935iQ0KScZCj5qJtKkGE53g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "faye-websocket": "0.11.4",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@firebase/database-compat": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-2.0.4.tgz",
      "integrity": "sha512-4qsptwZ3DTGNBje56ETItZQyA/HMalOelnLmkC3eR0M6+zkzOHjNHyWUWodW2mqxRKAM0sGkn+aIwYHKZFJXug==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/database": "1.0.13",
        "@firebase/database-types": "1.0.9",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@firebase/database-types": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.9.tgz",
      "integrity": "sha512-uCntrxPbJHhZsNRpMhxNCm7GzhYWX+7J2e57wq1ZZ4NJrQw5DORgkAzJMByYZcVAjgADnCxxhK/GkoypH+XpvQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-types": "0.9.3",
        "@firebase/util": "1.11.0"
      }
    },
    "node_modules/@firebase/firestore": {
      "version": "4.7.9",
      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-4.7.9.tgz",
      "integrity": "sha512-uq/bUtHDqJ5ZqPHAJIlNzHpXUtcVYcASz2V6y7UmP1WLlRKEt1yf1OcQW5u8pY2yq7162OnCl5J5mkOdMTMLZw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "@firebase/webchannel-wrapper": "1.0.3",
        "@grpc/grpc-js": "~1.9.0",
        "@grpc/proto-loader": "^0.7.8",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/firestore-compat": {
      "version": "0.3.44",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-compat/-/firestore-compat-0.3.44.tgz",
      "integrity": "sha512-4Lv2TyHEW+FugXPgmQ0ZylSbh9uFuKDP0lCL1hX9cbxXaafhC/Nww+DWokUQ2zZcynjc8fxFunw6Xbd3QHAlgA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/firestore": "4.7.9",
        "@firebase/firestore-types": "3.0.3",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/firestore-types": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-types/-/firestore-types-3.0.3.tgz",
      "integrity": "sha512-hD2jGdiWRxB/eZWF89xcK9gF8wvENDJkzpVFb4aGkzfEaKxVRD1kjz1t1Wj8VZEp2LCB53Yx1zD8mrhQu87R6Q==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/functions": {
      "version": "0.12.3",
      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.12.3.tgz",
      "integrity": "sha512-Wv7JZMUkKLb1goOWRtsu3t7m97uK6XQvjQLPvn8rncY91+VgdU72crqnaYCDI/ophNuBEmuK8mn0/pAnjUeA6A==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.6.13",
        "@firebase/messaging-interop-types": "0.2.3",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/functions-compat": {
      "version": "0.3.20",
      "resolved": "https://registry.npmjs.org/@firebase/functions-compat/-/functions-compat-0.3.20.tgz",
      "integrity": "sha512-iIudmYDAML6n3c7uXO2YTlzra2/J6lnMzmJTXNthvrKVMgNMaseNoQP1wKfchK84hMuSF8EkM4AvufwbJ+Juew==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/functions": "0.12.3",
        "@firebase/functions-types": "0.6.3",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/functions-types": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/@firebase/functions-types/-/functions-types-0.6.3.tgz",
      "integrity": "sha512-EZoDKQLUHFKNx6VLipQwrSMh01A1SaL3Wg6Hpi//x6/fJ6Ee4hrAeswK99I5Ht8roiniKHw4iO0B1Oxj5I4plg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/installations": {
      "version": "0.6.13",
      "resolved": "https://registry.npmjs.org/@firebase/installations/-/installations-0.6.13.tgz",
      "integrity": "sha512-6ZpkUiaygPFwgVneYxuuOuHnSPnTA4KefLEaw/sKk/rNYgC7X6twaGfYb0sYLpbi9xV4i5jXsqZ3WO+yaguNgg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/util": "1.11.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/installations-compat": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/@firebase/installations-compat/-/installations-compat-0.2.13.tgz",
      "integrity": "sha512-f/o6MqCI7LD/ulY9gvgkv6w5k6diaReD8BFHd/y/fEdpsXmFWYS/g28GXCB72bRVBOgPpkOUNl+VsMvDwlRKmw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/installations": "0.6.13",
        "@firebase/installations-types": "0.5.3",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/installations-types": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@firebase/installations-types/-/installations-types-0.5.3.tgz",
      "integrity": "sha512-2FJI7gkLqIE0iYsNQ1P751lO3hER+Umykel+TkLwHj6plzWVxqvfclPUZhcKFVQObqloEBTmpi2Ozn7EkCABAA==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/logger": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.4.4.tgz",
      "integrity": "sha512-mH0PEh1zoXGnaR8gD1DeGeNZtWFKbnz9hDO91dIml3iou1gpOnLqXQ2dJfB71dj6dpmUjcQ6phY3ZZJbjErr9g==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@firebase/messaging": {
      "version": "0.12.17",
      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.12.17.tgz",
      "integrity": "sha512-W3CnGhTm6Nx8XGb6E5/+jZTuxX/EK8Vur4QXvO1DwZta/t0xqWMRgO9vNsZFMYBqFV4o3j4F9qK/iddGYwWS6g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/installations": "0.6.13",
        "@firebase/messaging-interop-types": "0.2.3",
        "@firebase/util": "1.11.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/messaging-compat": {
      "version": "0.2.17",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-compat/-/messaging-compat-0.2.17.tgz",
      "integrity": "sha512-5Q+9IG7FuedusdWHVQRjpA3OVD9KUWp/IPegcv0s5qSqRLBjib7FlAeWxN+VL0Ew43tuPJBY2HKhEecuizmO1Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/messaging": "0.12.17",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/messaging-interop-types": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-interop-types/-/messaging-interop-types-0.2.3.tgz",
      "integrity": "sha512-xfzFaJpzcmtDjycpDeCUj0Ge10ATFi/VHVIvEEjDNc3hodVBQADZ7BWQU7CuFpjSHE+eLuBI13z5F/9xOoGX8Q==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/performance": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/@firebase/performance/-/performance-0.7.1.tgz",
      "integrity": "sha512-SkEUurawojCjav2V2AXo6BQLDtv02NxgXPLCiAvrkn95IAKI4W/UbLKYQvMbEez/nqvmnucLyklcMlB0Q5a1iw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/installations": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0",
        "web-vitals": "^4.2.4"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/performance-compat": {
      "version": "0.2.14",
      "resolved": "https://registry.npmjs.org/@firebase/performance-compat/-/performance-compat-0.2.14.tgz",
      "integrity": "sha512-/crPg0fDqHIx+FjFoEqWxNp+lJSF40ZG7x43AAJGRaUaWLJDncQm3UJB5/mABaRZb7obs1CQAcRtd4phZFkmZg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/performance": "0.7.1",
        "@firebase/performance-types": "0.2.3",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/performance-types": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.2.3.tgz",
      "integrity": "sha512-IgkyTz6QZVPAq8GSkLYJvwSLr3LS9+V6vNPQr0x4YozZJiLF5jYixj0amDtATf1X0EtYHqoPO48a9ija8GocxQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/remote-config": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config/-/remote-config-0.6.0.tgz",
      "integrity": "sha512-Yrk4l5+6FJLPHC6irNHMzgTtJ3NfHXlAXVChCBdNFtgmzyGmufNs/sr8oA0auEfIJ5VpXCaThRh3P4OdQxiAlQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/installations": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-compat": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-compat/-/remote-config-compat-0.2.13.tgz",
      "integrity": "sha512-UmHoO7TxAEJPIZf8e1Hy6CeFGMeyjqSCpgoBkQZYXFI2JHhzxIyDpr8jVKJJN1dmAePKZ5EX7dC13CmcdTOl7Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/remote-config": "0.6.0",
        "@firebase/remote-config-types": "0.4.0",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-types": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-types/-/remote-config-types-0.4.0.tgz",
      "integrity": "sha512-7p3mRE/ldCNYt8fmWMQ/MSGRmXYlJ15Rvs9Rk17t8p0WwZDbeK7eRmoI1tvCPaDzn9Oqh+yD6Lw+sGLsLg4kKg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/storage": {
      "version": "0.13.7",
      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.13.7.tgz",
      "integrity": "sha512-FkRyc24rK+Y6EaQ1tYFm3TevBnnfSNA0VyTfew2hrYyL/aYfatBg7HOgktUdB4kWMHNA9VoTotzZTGoLuK92wg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/storage-compat": {
      "version": "0.3.17",
      "resolved": "https://registry.npmjs.org/@firebase/storage-compat/-/storage-compat-0.3.17.tgz",
      "integrity": "sha512-CBlODWEZ5b6MJWVh21VZioxwxNwVfPA9CAdsk+ZgVocJQQbE2oDW1XJoRcgthRY1HOitgbn4cVrM+NlQtuUYhw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/storage": "0.13.7",
        "@firebase/storage-types": "0.8.3",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/storage-types": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/@firebase/storage-types/-/storage-types-0.8.3.tgz",
      "integrity": "sha512-+Muk7g9uwngTpd8xn9OdF/D48uiQ7I1Fae7ULsWPuKoCH3HU7bfFPhxtJYzyhjdniowhuDpQcfPmuNRAqZEfvg==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/util": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.11.0.tgz",
      "integrity": "sha512-PzSrhIr++KI6y4P6C/IdgBNMkEx0Ex6554/cYd0Hm+ovyFSJtJXqb/3OSIdnBoa2cpwZT1/GW56EmRc5qEc5fQ==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@firebase/vertexai": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/vertexai/-/vertexai-1.1.0.tgz",
      "integrity": "sha512-K8CgIFKJrfrf5lYhKnDXOu08FEmIzVExK+ApUZx4Bw2GAmLEA3wDVrsjuupuvpXZSp8QlzvEiXwqshqqc4v0pA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/webchannel-wrapper": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-1.0.3.tgz",
      "integrity": "sha512-2xCRM9q9FlzGZCdgDMJwc0gyUkWFtkosy7Xxr6sFgQwn+wMNIWd7xIvYNauU1r64B5L5rsGKy/n9TKJ0aAFeqQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@grpc/grpc-js": {
      "version": "1.9.15",
      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.15.tgz",
      "integrity": "sha512-nqE7Hc0AzI+euzUwDAy0aY5hCp10r734gMGRdU+qOPX0XSceI2ULrcXB5U2xSc5VkWwalCj4M7GzCAygZl2KoQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@grpc/proto-loader": "^0.7.8",
        "@types/node": ">=12.12.47"
      },
      "engines": {
        "node": "^8.13.0 || >=10.10.0"
      }
    },
    "node_modules/@grpc/proto-loader": {
      "version": "0.7.13",
      "resolved": "https://registry.npmjs.org/@grpc/proto-loader/-/proto-loader-0.7.13.tgz",
      "integrity": "sha512-AiXO/bfe9bmxBjxxtYxFAXGZvMaN5s8kO+jBHAJCON8rJoB5YS/D6X7ZNc6XQkuHNmyl4CYaMI1fJ/Gn27RGGw==",
      "license": "Apache-2.0",
      "dependencies": {
        "lodash.camelcase": "^4.3.0",
        "long": "^5.0.0",
        "protobufjs": "^7.2.5",
        "yargs": "^17.7.2"
      },
      "bin": {
        "proto-loader-gen-types": "build/bin/proto-loader-gen-types.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.2",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.2.tgz",
      "integrity": "sha512-xeO57FpIu4p1Ri3Jq/EXq4ClRm86dVF2z/+kvFnyqVYRavTZmaFaUBbWCOuuTh0o/g7DSsk6kc2vrS4Vl5oPOQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@msgpack/msgpack": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/@msgpack/msgpack/-/msgpack-2.8.0.tgz",
      "integrity": "sha512-h9u4u/jiIRKbq25PM+zymTyW6bhTzELvOoUd+AvYriWOAKpLGnIamaET3pnHYoI5iYphAHBI4ayx0MehR+VVPQ==",
      "license": "ISC",
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@protobufjs/aspromise": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
      "integrity": "sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/base64": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
      "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/codegen": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
      "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/eventemitter": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
      "integrity": "sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/fetch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
      "integrity": "sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.1",
        "@protobufjs/inquire": "^1.1.0"
      }
    },
    "node_modules/@protobufjs/float": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
      "integrity": "sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/inquire": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
      "integrity": "sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/path": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
      "integrity": "sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/pool": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
      "integrity": "sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/utf8": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
      "integrity": "sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@react-dnd/asap": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@react-dnd/asap/-/asap-5.0.2.tgz",
      "integrity": "sha512-WLyfoHvxhs0V9U+GTsGilGgf2QsPl6ZZ44fnv0/b8T3nQyvzxidxsg/ZltbWssbsRDlYW8UKSQMTGotuTotZ6A==",
      "license": "MIT"
    },
    "node_modules/@react-dnd/invariant": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@react-dnd/invariant/-/invariant-4.0.2.tgz",
      "integrity": "sha512-xKCTqAK/FFauOM9Ta2pswIyT3D8AQlfrYdOi/toTPEhqCuAs1v5tcJ3Y08Izh1cJ5Jchwy9SeAXmMg6zrKs2iw==",
      "license": "MIT"
    },
    "node_modules/@react-dnd/shallowequal": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@react-dnd/shallowequal/-/shallowequal-4.0.2.tgz",
      "integrity": "sha512-/RVXdLvJxLg4QKvMoM5WlwNR9ViO9z8B/qPcc+C0Sa/teJY7QG7kJ441DwzOjMYEY7GmU4dj5EcGHIkKZiQZCA==",
      "license": "MIT"
    },
    "node_modules/@rollup/pluginutils": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-4.2.1.tgz",
      "integrity": "sha512-iKnFXr7NkdZAIHiIWE+BX5ULi/ucVFYWD6TbAV+rZctiRTY2PL6tsIKhoIOaoskiWAkgu+VsbXgUVDNLHf+InQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "estree-walker": "^2.0.1",
        "picomatch": "^2.2.2"
      },
      "engines": {
        "node": ">= 8.0.0"
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.34.9.tgz",
      "integrity": "sha512-qZdlImWXur0CFakn2BJ2znJOdqYZKiedEPEVNTBrpfPjc/YuTGcaYZcdmNFTkUj3DU0ZM/AElcM8Ybww3xVLzA==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.34.9.tgz",
      "integrity": "sha512-4KW7P53h6HtJf5Y608T1ISKvNIYLWRKMvfnG0c44M6In4DQVU58HZFEVhWINDZKp7FZps98G3gxwC1sb0wXUUg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.34.9.tgz",
      "integrity": "sha512-0CY3/K54slrzLDjOA7TOjN1NuLKERBgk9nY5V34mhmuu673YNb+7ghaDUs6N0ujXR7fz5XaS5Aa6d2TNxZd0OQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.34.9.tgz",
      "integrity": "sha512-eOojSEAi/acnsJVYRxnMkPFqcxSMFfrw7r2iD9Q32SGkb/Q9FpUY1UlAu1DH9T7j++gZ0lHjnm4OyH2vCI7l7Q==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.34.9.tgz",
      "integrity": "sha512-2lzjQPJbN5UnHm7bHIUKFMulGTQwdvOkouJDpPysJS+QFBGDJqcfh+CxxtG23Ik/9tEvnebQiylYoazFMAgrYw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.34.9.tgz",
      "integrity": "sha512-SLl0hi2Ah2H7xQYd6Qaiu01kFPzQ+hqvdYSoOtHYg/zCIFs6t8sV95kaoqjzjFwuYQLtOI0RZre/Ke0nPaQV+g==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.34.9.tgz",
      "integrity": "sha512-88I+D3TeKItrw+Y/2ud4Tw0+3CxQ2kLgu3QvrogZ0OfkmX/DEppehus7L3TS2Q4lpB+hYyxhkQiYPJ6Mf5/dPg==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.34.9.tgz",
      "integrity": "sha512-3qyfWljSFHi9zH0KgtEPG4cBXHDFhwD8kwg6xLfHQ0IWuH9crp005GfoUUh/6w9/FWGBwEHg3lxK1iHRN1MFlA==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.34.9.tgz",
      "integrity": "sha512-6TZjPHjKZUQKmVKMUowF3ewHxctrRR09eYyvT5eFv8w/fXarEra83A2mHTVJLA5xU91aCNOUnM+DWFMSbQ0Nxw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.34.9.tgz",
      "integrity": "sha512-LD2fytxZJZ6xzOKnMbIpgzFOuIKlxVOpiMAXawsAZ2mHBPEYOnLRK5TTEsID6z4eM23DuO88X0Tq1mErHMVq0A==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.34.9.tgz",
      "integrity": "sha512-dRAgTfDsn0TE0HI6cmo13hemKpVHOEyeciGtvlBTkpx/F65kTvShtY/EVyZEIfxFkV5JJTuQ9tP5HGBS0hfxIg==",
      "cpu": [
        "loong64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.34.9.tgz",
      "integrity": "sha512-PHcNOAEhkoMSQtMf+rJofwisZqaU8iQ8EaSps58f5HYll9EAY5BSErCZ8qBDMVbq88h4UxaNPlbrKqfWP8RfJA==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.34.9.tgz",
      "integrity": "sha512-Z2i0Uy5G96KBYKjeQFKbbsB54xFOL5/y1P5wNBsbXB8yE+At3oh0DVMjQVzCJRJSfReiB2tX8T6HUFZ2k8iaKg==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.34.9.tgz",
      "integrity": "sha512-U+5SwTMoeYXoDzJX5dhDTxRltSrIax8KWwfaaYcynuJw8mT33W7oOgz0a+AaXtGuvhzTr2tVKh5UO8GVANTxyQ==",
      "cpu": [
        "s390x"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.34.9.tgz",
      "integrity": "sha512-FwBHNSOjUTQLP4MG7y6rR6qbGw4MFeQnIBrMe161QGaQoBQLqSUEKlHIiVgF3g/mb3lxlxzJOpIBhaP+C+KP2A==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.34.9.tgz",
      "integrity": "sha512-cYRpV4650z2I3/s6+5/LONkjIz8MBeqrk+vPXV10ORBnshpn8S32bPqQ2Utv39jCiDcO2eJTuSlPXpnvmaIgRA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.34.9.tgz",
      "integrity": "sha512-z4mQK9dAN6byRA/vsSgQiPeuO63wdiDxZ9yg9iyX2QTzKuQM7T4xlBoeUP/J8uiFkqxkcWndWi+W7bXdPbt27Q==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.34.9.tgz",
      "integrity": "sha512-KB48mPtaoHy1AwDNkAJfHXvHp24H0ryZog28spEs0V48l3H1fr4i37tiyHsgKZJnCmvxsbATdZGBpbmxTE3a9w==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.34.9.tgz",
      "integrity": "sha512-AyleYRPU7+rgkMWbEh71fQlrzRfeP6SyMnRf9XX4fCdDPAJumdSBqYEcWPMzVQ4ScAl7E4oFfK0GUVn77xSwbw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@tailwindcss/forms": {
      "version": "0.5.10",
      "resolved": "https://registry.npmjs.org/@tailwindcss/forms/-/forms-0.5.10.tgz",
      "integrity": "sha512-utI1ONF6uf/pPNO68kmN1b8rEwNXv3czukalo8VtJH8ksIkZXr3Q3VYudZLkCsDd4Wku120uF02hYK25XGPorw==",
      "license": "MIT",
      "dependencies": {
        "mini-svg-data-uri": "^1.2.3"
      },
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || >= 3.0.0-alpha.1 || >= 4.0.0-alpha.20 || >= 4.0.0-beta.1"
      }
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.0.9.tgz",
      "integrity": "sha512-tOJvdI7XfJbARYhxX+0RArAhmuDcczTC46DGCEziqxzzbIaPnfYaIyRT31n4u8lROrsO7Q6u/K9bmQHL2uL1bQ==",
      "license": "MIT",
      "dependencies": {
        "enhanced-resolve": "^5.18.1",
        "jiti": "^2.4.2",
        "tailwindcss": "4.0.9"
      }
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.0.9.tgz",
      "integrity": "sha512-eLizHmXFqHswJONwfqi/WZjtmWZpIalpvMlNhTM99/bkHtUs6IqgI1XQ0/W5eO2HiRQcIlXUogI2ycvKhVLNcA==",
      "license": "MIT",
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.0.9",
        "@tailwindcss/oxide-darwin-arm64": "4.0.9",
        "@tailwindcss/oxide-darwin-x64": "4.0.9",
        "@tailwindcss/oxide-freebsd-x64": "4.0.9",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.0.9",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.0.9",
        "@tailwindcss/oxide-linux-arm64-musl": "4.0.9",
        "@tailwindcss/oxide-linux-x64-gnu": "4.0.9",
        "@tailwindcss/oxide-linux-x64-musl": "4.0.9",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.0.9",
        "@tailwindcss/oxide-win32-x64-msvc": "4.0.9"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.0.9.tgz",
      "integrity": "sha512-YBgy6+2flE/8dbtrdotVInhMVIxnHJPbAwa7U1gX4l2ThUIaPUp18LjB9wEH8wAGMBZUb//SzLtdXXNBHPUl6Q==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.0.9.tgz",
      "integrity": "sha512-pWdl4J2dIHXALgy2jVkwKBmtEb73kqIfMpYmcgESr7oPQ+lbcQ4+tlPeVXaSAmang+vglAfFpXQCOvs/aGSqlw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.0.9.tgz",
      "integrity": "sha512-4Dq3lKp0/C7vrRSkNPtBGVebEyWt9QPPlQctxJ0H3MDyiQYvzVYf8jKow7h5QkWNe8hbatEqljMj/Y0M+ERYJg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.0.9.tgz",
      "integrity": "sha512-k7U1RwRODta8x0uealtVt3RoWAWqA+D5FAOsvVGpYoI6ObgmnzqWW6pnVwz70tL8UZ/QXjeMyiICXyjzB6OGtQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.0.9.tgz",
      "integrity": "sha512-NDDjVweHz2zo4j+oS8y3KwKL5wGCZoXGA9ruJM982uVJLdsF8/1AeKvUwKRlMBpxHt1EdWJSAh8a0Mfhl28GlQ==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.0.9.tgz",
      "integrity": "sha512-jk90UZ0jzJl3Dy1BhuFfRZ2KP9wVKMXPjmCtY4U6fF2LvrjP5gWFJj5VHzfzHonJexjrGe1lMzgtjriuZkxagg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.0.9.tgz",
      "integrity": "sha512-3eMjyTC6HBxh9nRgOHzrc96PYh1/jWOwHZ3Kk0JN0Kl25BJ80Lj9HEvvwVDNTgPg154LdICwuFLuhfgH9DULmg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.0.9.tgz",
      "integrity": "sha512-v0D8WqI/c3WpWH1kq/HP0J899ATLdGZmENa2/emmNjubT0sWtEke9W9+wXeEoACuGAhF9i3PO5MeyditpDCiWQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.0.9.tgz",
      "integrity": "sha512-Kvp0TCkfeXyeehqLJr7otsc4hd/BUPfcIGrQiwsTVCfaMfjQZCG7DjI+9/QqPZha8YapLA9UoIcUILRYO7NE1Q==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.0.9.tgz",
      "integrity": "sha512-m3+60T/7YvWekajNq/eexjhV8z10rswcz4BC9bioJ7YaN+7K8W2AmLmG0B79H14m6UHE571qB0XsPus4n0QVgQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.0.9.tgz",
      "integrity": "sha512-dpc05mSlqkwVNOUjGu/ZXd5U1XNch1kHFJ4/cHkZFvaW1RzbHmRt24gvM8/HC6IirMxNarzVw4IXVtvrOoZtxA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/vite": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@tailwindcss/vite/-/vite-4.0.9.tgz",
      "integrity": "sha512-BIKJO+hwdIsN7V6I7SziMZIVHWWMsV/uCQKYEbeiGRDRld+TkqyRRl9+dQ0MCXbhcVr+D9T/qX2E84kT7V281g==",
      "license": "MIT",
      "dependencies": {
        "@tailwindcss/node": "4.0.9",
        "@tailwindcss/oxide": "4.0.9",
        "lightningcss": "^1.29.1",
        "tailwindcss": "4.0.9"
      },
      "peerDependencies": {
        "vite": "^5.2.0 || ^6"
      }
    },
    "node_modules/@types/cookie": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz",
      "integrity": "sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==",
      "license": "MIT"
    },
    "node_modules/@types/estree": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz",
      "integrity": "sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==",
      "license": "MIT"
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "22.13.8",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.13.8.tgz",
      "integrity": "sha512-G3EfaZS+iOGYWLLRCEAXdWK9my08oHNZ+FHluRiggIYJPOXzhOiDgpVCUHaUvyIC5/fj7C/p637jdzC666AOKQ==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.20.0"
      }
    },
    "node_modules/@types/prop-types": {
      "version": "15.7.14",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.14.tgz",
      "integrity": "sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/@types/react": {
      "version": "18.3.18",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.18.tgz",
      "integrity": "sha512-t4yC+vtgnkYjNSKlFx1jkAhH8LgTo2N/7Qvi83kdEaUtMDiwpbLAktKDaAMlRcJ5eSxZkH74eEGt1ky31d7kfQ==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "@types/prop-types": "*",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "18.3.5",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.5.tgz",
      "integrity": "sha512-P4t6saawp+b/dFrUr2cvkVsfvPguwsxtH6dNIYRllMsefqFzkZk5UIjzyDOv5g1dXIPdG4Sp1yCR4Z6RCUsG/Q==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^18.0.0"
      }
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-1.3.2.tgz",
      "integrity": "sha512-aurBNmMo0kz1O4qRoY+FM4epSA39y3ShWGuqfLRA/3z0oEJAdtoSfgA3aO98/PCCHAqMaduLxIxErWrVKIFzXA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/core": "^7.17.10",
        "@babel/plugin-transform-react-jsx": "^7.17.3",
        "@babel/plugin-transform-react-jsx-development": "^7.16.7",
        "@babel/plugin-transform-react-jsx-self": "^7.16.7",
        "@babel/plugin-transform-react-jsx-source": "^7.16.7",
        "@rollup/pluginutils": "^4.2.1",
        "react-refresh": "^0.13.0",
        "resolve": "^1.22.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/acorn": {
      "version": "8.14.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.14.0.tgz",
      "integrity": "sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "is-array-buffer": "^3.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-includes": {
      "version": "3.1.8",
      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz",
      "integrity": "sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "is-string": "^1.0.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlast": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flat": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
      "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flatmap": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
      "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.tosorted": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3",
        "es-errors": "^1.3.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/async-function": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.4.tgz",
      "integrity": "sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001688",
        "electron-to-chromium": "^1.5.73",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.1"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.3.tgz",
      "integrity": "sha512-YTd+6wGlNlPxSuri7Y6X8tY2dmm12UMH66RpKMhiX6rsk5wXXnYgbUcOt8kiS31/AjfoTOvCsE+w8nZQLQnzHA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001701",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001701.tgz",
      "integrity": "sha512-faRs/AW3jA9nTwmJBSO1PQ6L/EOgsB5HMQQq4iCu5zhPgVVgO/pZRHlmatwijZKetFw8/Pr4q6dEN8sJuq8qTw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chess.js": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/chess.js/-/chess.js-1.1.0.tgz",
      "integrity": "sha512-IfdeaJnpdU1LddIenp36O7Fz19nIxk3x4cznwo2Qf25T1XSeP85XRBrjWUsSpk1RpDeXdijraoLxXt3PCaudVg==",
      "license": "BSD-2-Clause"
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cookie": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-1.0.2.tgz",
      "integrity": "sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/inspect-js"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/debug": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.0.tgz",
      "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "license": "Apache-2.0",
      "bin": {
        "detect-libc": "bin/detect-libc.js"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/dnd-core": {
      "version": "16.0.1",
      "resolved": "https://registry.npmjs.org/dnd-core/-/dnd-core-16.0.1.tgz",
      "integrity": "sha512-HK294sl7tbw6F6IeuK16YSBUoorvHpY8RHO+9yFfaJyCDVb6n7PRcezrOEOa2SBCqiYpemh5Jx20ZcjKdFAVng==",
      "license": "MIT",
      "dependencies": {
        "@react-dnd/asap": "^5.0.1",
        "@react-dnd/invariant": "^4.0.1",
        "redux": "^4.2.0"
      }
    },
    "node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.109",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.109.tgz",
      "integrity": "sha512-AidaH9JETVRr9DIPGfp1kAarm/W6hRJTPuCnkF+2MqhF4KaAgRIcBc8nvjk+YMXZhwfISof/7WG29eS4iGxQLQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.1",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.1.tgz",
      "integrity": "sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.23.9",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.9.tgz",
      "integrity": "sha512-py07lI0wjxAC/DcfK1S6G7iANonniZwTISvdPzk9hzeH0IZIshbuuFxLIU96OyF89Yb9hiqWn8M/bY83KY5vzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.2",
        "arraybuffer.prototype.slice": "^1.0.4",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "data-view-buffer": "^1.0.2",
        "data-view-byte-length": "^1.0.2",
        "data-view-byte-offset": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-set-tostringtag": "^2.1.0",
        "es-to-primitive": "^1.3.0",
        "function.prototype.name": "^1.1.8",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.0",
        "get-symbol-description": "^1.1.0",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "internal-slot": "^1.1.0",
        "is-array-buffer": "^3.0.5",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.2",
        "is-regex": "^1.2.1",
        "is-shared-array-buffer": "^1.0.4",
        "is-string": "^1.1.1",
        "is-typed-array": "^1.1.15",
        "is-weakref": "^1.1.0",
        "math-intrinsics": "^1.1.0",
        "object-inspect": "^1.13.3",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.7",
        "own-keys": "^1.0.1",
        "regexp.prototype.flags": "^1.5.3",
        "safe-array-concat": "^1.1.3",
        "safe-push-apply": "^1.0.0",
        "safe-regex-test": "^1.1.0",
        "set-proto": "^1.0.0",
        "string.prototype.trim": "^1.2.10",
        "string.prototype.trimend": "^1.0.9",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-length": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4",
        "typed-array-length": "^1.0.7",
        "unbox-primitive": "^1.1.0",
        "which-typed-array": "^1.1.18"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-iterator-helpers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
      "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-set-tostringtag": "^2.0.3",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.6",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "iterator.prototype": "^1.1.4",
        "safe-array-concat": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
      "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7",
        "is-date-object": "^1.0.5",
        "is-symbol": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/esbuild": {
      "version": "0.25.0",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.0.tgz",
      "integrity": "sha512-BXq5mqc8ltbaN34cDqWuYKyNhX8D/Z0J1xdtdQ8UcIIIyJyz+ZMKUt58tF3SrZ85jcfN/PZYhjR5uDQAYNVbuw==",
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.0",
        "@esbuild/android-arm": "0.25.0",
        "@esbuild/android-arm64": "0.25.0",
        "@esbuild/android-x64": "0.25.0",
        "@esbuild/darwin-arm64": "0.25.0",
        "@esbuild/darwin-x64": "0.25.0",
        "@esbuild/freebsd-arm64": "0.25.0",
        "@esbuild/freebsd-x64": "0.25.0",
        "@esbuild/linux-arm": "0.25.0",
        "@esbuild/linux-arm64": "0.25.0",
        "@esbuild/linux-ia32": "0.25.0",
        "@esbuild/linux-loong64": "0.25.0",
        "@esbuild/linux-mips64el": "0.25.0",
        "@esbuild/linux-ppc64": "0.25.0",
        "@esbuild/linux-riscv64": "0.25.0",
        "@esbuild/linux-s390x": "0.25.0",
        "@esbuild/linux-x64": "0.25.0",
        "@esbuild/netbsd-arm64": "0.25.0",
        "@esbuild/netbsd-x64": "0.25.0",
        "@esbuild/openbsd-arm64": "0.25.0",
        "@esbuild/openbsd-x64": "0.25.0",
        "@esbuild/sunos-x64": "0.25.0",
        "@esbuild/win32-arm64": "0.25.0",
        "@esbuild/win32-ia32": "0.25.0",
        "@esbuild/win32-x64": "0.25.0"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "9.21.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.21.0.tgz",
      "integrity": "sha512-KjeihdFqTPhOMXTt7StsDxriV4n66ueuF/jfPNC3j/lduHwr/ijDwJMsF+wyMJethgiKi5wniIE243vi07d3pg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.19.2",
        "@eslint/core": "^0.12.0",
        "@eslint/eslintrc": "^3.3.0",
        "@eslint/js": "9.21.0",
        "@eslint/plugin-kit": "^0.2.7",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.2.0",
        "eslint-visitor-keys": "^4.2.0",
        "espree": "^10.3.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-plugin-react": {
      "version": "7.37.4",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.4.tgz",
      "integrity": "sha512-BGP0jRmfYyvOyvMoRX/uoUeW+GqNj9y16bPQzqAHf3AYII/tDs+jMN0dBVkl88/OZwNGwrVFxE7riHsXVfy/LQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.8",
        "array.prototype.findlast": "^1.2.5",
        "array.prototype.flatmap": "^1.3.3",
        "array.prototype.tosorted": "^1.1.4",
        "doctrine": "^2.1.0",
        "es-iterator-helpers": "^1.2.1",
        "estraverse": "^5.3.0",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
        "minimatch": "^3.1.2",
        "object.entries": "^1.1.8",
        "object.fromentries": "^2.0.8",
        "object.values": "^1.2.1",
        "prop-types": "^15.8.1",
        "resolve": "^2.0.0-next.5",
        "semver": "^6.3.1",
        "string.prototype.matchall": "^4.0.12",
        "string.prototype.repeat": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
      }
    },
    "node_modules/eslint-plugin-react-hooks": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
      }
    },
    "node_modules/eslint-plugin-react-refresh": {
      "version": "0.4.19",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.19.tgz",
      "integrity": "sha512-eyy8pcr/YxSYjBoqIFSrlbn9i/xvxUFa8CjzAYo9cFjgGXqq1hyjihcpZvxRLalpaWmueWR81xn7vuKmAFijDQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "eslint": ">=8.40"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/resolve": {
      "version": "2.0.0-next.5",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.2.0.tgz",
      "integrity": "sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
      "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree": {
      "version": "10.3.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.3.0.tgz",
      "integrity": "sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.14.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/eventemitter3": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz",
      "integrity": "sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==",
      "license": "MIT"
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "license": "MIT"
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/faye-websocket": {
      "version": "0.11.4",
      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.4.tgz",
      "integrity": "sha512-CzbClwlXAuiRQAlUyfqPgvPoNKTckTPGfwZV4ZdAhVcP2lh9KUxJg2b5GkE7XbjKQ3YJnQ9z6D9ntLAlB+tP8g==",
      "license": "Apache-2.0",
      "dependencies": {
        "websocket-driver": ">=0.5.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/firebase": {
      "version": "11.4.0",
      "resolved": "https://registry.npmjs.org/firebase/-/firebase-11.4.0.tgz",
      "integrity": "sha512-Z6kwhWIPDgIm0+NUEQxwjH14hMP7t42WSFnf/78R0Vh59VovLYTOCTM3MIdY3jlSZ9uKz56FhXrvsNXNhAn/Xg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/analytics": "0.10.12",
        "@firebase/analytics-compat": "0.2.18",
        "@firebase/app": "0.11.2",
        "@firebase/app-check": "0.8.12",
        "@firebase/app-check-compat": "0.3.19",
        "@firebase/app-compat": "0.2.51",
        "@firebase/app-types": "0.9.3",
        "@firebase/auth": "1.9.1",
        "@firebase/auth-compat": "0.5.19",
        "@firebase/data-connect": "0.3.1",
        "@firebase/database": "1.0.13",
        "@firebase/database-compat": "2.0.4",
        "@firebase/firestore": "4.7.9",
        "@firebase/firestore-compat": "0.3.44",
        "@firebase/functions": "0.12.3",
        "@firebase/functions-compat": "0.3.20",
        "@firebase/installations": "0.6.13",
        "@firebase/installations-compat": "0.2.13",
        "@firebase/messaging": "0.12.17",
        "@firebase/messaging-compat": "0.2.17",
        "@firebase/performance": "0.7.1",
        "@firebase/performance-compat": "0.2.14",
        "@firebase/remote-config": "0.6.0",
        "@firebase/remote-config-compat": "0.2.13",
        "@firebase/storage": "0.13.7",
        "@firebase/storage-compat": "0.3.17",
        "@firebase/util": "1.11.0",
        "@firebase/vertexai": "1.1.0"
      }
    },
    "node_modules/firebase/node_modules/@firebase/auth": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.9.1.tgz",
      "integrity": "sha512-9KKo5SNVkyJzftsW+daS+PGDbeJ+MFJWXQFHDqqPPH3acWHtiNnGHH5HGpIJErEELrsm9xMPie5zfZ0XpGU8+w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.6.13",
        "@firebase/logger": "0.4.4",
        "@firebase/util": "1.11.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@react-native-async-storage/async-storage": "^1.18.1"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/framer-motion": {
      "version": "12.5.0",
      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-12.5.0.tgz",
      "integrity": "sha512-buPlioFbH9/W7rDzYh1C09AuZHAk2D1xTA1BlounJ2Rb9aRg84OXexP0GLd+R83v0khURdMX7b5MKnGTaSg5iA==",
      "license": "MIT",
      "dependencies": {
        "motion-dom": "^12.5.0",
        "motion-utils": "^12.5.0",
        "tslib": "^2.4.0"
      },
      "peerDependencies": {
        "@emotion/is-prop-valid": "*",
        "react": "^18.0.0 || ^19.0.0",
        "react-dom": "^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/is-prop-valid": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "functions-have-names": "^1.2.3",
        "hasown": "^2.0.2",
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "15.15.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-15.15.0.tgz",
      "integrity": "sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/has-bigints": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hoist-non-react-statics": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "react-is": "^16.7.0"
      }
    },
    "node_modules/http-parser-js": {
      "version": "0.5.9",
      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.9.tgz",
      "integrity": "sha512-n1XsPy3rXVxlqxVioEWdC+0+M+SQw0DpJynwtOPo1X+ZlvdzTLtDBIJJlDQTnwZIFJrZSzSGmIOUdP8tu+SgLw==",
      "license": "MIT"
    },
    "node_modules/idb": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/idb/-/idb-7.1.1.tgz",
      "integrity": "sha512-gchesWBzyvGHRO9W8tzUWFDycow5gwjvFKfyV9FF32Y7F50yZMp7mP+T2mJIWFx49zicqyC4uefHM17o6xKIVQ==",
      "license": "ISC"
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/internal-slot": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-async-function": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "async-function": "^1.0.0",
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.1",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bigint": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-bigints": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-finalizationregistry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-map": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-set": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-string": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-symbols": "^1.1.0",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakmap": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakset": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/iterator.prototype": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
      "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "get-proto": "^1.0.0",
        "has-symbols": "^1.1.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/jiti": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
      "integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
      "license": "MIT",
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/jsx-ast-utils": {
      "version": "3.3.5",
      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.6",
        "array.prototype.flat": "^1.3.1",
        "object.assign": "^4.1.4",
        "object.values": "^1.1.6"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lightningcss": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.29.1.tgz",
      "integrity": "sha512-FmGoeD4S05ewj+AkhTY+D+myDvXI6eL27FjHIjoyUkO/uw7WZD1fBVs0QxeYWa7E17CUHJaYX/RUGISCtcrG4Q==",
      "license": "MPL-2.0",
      "dependencies": {
        "detect-libc": "^1.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.29.1",
        "lightningcss-darwin-x64": "1.29.1",
        "lightningcss-freebsd-x64": "1.29.1",
        "lightningcss-linux-arm-gnueabihf": "1.29.1",
        "lightningcss-linux-arm64-gnu": "1.29.1",
        "lightningcss-linux-arm64-musl": "1.29.1",
        "lightningcss-linux-x64-gnu": "1.29.1",
        "lightningcss-linux-x64-musl": "1.29.1",
        "lightningcss-win32-arm64-msvc": "1.29.1",
        "lightningcss-win32-x64-msvc": "1.29.1"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.29.1.tgz",
      "integrity": "sha512-HtR5XJ5A0lvCqYAoSv2QdZZyoHNttBpa5EP9aNuzBQeKGfbyH5+UipLWvVzpP4Uml5ej4BYs5I9Lco9u1fECqw==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.29.1.tgz",
      "integrity": "sha512-k33G9IzKUpHy/J/3+9MCO4e+PzaFblsgBjSGlpAaFikeBFm8B/CkO3cKU9oI4g+fjS2KlkLM/Bza9K/aw8wsNA==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.29.1.tgz",
      "integrity": "sha512-0SUW22fv/8kln2LnIdOCmSuXnxgxVC276W5KLTwoehiO0hxkacBxjHOL5EtHD8BAXg2BvuhsJPmVMasvby3LiQ==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.29.1.tgz",
      "integrity": "sha512-sD32pFvlR0kDlqsOZmYqH/68SqUMPNj+0pucGxToXZi4XZgZmqeX/NkxNKCPsswAXU3UeYgDSpGhu05eAufjDg==",
      "cpu": [
        "arm"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.29.1.tgz",
      "integrity": "sha512-0+vClRIZ6mmJl/dxGuRsE197o1HDEeeRk6nzycSy2GofC2JsY4ifCRnvUWf/CUBQmlrvMzt6SMQNMSEu22csWQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.29.1.tgz",
      "integrity": "sha512-UKMFrG4rL/uHNgelBsDwJcBqVpzNJbzsKkbI3Ja5fg00sgQnHw/VrzUTEc4jhZ+AN2BvQYz/tkHu4vt1kLuJyw==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.29.1.tgz",
      "integrity": "sha512-u1S+xdODy/eEtjADqirA774y3jLcm8RPtYztwReEXoZKdzgsHYPl0s5V52Tst+GKzqjebkULT86XMSxejzfISw==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.29.1.tgz",
      "integrity": "sha512-L0Tx0DtaNUTzXv0lbGCLB/c/qEADanHbu4QdcNOXLIe1i8i22rZRpbT3gpWYsCh9aSL9zFujY/WmEXIatWvXbw==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.29.1.tgz",
      "integrity": "sha512-QoOVnkIEFfbW4xPi+dpdft/zAKmgLgsRHfJalEPYuJDOWf7cLQzYg0DEh8/sn737FaeMJxHZRc1oBreiwZCjog==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.29.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.29.1.tgz",
      "integrity": "sha512-NygcbThNBe4JElP+olyTI/doBNGJvLs3bFCRPdvuCcxZCcCZ71B858IHpdm7L1btZex0FvCmM17FK98Y9MRy1Q==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash.camelcase": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
      "integrity": "sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA==",
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/long": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/long/-/long-5.3.1.tgz",
      "integrity": "sha512-ka87Jz3gcx/I7Hal94xaN2tZEOPoUOEVftkQqZx2EeQRN7LGdfLlI3FvZ+7WDplm+vK2Urx9ULrvSowtdCieng==",
      "license": "Apache-2.0"
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/lucide-react": {
      "version": "0.483.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.483.0.tgz",
      "integrity": "sha512-WldsY17Qb/T3VZdMnVQ9C3DDIP7h1ViDTHVdVGnLZcvHNg30zH/MTQ04RTORjexoGmpsXroiQXZ4QyR0kBy0FA==",
      "license": "ISC",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/mini-svg-data-uri": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/mini-svg-data-uri/-/mini-svg-data-uri-1.4.4.tgz",
      "integrity": "sha512-r9deDe9p5FJUPZAk3A59wGH7Ii9YrjjWw0jmw/liSbHl2CHiyXj6FcDXDu2K3TjVAXqiJdaw3xxwlZZr9E6nHg==",
      "license": "MIT",
      "bin": {
        "mini-svg-data-uri": "cli.js"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/motion-dom": {
      "version": "12.5.0",
      "resolved": "https://registry.npmjs.org/motion-dom/-/motion-dom-12.5.0.tgz",
      "integrity": "sha512-uH2PETDh7m+Hjd1UQQ56yHqwn83SAwNjimNPE/kC+Kds0t4Yh7+29rfo5wezVFpPOv57U4IuWved5d1x0kNhbQ==",
      "license": "MIT",
      "dependencies": {
        "motion-utils": "^12.5.0"
      }
    },
    "node_modules/motion-utils": {
      "version": "12.5.0",
      "resolved": "https://registry.npmjs.org/motion-utils/-/motion-utils-12.5.0.tgz",
      "integrity": "sha512-+hFFzvimn0sBMP9iPxBa9OtRX35ZQ3py0UHnb8U29VD+d8lQ8zH3dTygJWqK7av2v6yhg7scj9iZuvTS0f4+SA==",
      "license": "MIT"
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/nanoid": {
      "version": "3.3.8",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.8.tgz",
      "integrity": "sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0",
        "has-symbols": "^1.1.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.entries": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.8.tgz",
      "integrity": "sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.fromentries": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.values": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
      "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/own-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.2.6",
        "object-keys": "^1.1.1",
        "safe-push-apply": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/peerjs": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/peerjs/-/peerjs-1.5.4.tgz",
      "integrity": "sha512-yFsoLMnurJKlQbx6kVSBpOp+AlNldY1JQS2BrSsHLKCZnq6t7saHleuHM5svuLNbQkUJXHLF3sKOJB1K0xulOw==",
      "license": "MIT",
      "dependencies": {
        "@msgpack/msgpack": "^2.8.0",
        "eventemitter3": "^4.0.7",
        "peerjs-js-binarypack": "^2.1.0",
        "webrtc-adapter": "^9.0.0"
      },
      "engines": {
        "node": ">= 14"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/peer"
      }
    },
    "node_modules/peerjs-js-binarypack": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/peerjs-js-binarypack/-/peerjs-js-binarypack-2.1.0.tgz",
      "integrity": "sha512-YIwCC+pTzp3Bi8jPI9UFKO0t0SLo6xALnHkiNt/iUFmUUZG0fEEmEyFKvjsDKweiFitzHRyhuh6NvyJZ4nNxMg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/peer"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.3",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.3.tgz",
      "integrity": "sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.8",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/protobufjs": {
      "version": "7.4.0",
      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-7.4.0.tgz",
      "integrity": "sha512-mRUWCc3KUU4w1jU8sGxICXH/gNS94DvI1gxqDvBzhj1JpcsimQkYiOJfwsPUykUI5ZaspFbSgmBLER8IrQ3tqw==",
      "hasInstallScript": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.2",
        "@protobufjs/base64": "^1.1.2",
        "@protobufjs/codegen": "^2.0.4",
        "@protobufjs/eventemitter": "^1.1.0",
        "@protobufjs/fetch": "^1.1.0",
        "@protobufjs/float": "^1.0.2",
        "@protobufjs/inquire": "^1.1.0",
        "@protobufjs/path": "^1.1.2",
        "@protobufjs/pool": "^1.1.0",
        "@protobufjs/utf8": "^1.1.0",
        "@types/node": ">=13.7.0",
        "long": "^5.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/react": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-chessboard": {
      "version": "4.7.2",
      "resolved": "https://registry.npmjs.org/react-chessboard/-/react-chessboard-4.7.2.tgz",
      "integrity": "sha512-aOWWf+Qnsa9HIsT08PK4ORXLR8pP82DgidpHmQnjnI3GrudqCCE2WqNZe4j3tSQ0kI733qFjhqu+GFWhuG/QdA==",
      "license": "MIT",
      "dependencies": {
        "react-dnd": "^16.0.1",
        "react-dnd-html5-backend": "^16.0.1",
        "react-dnd-touch-backend": "^16.0.1"
      },
      "peerDependencies": {
        "react": ">=16.14.0",
        "react-dom": ">=16.14.0"
      }
    },
    "node_modules/react-dnd": {
      "version": "16.0.1",
      "resolved": "https://registry.npmjs.org/react-dnd/-/react-dnd-16.0.1.tgz",
      "integrity": "sha512-QeoM/i73HHu2XF9aKksIUuamHPDvRglEwdHL4jsp784BgUuWcg6mzfxT0QDdQz8Wj0qyRKx2eMg8iZtWvU4E2Q==",
      "license": "MIT",
      "dependencies": {
        "@react-dnd/invariant": "^4.0.1",
        "@react-dnd/shallowequal": "^4.0.1",
        "dnd-core": "^16.0.1",
        "fast-deep-equal": "^3.1.3",
        "hoist-non-react-statics": "^3.3.2"
      },
      "peerDependencies": {
        "@types/hoist-non-react-statics": ">= 3.3.1",
        "@types/node": ">= 12",
        "@types/react": ">= 16",
        "react": ">= 16.14"
      },
      "peerDependenciesMeta": {
        "@types/hoist-non-react-statics": {
          "optional": true
        },
        "@types/node": {
          "optional": true
        },
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-dnd-html5-backend": {
      "version": "16.0.1",
      "resolved": "https://registry.npmjs.org/react-dnd-html5-backend/-/react-dnd-html5-backend-16.0.1.tgz",
      "integrity": "sha512-Wu3dw5aDJmOGw8WjH1I1/yTH+vlXEL4vmjk5p+MHxP8HuHJS1lAGeIdG/hze1AvNeXWo/JgULV87LyQOr+r5jw==",
      "license": "MIT",
      "dependencies": {
        "dnd-core": "^16.0.1"
      }
    },
    "node_modules/react-dnd-touch-backend": {
      "version": "16.0.1",
      "resolved": "https://registry.npmjs.org/react-dnd-touch-backend/-/react-dnd-touch-backend-16.0.1.tgz",
      "integrity": "sha512-NonoCABzzjyWGZuDxSG77dbgMZ2Wad7eQiCd/ECtsR2/NBLTjGksPUx9UPezZ1nQ/L7iD130Tz3RUshL/ClKLA==",
      "license": "MIT",
      "dependencies": {
        "@react-dnd/invariant": "^4.0.1",
        "dnd-core": "^16.0.1"
      }
    },
    "node_modules/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.2"
      },
      "peerDependencies": {
        "react": "^18.3.1"
      }
    },
    "node_modules/react-icons": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.5.0.tgz",
      "integrity": "sha512-MEFcXdkP3dLo8uumGI5xN3lDFNsRtrjbOEKDLD7yv76v4wpnEq2Lt2qeHaQOr34I/wPN3s3+N08WkQ+CW37Xiw==",
      "license": "MIT",
      "peerDependencies": {
        "react": "*"
      }
    },
    "node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/react-refresh": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.13.0.tgz",
      "integrity": "sha512-XP8A9BT0CpRBD+NYLLeIhld/RqG9+gktUjW1FkE+Vm7OCinbG1SshcK5tb9ls4kzvjZr9mOQc7HYgBngEyPAXg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-router": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-7.2.0.tgz",
      "integrity": "sha512-fXyqzPgCPZbqhrk7k3hPcCpYIlQ2ugIXDboHUzhJISFVy2DEPsmHgN588MyGmkIOv3jDgNfUE3kJi83L28s/LQ==",
      "license": "MIT",
      "dependencies": {
        "@types/cookie": "^0.6.0",
        "cookie": "^1.0.1",
        "set-cookie-parser": "^2.6.0",
        "turbo-stream": "2.4.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "react": ">=18",
        "react-dom": ">=18"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/react-router-dom": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-7.2.0.tgz",
      "integrity": "sha512-cU7lTxETGtQRQbafJubvZKHEn5izNABxZhBY0Jlzdv0gqQhCPQt2J8aN5ZPjS6mQOXn5NnirWNh+FpE8TTYN0Q==",
      "license": "MIT",
      "dependencies": {
        "react-router": "7.2.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "react": ">=18",
        "react-dom": ">=18"
      }
    },
    "node_modules/redux": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/redux/-/redux-4.2.1.tgz",
      "integrity": "sha512-LAUYz4lc+Do8/g7aeRa8JkyDErK6ekstQaqWQrNRW//MY1TvCEpMtpTWvlQ+FPbWCx+Xixu/6SHt5N0HR+SB4w==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.9.2"
      }
    },
    "node_modules/reflect.getprototypeof": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.1",
        "which-builtin-type": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regenerator-runtime": {
      "version": "0.14.1",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz",
      "integrity": "sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==",
      "license": "MIT"
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/rollup": {
      "version": "4.34.9",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.34.9.tgz",
      "integrity": "sha512-nF5XYqWWp9hx/LrpC8sZvvvmq0TeTjQgaZHYmAgwysT9nh8sWnZhBnM8ZyVbbJFIQBLwHDNoMqsBZBbUo4U8sQ==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "1.0.6"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.34.9",
        "@rollup/rollup-android-arm64": "4.34.9",
        "@rollup/rollup-darwin-arm64": "4.34.9",
        "@rollup/rollup-darwin-x64": "4.34.9",
        "@rollup/rollup-freebsd-arm64": "4.34.9",
        "@rollup/rollup-freebsd-x64": "4.34.9",
        "@rollup/rollup-linux-arm-gnueabihf": "4.34.9",
        "@rollup/rollup-linux-arm-musleabihf": "4.34.9",
        "@rollup/rollup-linux-arm64-gnu": "4.34.9",
        "@rollup/rollup-linux-arm64-musl": "4.34.9",
        "@rollup/rollup-linux-loongarch64-gnu": "4.34.9",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.34.9",
        "@rollup/rollup-linux-riscv64-gnu": "4.34.9",
        "@rollup/rollup-linux-s390x-gnu": "4.34.9",
        "@rollup/rollup-linux-x64-gnu": "4.34.9",
        "@rollup/rollup-linux-x64-musl": "4.34.9",
        "@rollup/rollup-win32-arm64-msvc": "4.34.9",
        "@rollup/rollup-win32-ia32-msvc": "4.34.9",
        "@rollup/rollup-win32-x64-msvc": "4.34.9",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "has-symbols": "^1.1.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-push-apply": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/scheduler": {
      "version": "0.23.2",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/sdp": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/sdp/-/sdp-3.2.0.tgz",
      "integrity": "sha512-d7wDPgDV3DDiqulJjKiV2865wKsJ34YI+NDREbm+FySq6WuKOikwyNQcm+doLAZ1O6ltdO0SeKle2xMpN3Brgw==",
      "license": "MIT"
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/set-cookie-parser": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",
      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==",
      "license": "MIT"
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-proto": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string.prototype.matchall": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
      "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "regexp.prototype.flags": "^1.5.3",
        "set-function-name": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.repeat": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.5"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.10",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-data-property": "^1.1.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-object-atoms": "^1.0.0",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tailwindcss": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.0.9.tgz",
      "integrity": "sha512-12laZu+fv1ONDRoNR9ipTOpUD7RN9essRVkX36sjxuRUInpN7hIiHN4lBd/SIFjbISvnXzp8h/hXzmU8SQQYhw==",
      "license": "MIT"
    },
    "node_modules/tapable": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.1.tgz",
      "integrity": "sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/turbo-stream": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/turbo-stream/-/turbo-stream-2.4.0.tgz",
      "integrity": "sha512-FHncC10WpBd2eOmGwpmQsWLDoK4cqsA/UT/GqNoaKOQnT8uzhtCbg3EoUDMvqpOSAI0S26mr0rkjzbOO6S3v1g==",
      "license": "ISC"
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.15",
        "reflect.getprototypeof": "^1.0.9"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0",
        "reflect.getprototypeof": "^1.0.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.1.0",
        "which-boxed-primitive": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/undici-types": {
      "version": "6.20.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.20.0.tgz",
      "integrity": "sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==",
      "license": "MIT"
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/uuid": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-11.1.0.tgz",
      "integrity": "sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/esm/bin/uuid"
      }
    },
    "node_modules/vite": {
      "version": "6.2.6",
      "resolved": "https://registry.npmjs.org/vite/-/vite-6.2.6.tgz",
      "integrity": "sha512-9xpjNl3kR4rVDZgPNdTL0/c6ao4km69a/2ihNQbcANz8RuCOK3hQBmLSJf3bRKVQjVMda+YvizNE8AwvogcPbw==",
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.25.0",
        "postcss": "^8.5.3",
        "rollup": "^4.30.1"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
        "jiti": ">=1.21.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.16.0",
        "tsx": "^4.8.1",
        "yaml": "^2.4.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "jiti": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "tsx": {
          "optional": true
        },
        "yaml": {
          "optional": true
        }
      }
    },
    "node_modules/web-vitals": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/web-vitals/-/web-vitals-4.2.4.tgz",
      "integrity": "sha512-r4DIlprAGwJ7YM11VZp4R884m0Vmgr6EAKe3P+kO0PPj3Unqyvv59rczf6UiGcb9Z8QxZVcqKNwv/g0WNdWwsw==",
      "license": "Apache-2.0"
    },
    "node_modules/webrtc-adapter": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/webrtc-adapter/-/webrtc-adapter-9.0.1.tgz",
      "integrity": "sha512-1AQO+d4ElfVSXyzNVTOewgGT/tAomwwztX/6e3totvyyzXPvXIIuUUjAmyZGbKBKbZOXauuJooZm3g6IuFuiNQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "sdp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0",
        "npm": ">=3.10.0"
      }
    },
    "node_modules/websocket-driver": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.4.tgz",
      "integrity": "sha512-b17KeDIQVjvb0ssuSDF2cYXSg2iztliJ4B9WdsuB6J952qCPKmnVq4DyW5motImXHDC1cBT/1UezrJVsKw5zjg==",
      "license": "Apache-2.0",
      "dependencies": {
        "http-parser-js": ">=0.5.1",
        "safe-buffer": ">=5.1.0",
        "websocket-extensions": ">=0.1.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/websocket-extensions": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.4.tgz",
      "integrity": "sha512-OqedPIGOfsDlo31UNwYbCFMSaO9m9G/0faIHj5/dZFDMFqPTcx6UwqyOy3COEaEOg/9VsGIpdqn62W5KhoKSpg==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-bigint": "^1.1.0",
        "is-boolean-object": "^1.2.1",
        "is-number-object": "^1.1.1",
        "is-string": "^1.1.1",
        "is-symbol": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "function.prototype.name": "^1.1.6",
        "has-tostringtag": "^1.0.2",
        "is-async-function": "^2.0.0",
        "is-date-object": "^1.1.0",
        "is-finalizationregistry": "^1.1.0",
        "is-generator-function": "^1.0.10",
        "is-regex": "^1.2.1",
        "is-weakref": "^1.0.2",
        "isarray": "^2.0.5",
        "which-boxed-primitive": "^1.1.0",
        "which-collection": "^1.0.2",
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-collection": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-map": "^2.0.3",
        "is-set": "^2.0.3",
        "is-weakmap": "^2.0.2",
        "is-weakset": "^2.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.18",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.18.tgz",
      "integrity": "sha512-qEcY+KJYlWyLH9vNbsr6/5j59AXk5ni5aakf8ldzBvGde6Iz4sxZGkJyWSAueTG7QhOvNRYb1lDdFmL5Td0QKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  }
}


================================================================================

Filename: package.json
Content:
{
  "name": "portal-gambit-frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --host",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/vite": "^4.0.3",
    "chess.js": "^1.0.0",
    "firebase": "^11.2.0",
    "framer-motion": "^12.5.0",
    "lucide-react": "^0.483.0",
    "peerjs": "^1.5.4",
    "react": "^18.3.1",
    "react-chessboard": "^4.7.2",
    "react-dom": "^18.3.1",
    "react-icons": "^5.5.0",
    "react-router-dom": "^7.1.3",
    "tailwindcss": "^4.0.3",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@types/react": "^18.3.18",
    "@types/react-dom": "^18.3.5",
    "@vitejs/plugin-react": "^1.3.2",
    "eslint": "^9.17.0",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.16",
    "globals": "^15.14.0",
    "vite": "^6.2.6"
  }
}


================================================================================

Filename: public/assets/pieces/b_b.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M26.314 16.8839C25.9121 15.7797 25.6923 14.5878 25.6923 13.3462C25.6923 7.63212 30.3244 3 36.0385 3C41.7525 3 46.3846 7.63212 46.3846 13.3462C46.3846 15.0199 45.9846 16.6065 45.2755 18.0095C46.2959 18.0801 47.2874 18.5398 48.0103 19.366C51.9379 23.8547 55.375 30.2548 55.375 37.6731C55.375 42.9766 53.5491 46.9066 51.0819 49.7383L55.7679 50.5601C57.6813 50.8957 59.0769 52.5574 59.0769 54.5V62C59.0769 63.0609 58.6555 64.0783 57.9053 64.8284C57.1552 65.5786 56.1378 66 55.0769 66L17 66C14.7909 66 13 64.2091 13 62V54.5C13 52.5597 14.3925 50.8992 16.3032 50.5612L20.5303 49.8134C18.0294 46.9764 16.1731 43.0244 16.1731 37.6731C16.1731 31.8853 18.416 26.8449 21.0466 22.9821C22.7001 20.5541 24.5721 18.4927 26.314 16.8839Z" fill="#F4F7FA"/>
<path d="M38 37.1442H34C34 29.7994 36.2277 22.4669 41.1561 17.0997C41.9284 16.0485 42.3846 14.7506 42.3846 13.3462C42.3846 9.84126 39.5434 7 36.0385 7C32.5336 7 29.6923 9.84126 29.6923 13.3462C29.6923 15.0754 30.384 16.6431 31.5056 17.7877C27.5414 20.6138 20.1731 28.1889 20.1731 37.6731C20.1731 47.2443 27.6772 51.1192 31.6139 51.9147L17 54.5V62L55.0769 62V54.5L40.1165 51.8762C44.0977 50.9999 51.375 47.0985 51.375 37.6731C51.375 31.5015 48.5 26 45 22C41.1561 25 38 32 38 37.1442Z" fill="#34364C"/>
</svg>


================================================================================

Filename: public/assets/pieces/b_k.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M30.0019 3.87506C30.0694 1.71562 31.8395 0 34 0H40C42.1605 0 43.9306 1.71562 43.998 3.87506L44.0332 5H46C48.2091 5 50 6.79086 50 9V11.4261C54.3601 10.4394 59.0663 11.0984 63.0607 14.4271C71.3589 21.3423 70.5954 35.8381 60.7472 43.7669C58.3706 45.6803 56.5035 47.2665 55.2178 48.901C54.9245 49.2739 54.6732 49.6347 54.4617 49.9878L58.5156 50.5361C60.4994 50.8044 61.9795 52.4981 61.9795 54.5V62C61.9795 64.2091 60.1886 66 57.9795 66H16.0205C13.8114 66 12.0205 64.2091 12.0205 62V54.5C12.0205 52.4981 13.5005 50.8044 15.4844 50.5361L19.5383 49.9878C19.3268 49.6347 19.0755 49.2739 18.7822 48.901C17.4965 47.2665 15.6294 45.6803 13.2528 43.7669C3.40461 35.8381 2.64108 21.3423 10.9392 14.4271C14.9336 11.0984 19.6398 10.4394 24 11.4261V9C24 6.79086 25.7908 5 28 5H29.9668L30.0019 3.87506Z" fill="#F4F7FA"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M34 4H40L40.1562 9H46V15H40.3437L40.6185 21.793C40.7282 21.6638 40.8411 21.5372 40.9574 21.4135C46.4206 15.6071 54.5207 12.5172 60.5 17.5C66.5 22.5 66.5 34 58.2387 40.6512C53.559 44.4188 49.3673 48.0509 49.5739 53.3632L57.9795 54.5V62H16.0205V54.5L24.4261 53.3632C24.6327 48.0509 20.441 44.4188 15.7613 40.6512C7.5 34 7.5 22.5 13.5 17.5C19.4793 12.5172 27.5794 15.6071 33.0426 21.4135C33.1589 21.5372 33.2718 21.6638 33.3815 21.793L33.6562 15H28V9H33.8437L34 4ZM28.348 26.9731C32.0147 32.9791 32.5 40 32.5 43.0532C30.6621 43.0565 23.7338 40.0085 20.0656 35.0046C17.4248 31.4022 16.7362 26.0575 19 23.9825C21.2638 21.9075 26.0563 23.2194 28.348 26.9731ZM45.652 26.9731C41.9853 32.9791 41.5 40 41.5 43.0532C43.3379 43.0565 50.2662 40.0085 53.9344 35.0046C56.5752 31.4022 57.2638 26.0575 55 23.9825C52.7362 21.9075 47.9436 23.2194 45.652 26.9731Z" fill="#34364C"/>
</svg>


================================================================================

Filename: public/assets/pieces/b_n.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M29.6898 0.506964C31.0065 0.358909 32.3111 0.872458 33.1735 1.87833L41.3344 11.3968C50.7064 13.7128 56.1365 20.7698 59.1398 29.5796C62.2345 38.6575 63 50.182 63 62C63 64.2091 61.2091 66 59 66H21.7049C19.5814 66 17.8279 64.3406 17.711 62.2202C17.6066 60.3281 18.042 57.0449 19.3686 53.6914L19.393 53.63C15.6257 55.6522 11.4448 55.1678 8.34112 52.958C4.56926 50.2725 2.47201 45.0154 4.86815 39.8238C6.59603 36.08 8.45832 34.0976 9.86712 32.5982C11.1831 31.1977 11.7315 30.5817 12.1194 29.0299C14.4717 19.6209 19.3109 14.2007 24.5078 11.7271C24.4327 10.6552 24.4938 9.62248 24.6253 8.68489C24.9526 6.35108 25.7673 4.19438 26.5978 2.61775C27.2153 1.44546 28.3732 0.655018 29.6898 0.506964Z" fill="#F4F7FA"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M39.1707 15.0185L30.1368 4.4819C28.8291 6.9645 27.5614 11.3461 29.384 14.5092C28.4994 14.5879 27.6539 14.7376 27 15C22.8278 16.6743 18.25 21 16 30C15.3485 32.606 14.1759 33.854 12.7822 35.3373C11.4675 36.7364 9.95621 38.3449 8.49999 41.5C5.49999 48 13.5963 54.5 19.5 48.5963C22.8191 45.2772 25.7204 43.907 28.1562 42.7566C31.662 41.1008 34.2036 39.9004 35.6393 34C36.3224 36.7523 36.0492 43.2477 29.4918 47.211C22.9344 51.1743 21.5683 59.5229 21.7049 62H59C59 38.4832 55.8865 18.1648 39.1707 15.0185Z" fill="#34364C"/>
<circle cx="28" cy="27" r="3" fill="#F4F7FA"/>
</svg>


================================================================================

Filename: public/assets/pieces/b_p.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M23.1075 41.127C22.6303 41.7785 22.0608 42.4569 21.3971 43.1548C19.0545 45.6178 16.1816 47.6443 14.3274 48.7038L14.0154 48.8821C12.7691 49.5942 12 50.9196 12 52.355V62C12 64.2091 13.7909 66 16 66H55C57.2091 66 59 64.2091 59 62V52.355C59 50.9196 58.2309 49.5943 56.9846 48.8821L56.6727 48.7038C54.8185 47.6443 51.9455 45.6178 49.6029 43.1548C48.9392 42.4569 48.3697 41.7785 47.8925 41.127C49.648 40.7041 50.9524 39.1234 50.9524 37.2381V30.7269C50.9524 29.4272 50.3209 28.2085 49.2591 27.459L47.5602 26.2598C48.5405 24.3551 49.0952 22.1938 49.0952 19.9048C49.0952 12.2254 42.8699 6 35.1905 6C27.5111 6 21.2857 12.2254 21.2857 19.9048C21.2857 22.3225 21.9044 24.5972 22.9895 26.5776L21.7409 27.459C20.6791 28.2085 20.0476 29.4272 20.0476 30.7269V37.2381C20.0476 39.1234 21.352 40.7041 23.1075 41.127Z" fill="#F4F7FA"/>
<path d="M45.0952 19.9048C45.0952 22.7774 43.8723 25.3645 41.9187 27.1736L46.9524 30.7269V37.2381H42.0246C42.2622 40.2562 44.1987 43.2768 46.7045 45.9115C49.3638 48.7075 52.5633 50.9626 54.6881 52.1768L55 52.355V62H16V52.355L16.3119 52.1768C18.4367 50.9626 21.6362 48.7075 24.2955 45.9115C26.8013 43.2768 28.7378 40.2562 28.9754 37.2381H24.0476V30.7269L28.7357 27.4176C26.6234 25.6012 25.2857 22.9092 25.2857 19.9048C25.2857 14.4345 29.7202 10 35.1905 10C40.6607 10 45.0952 14.4345 45.0952 19.9048Z" fill="#34364C"/>
</svg>


================================================================================

Filename: public/assets/pieces/b_q.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M18 10C18 10.9874 18.1588 11.9373 18.4523 12.8259L16.4779 13.7521C14.841 12.0553 12.5438 11 10 11C5.02944 11 1 15.0295 1 20C1 24.4308 4.2018 28.1138 8.41791 28.8614L13.16 45.12C13.259 45.4594 13.4025 45.7842 13.5869 46.0858L16.32 50.5582L16.3032 50.5612C14.3925 50.8992 13 52.5597 13 54.5V62C13 64.2091 14.7909 66 17 66L55.0769 66C56.1378 66 57.1552 65.5786 57.9053 64.8284C58.6555 64.0783 59.0769 63.0609 59.0769 62V54.5C59.0769 52.5574 57.6813 50.8957 55.7679 50.5601L55.6875 50.546L58.4131 46.0858C58.5975 45.7842 58.741 45.4594 58.84 45.12L63.5821 28.8614C67.7982 28.1138 71 24.4308 71 20C71 15.0295 66.9706 11 62 11C59.453 11 57.1532 12.058 55.5159 13.7585L53.545 12.8339C53.8402 11.9431 54 10.9903 54 10C54 5.02945 49.9706 1.00001 45 1.00001C40.0294 1.00001 36 5.02945 36 10C36 5.02945 31.9706 1.00001 27 1.00001C22.0294 1.00001 18 5.02945 18 10Z" fill="#F4F7FA"/>
<path d="M28.7948 14.6682C30.6696 13.947 32 12.1288 32 10C32 7.23858 29.7614 5 27 5C24.2386 5 22 7.23858 22 10C22 12.5519 23.9117 14.6572 26.3811 14.9621L24.1513 33L13.4022 23.6641C14.3851 22.751 15 21.4473 15 20C15 17.2386 12.7614 15 10 15C7.23858 15 5 17.2386 5 20C5 22.7614 7.23858 25 10 25C10.4861 25 10.956 24.9306 11.4004 24.8013L17 44L22.7906 53.4756L17 54.5V62L55.0769 62V54.5L49.2119 53.4714L55 44L60.5996 24.8013C61.044 24.9306 61.5139 25 62 25C64.7614 25 67 22.7614 67 20C67 17.2386 64.7614 15 62 15C59.2386 15 57 17.2386 57 20C57 21.4473 57.6149 22.751 58.5978 23.6641L47.8487 33L45.6189 14.9621C48.0883 14.6572 50 12.5519 50 10C50 7.23858 47.7614 5 45 5C42.2386 5 40 7.23858 40 10C40 12.1288 41.3304 13.947 43.2052 14.6682L36 31L28.7948 14.6682Z" fill="#34364C"/>
</svg>


================================================================================

Filename: public/assets/pieces/b_r.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M26 5C26.7286 5 27.4117 5.19479 28 5.53513C28.5883 5.19479 29.2714 5 30 5H41C41.7286 5 42.4117 5.19479 43 5.53513C43.5884 5.19479 44.2714 5 45 5H55C57.2091 5 59 6.79086 59 9V18C59 19.259 58.4072 20.4446 57.4 21.2L51.2279 25.8291L52.9755 41.5583C53.4382 45.7226 55.3765 47.8353 58.2 51.6C58.7193 52.2924 59 53.1345 59 54V62C59 64.2091 57.2091 66 55 66H16C13.7909 66 12 64.2091 12 62V54C12 53.1345 12.2807 52.2924 12.8 51.6C15.6235 47.8353 17.5618 45.7226 18.0245 41.5583L19.7722 25.8291L13.6 21.2C12.5928 20.4446 12 19.259 12 18V9C12 6.79086 13.7909 5 16 5H26Z" fill="#F4F7FA"/>
<path d="M16 9H26V15H30V9H41V15H45V9H55V18L47 24L49 42H22L24 24L16 18V9Z" fill="#34364C"/>
<path d="M22 46H49L55 54V62H16V54L22 46Z" fill="#34364C"/>
</svg>


================================================================================

Filename: public/assets/pieces/w_b.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M26.314 16.8839C25.9121 15.7797 25.6923 14.5878 25.6923 13.3462C25.6923 7.63212 30.3244 3 36.0385 3C41.7525 3 46.3846 7.63212 46.3846 13.3462C46.3846 15.0199 45.9846 16.6065 45.2755 18.0095C46.2959 18.0801 47.2874 18.5398 48.0103 19.366C51.9379 23.8547 55.375 30.2548 55.375 37.6731C55.375 42.9766 53.5491 46.9066 51.0819 49.7383L55.7679 50.5601C57.6813 50.8957 59.0769 52.5574 59.0769 54.5V62C59.0769 63.0609 58.6555 64.0783 57.9053 64.8284C57.1552 65.5786 56.1378 66 55.0769 66L17 66C14.7909 66 13 64.2091 13 62V54.5C13 52.5597 14.3925 50.8992 16.3032 50.5612L20.5303 49.8134C18.0294 46.9764 16.1731 43.0244 16.1731 37.6731C16.1731 31.8853 18.416 26.8449 21.0466 22.9821C22.7001 20.5541 24.5721 18.4927 26.314 16.8839Z" fill="#34364C"/>
<path d="M38 37.1442H34C34 29.7994 36.2277 22.4669 41.1561 17.0997C41.9284 16.0485 42.3846 14.7506 42.3846 13.3462C42.3846 9.84126 39.5434 7 36.0385 7C32.5336 7 29.6923 9.84126 29.6923 13.3462C29.6923 15.0754 30.384 16.6431 31.5056 17.7877C27.5414 20.6138 20.1731 28.1889 20.1731 37.6731C20.1731 47.2443 27.6772 51.1192 31.6139 51.9147L17 54.5V62L55.0769 62V54.5L40.1165 51.8762C44.0977 50.9999 51.375 47.0985 51.375 37.6731C51.375 31.5015 48.5 26 45 22C41.1561 25 38 32 38 37.1442Z" fill="#F4F7FA"/>
</svg>


================================================================================

Filename: public/assets/pieces/w_k.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M30.0019 3.87506C30.0694 1.71562 31.8395 0 34 0H40C42.1605 0 43.9306 1.71562 43.998 3.87506L44.0332 5H46C48.2091 5 50 6.79086 50 9V11.4261C54.3601 10.4394 59.0663 11.0984 63.0607 14.4271C71.3589 21.3423 70.5954 35.8381 60.7472 43.7669C58.3706 45.6803 56.5035 47.2665 55.2178 48.901C54.9245 49.2739 54.6732 49.6347 54.4617 49.9878L58.5156 50.5361C60.4994 50.8044 61.9795 52.4981 61.9795 54.5V62C61.9795 64.2091 60.1886 66 57.9795 66H16.0205C13.8114 66 12.0205 64.2091 12.0205 62V54.5C12.0205 52.4981 13.5005 50.8044 15.4844 50.5361L19.5383 49.9878C19.3268 49.6347 19.0755 49.2739 18.7822 48.901C17.4965 47.2665 15.6294 45.6803 13.2528 43.7669C3.40461 35.8381 2.64108 21.3423 10.9392 14.4271C14.9336 11.0984 19.6398 10.4394 24 11.4261V9C24 6.79086 25.7908 5 28 5H29.9668L30.0019 3.87506Z" fill="#34364C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M34 4H40L40.1562 9H46V15H40.3437L40.6185 21.793C40.7282 21.6638 40.8411 21.5372 40.9574 21.4135C46.4206 15.6071 54.5207 12.5172 60.5 17.5C66.5 22.5 66.5 34 58.2387 40.6512C53.559 44.4188 49.3673 48.0509 49.5739 53.3632L57.9795 54.5V62H16.0205V54.5L24.4261 53.3632C24.6327 48.0509 20.441 44.4188 15.7613 40.6512C7.5 34 7.5 22.5 13.5 17.5C19.4793 12.5172 27.5794 15.6071 33.0426 21.4135C33.1589 21.5372 33.2718 21.6638 33.3815 21.793L33.6562 15H28V9H33.8437L34 4ZM28.348 26.9731C32.0147 32.9791 32.5 40 32.5 43.0532C30.6621 43.0565 23.7338 40.0085 20.0656 35.0046C17.4248 31.4022 16.7362 26.0575 19 23.9825C21.2638 21.9075 26.0563 23.2194 28.348 26.9731ZM45.652 26.9731C41.9853 32.9791 41.5 40 41.5 43.0532C43.3379 43.0565 50.2662 40.0085 53.9344 35.0046C56.5752 31.4022 57.2638 26.0575 55 23.9825C52.7362 21.9075 47.9436 23.2194 45.652 26.9731Z" fill="#F4F7FA"/>
</svg>


================================================================================

Filename: public/assets/pieces/w_n.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M29.6898 0.506964C31.0065 0.358909 32.3111 0.872458 33.1735 1.87833L41.3344 11.3968C50.7064 13.7128 56.1365 20.7698 59.1398 29.5796C62.2345 38.6575 63 50.182 63 62C63 64.2091 61.2091 66 59 66H21.7049C19.5814 66 17.8279 64.3406 17.711 62.2202C17.6066 60.3281 18.042 57.0449 19.3686 53.6914L19.393 53.63C15.6257 55.6522 11.4448 55.1678 8.34112 52.958C4.56926 50.2725 2.47201 45.0154 4.86815 39.8238C6.59603 36.08 8.45832 34.0976 9.86712 32.5982C11.1831 31.1977 11.7315 30.5817 12.1194 29.0299C14.4717 19.6209 19.3109 14.2007 24.5078 11.7271C24.4327 10.6552 24.4938 9.62248 24.6253 8.68489C24.9526 6.35108 25.7673 4.19438 26.5978 2.61775C27.2153 1.44546 28.3732 0.655018 29.6898 0.506964Z" fill="#34364C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M39.1707 15.0185L30.1368 4.4819C28.8291 6.9645 27.5614 11.3461 29.384 14.5092C28.4994 14.5879 27.6539 14.7376 27 15C22.8278 16.6743 18.25 21 16 30C15.3485 32.606 14.1759 33.854 12.7822 35.3373C11.4675 36.7364 9.95621 38.3449 8.49999 41.5C5.49999 48 13.5963 54.5 19.5 48.5963C22.8191 45.2772 25.7204 43.907 28.1562 42.7566C31.662 41.1008 34.2036 39.9004 35.6393 34C36.3224 36.7523 36.0492 43.2477 29.4918 47.211C22.9344 51.1743 21.5683 59.5229 21.7049 62H59C59 38.4832 55.8865 18.1648 39.1707 15.0185Z" fill="#F4F7FA"/>
<circle cx="28" cy="27" r="3" fill="#34364C"/>
</svg>


================================================================================

Filename: public/assets/pieces/w_p.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M23.1075 41.127C22.6303 41.7785 22.0608 42.4569 21.3971 43.1548C19.0545 45.6178 16.1816 47.6443 14.3274 48.7038L14.0154 48.8821C12.7691 49.5942 12 50.9196 12 52.355V62C12 64.2091 13.7909 66 16 66H55C57.2091 66 59 64.2091 59 62V52.355C59 50.9196 58.2309 49.5943 56.9846 48.8821L56.6727 48.7038C54.8185 47.6443 51.9455 45.6178 49.6029 43.1548C48.9392 42.4569 48.3697 41.7785 47.8925 41.127C49.648 40.7041 50.9524 39.1234 50.9524 37.2381V30.7269C50.9524 29.4272 50.3209 28.2085 49.2591 27.459L47.5602 26.2598C48.5405 24.3551 49.0952 22.1938 49.0952 19.9048C49.0952 12.2254 42.8699 6 35.1905 6C27.5111 6 21.2857 12.2254 21.2857 19.9048C21.2857 22.3225 21.9044 24.5972 22.9895 26.5776L21.7409 27.459C20.6791 28.2085 20.0476 29.4272 20.0476 30.7269V37.2381C20.0476 39.1234 21.352 40.7041 23.1075 41.127Z" fill="#34364C"/>
<path d="M45.0952 19.9048C45.0952 22.7774 43.8723 25.3645 41.9187 27.1736L46.9524 30.7269V37.2381H42.0246C42.2622 40.2562 44.1987 43.2768 46.7045 45.9115C49.3638 48.7075 52.5633 50.9626 54.6881 52.1768L55 52.355V62H16V52.355L16.3119 52.1768C18.4367 50.9626 21.6362 48.7075 24.2955 45.9115C26.8013 43.2768 28.7378 40.2562 28.9754 37.2381H24.0476V30.7269L28.7357 27.4176C26.6234 25.6012 25.2857 22.9092 25.2857 19.9048C25.2857 14.4345 29.7202 10 35.1905 10C40.6607 10 45.0952 14.4345 45.0952 19.9048Z" fill="#F4F7FA"/>
</svg>


================================================================================

Filename: public/assets/pieces/w_q.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M18 10C18 10.9873 18.1588 11.9373 18.4523 12.8258L16.4779 13.752C14.841 12.0553 12.5438 11 10 11C5.02944 11 1 15.0294 1 20C1 24.4308 4.2018 28.1138 8.41791 28.8614L13.16 45.12C13.259 45.4594 13.4025 45.7842 13.5869 46.0858L16.32 50.5582L16.3032 50.5612C14.3925 50.8992 13 52.5597 13 54.5V62C13 64.2091 14.7909 66 17 66L55.0769 66C56.1378 66 57.1552 65.5786 57.9053 64.8284C58.6555 64.0783 59.0769 63.0609 59.0769 62V54.5C59.0769 52.5574 57.6813 50.8957 55.7679 50.5601L55.6875 50.546L58.4131 46.0858C58.5975 45.7842 58.741 45.4594 58.84 45.12L63.5821 28.8614C67.7982 28.1138 71 24.4308 71 20C71 15.0294 66.9706 11 62 11C59.453 11 57.1532 12.058 55.5159 13.7584L53.545 12.8339C53.8402 11.9431 54 10.9903 54 10C54 5.02944 49.9706 1 45 1C40.0294 1 36 5.02944 36 10C36 5.02944 31.9706 1 27 1C22.0294 1 18 5.02944 18 10Z" fill="#34364C"/>
<path d="M28.7948 14.6682C30.6696 13.947 32 12.1288 32 10C32 7.23858 29.7614 5 27 5C24.2386 5 22 7.23858 22 10C22 12.5519 23.9117 14.6572 26.3811 14.9621L24.1513 33L13.4022 23.6641C14.3851 22.751 15 21.4473 15 20C15 17.2386 12.7614 15 10 15C7.23858 15 5 17.2386 5 20C5 22.7614 7.23858 25 10 25C10.4861 25 10.956 24.9306 11.4004 24.8013L17 44L22.7906 53.4756L17 54.5V62L55.0769 62V54.5L49.2119 53.4714L55 44L60.5996 24.8013C61.044 24.9306 61.5139 25 62 25C64.7614 25 67 22.7614 67 20C67 17.2386 64.7614 15 62 15C59.2386 15 57 17.2386 57 20C57 21.4473 57.6149 22.751 58.5978 23.6641L47.8487 33L45.6189 14.9621C48.0883 14.6572 50 12.5519 50 10C50 7.23858 47.7614 5 45 5C42.2386 5 40 7.23858 40 10C40 12.1288 41.3304 13.947 43.2052 14.6682L36 31L28.7948 14.6682Z" fill="#F4F7FA"/>
</svg>


================================================================================

Filename: public/assets/pieces/w_r.svg
Content:
<svg width="72" height="72" viewBox="0 0 72 72" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M26 5C26.7286 5 27.4117 5.19479 28 5.53513C28.5883 5.19479 29.2714 5 30 5H41C41.7286 5 42.4117 5.19479 43 5.53513C43.5884 5.19479 44.2714 5 45 5H55C57.2091 5 59 6.79086 59 9V18C59 19.259 58.4072 20.4446 57.4 21.2L51.2279 25.8291L52.9755 41.5583C53.4382 45.7226 55.3765 47.8353 58.2 51.6C58.7193 52.2924 59 53.1345 59 54V62C59 64.2091 57.2091 66 55 66H16C13.7909 66 12 64.2091 12 62V54C12 53.1345 12.2807 52.2924 12.8 51.6C15.6235 47.8353 17.5618 45.7226 18.0245 41.5583L19.7722 25.8291L13.6 21.2C12.5928 20.4446 12 19.259 12 18V9C12 6.79086 13.7909 5 16 5H26Z" fill="#34364C"/>
<path d="M16 9H26V15H30V9H41V15H45V9H55V18L47 24L49 42H22L24 24L16 18V9Z" fill="#F4F7FA"/>
<path d="M22 46H49L55 54V62H16V54L22 46Z" fill="#F4F7FA"/>
</svg>


================================================================================

Filename: public/favicons/1024.png
Content:
[Binary file - cannot display content]


Filename: public/favicons/4096.png
Content:
[File too large to display]


Filename: public/favicons/515.png
Content:
[Binary file - cannot display content]


Filename: public/logo.svg
Content:
[File too large to display]


Filename: public/profile.png
Content:
[Binary file - cannot display content]


Filename: src/App.jsx
Content:
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import { AuthProvider } from './contexts/AuthContext.jsx';
import PrivateRoute from './components/auth/PrivateRoute.jsx';
import ProfilePage from './components/profile/ProfilePage.jsx';
import PortalChessGame from "./components/game/PortalChessGame.jsx";
import LandingPage from "./components/LandingPage.jsx";

const App = () => {
    return (
        <Router>
            <AuthProvider>
                <Routes>

                    <Route
                        path="/profile"
                        element={
                            <PrivateRoute>
                                <ProfilePage />
                            </PrivateRoute>
                        }
                    />

                    <Route
                        path="/gameScreen"
                        element={
                            <PrivateRoute>
                                <PortalChessGame />
                            </PrivateRoute>
                        }
                    />


                    <Route path="/" element={<LandingPage />} />
                </Routes>
            </AuthProvider>
        </Router>
    );
};

export default App;

================================================================================

Filename: src/components/LandingPage.jsx
Content:
import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import {
    BiChevronRight,
    BiGroup, BiSliderAlt, BiMessageRoundedDetail, BiHistory, BiTime
} from 'react-icons/bi';
import { GiChessKnight, GiPortal, GiChessBishop, GiChessRook } from 'react-icons/gi';
import { HiOutlineSparkles } from 'react-icons/hi';
import Modal from './common/Modal';
import LoginModal from './auth/LoginModal';
import SignupModal from './auth/SignupModal';

// Enhanced animations
const fadeIn = {
    hidden: { opacity: 0 },
    visible: {
        opacity: 1,
        transition: { duration: 0.8, ease: "easeOut" }
    }
};

const slideUp = {
    hidden: { opacity: 0, y: 100 },
    visible: {
        opacity: 1,
        y: 0,
        transition: { duration: 0.7, ease: "easeOut" }
    }
};


const scaleButton = {
    hover: {
        scale: 1.05,
        boxShadow: "0 10px 25px rgba(99, 102, 241, 0.2)",
        transition: { duration: 0.3, ease: "easeOut" }
    }
};

const portalPulse = {
    pulse: {
        scale: [1, 1.1, 1],
        opacity: [0.8, 1, 0.8],
        filter: ["brightness(1)", "brightness(1.2)", "brightness(1)"],
        transition: {
            duration: 3,
            repeat: Infinity,
            ease: "easeInOut"
        }
    }
};

const staggerContainer = {
    hidden: { opacity: 0 },
    visible: {
        opacity: 1,
        transition: {
            staggerChildren: 0.2,
            delayChildren: 0.3
        }
    }
};

const LandingPage = () => {
    const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);
    const [isSignupModalOpen, setIsSignupModalOpen] = useState(false);
    const [scrollY, setScrollY] = useState(0);
    const navigate = useNavigate();
    const handleLoginClick = () => {
        const userId = localStorage.getItem('userId');
        const isEmailVerified = localStorage.getItem('emailVerified') === 'true';

        if (userId && isEmailVerified) {
            navigate('/profile');
        } else {
            setIsLoginModalOpen(true);
        }
    };

    const handleSignUpClick = () => {
        const userId = localStorage.getItem('userId');
        const isEmailVerified = localStorage.getItem('emailVerified') === 'true';

        if (userId && isEmailVerified) {
            navigate('/profile');
        } else {
            setIsSignupModalOpen(true);
        }
    };
    const closeLoginModal = () => {
        setIsLoginModalOpen(false);
    };

    const closeSignupModal = () => {
        setIsSignupModalOpen(false);
    };

    const switchToSignup = () => {
        setIsLoginModalOpen(false);
        setIsSignupModalOpen(true);
    };

    const switchToLogin = () => {
        setIsSignupModalOpen(false);
        setIsLoginModalOpen(true);
    };


    // Enhanced navigation animation variants
    const navItemVariants = {
        hidden: { opacity: 0, y: -20 },
        visible: (i) => ({
            opacity: 1,
            y: 0,
            transition: {
                delay: 0.1 * i,
                duration: 0.5,
                ease: "easeOut"
            }
        })
    };

    // Floating animation for chess pieces
    const floatingAnimation = {
        animate: {
            y: [0, -10, 0],
            transition: {
                duration: 4,
                repeat: Infinity,
                ease: "easeInOut"
            }
        }
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-indigo-500/70 to-indio-900/30 text-foreground relative overflow-hidden">
            {/* Dynamic background with parallax effect */}
            <motion.div
                className="absolute inset-0 z-0"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 1.5 }}
            >
                {/* Gradient background */}
                {/* Animated chess pattern */}
                <motion.div
                    className="absolute inset-0 bg-[url('/chess-pattern.png')] opacity-5 bg-repeat"
                    style={{
                        backgroundSize: '200px',
                        y: scrollY * 0.1
                    }}
                    animate={{
                        scale: [1, 1.05, 1],
                        opacity: [0.05, 0.08, 0.05]
                    }}
                    transition={{
                        duration: 10,
                        repeat: Infinity,
                        ease: "easeInOut"
                    }}
                ></motion.div>



            </motion.div>

            {/* Enhanced Navbar with glassmorphism */}
            <header className="fixed top-0 left-0 right-0 z-50 backdrop-blur-md bg-white/10 py-4 shadow-md border-b border-white/10">
                <motion.div
                    className="container mx-auto px-4 md:px-6 flex items-center justify-between"
                    initial={{ y: -100 }}
                    animate={{ y: 0 }}
                    transition={{ type: "spring", stiffness: 300, damping: 30 }}
                >
                    <motion.div
                        className="flex items-center space-x-2"
                        whileHover={{ scale: 1.05 }}
                        transition={{ type: "spring", stiffness: 400, damping: 10 }}
                    >
                        <motion.div
                            whileHover={{ rotate: 360 }}
                            transition={{ duration: 0.8 }}
                        >
                            <img
                                src="/favicons/515.png"
                                alt="Portal Gambit Logo"
                                className="w-10 h-10 drop-shadow-lg"
                            />
                        </motion.div>
                        <span className="text-xl font-bold bg-gradient-to-r from-indigo-600 via-blue-600 to-indigo-600 bg-clip-text text-transparent transition-all duration-500">
                            Portal Gambit
                        </span>
                    </motion.div>

                    <nav className="hidden md:flex items-center space-x-8">
                        {[
                            { name: 'About', href: '#about' },
                            { name: 'Features', href: '#features' },
                            { name: 'Gameplay', href: '#how-to-play' },

                        ].map((item, index) => (
                            <motion.a
                                key={item.name}
                                href={item.href}
                                className="text-sm font-medium text-blue-100 hover:text-white transition-all duration-300 relative group"
                                variants={navItemVariants}
                                custom={index}
                                whileHover={{ scale: 1.1 }}
                                whileTap={{ scale: 0.95 }}
                            >
                                {item.name}
                                <motion.span
                                    className="absolute bottom-0 left-0 w-0 h-0.5 bg-blue-300 group-hover:w-full transition-all duration-300"
                                    layoutId={`underline-${index}`}
                                />
                            </motion.a>
                        ))}
                        <motion.button
                            onClick={handleLoginClick}
                            className="bg-indigo-600 hover:bg-indigo-700 text-white transition-all duration-300 rounded-full px-6 py-2"
                            variants={navItemVariants}
                            whileHover={{ scale: 1.05, boxShadow: "0 5px 15px rgba(0,0,0,0.2)" }}
                            whileTap={{ scale: 0.95 }}
                        >
                            Sign In
                        </motion.button>
                    </nav>

                    {/* Mobile menu button */}
                    <motion.button
                        className="md:hidden text-white p-2 rounded-md"
                        whileHover={{ scale: 1.1 }}
                        whileTap={{ scale: 0.9 }}
                    >
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                        </svg>
                    </motion.button>
                </motion.div>
            </header>

            {/* Enhanced Hero Section with 3D elements */}
            <section id="about">
                <motion.div
                    className="relative pt-32 pb-20 overflow-hidden bg-gradient-to-b from-indigo-500/70 to-indigo-900/30"
                    variants={slideUp}
                    initial="hidden"
                    animate="visible"
                >
                    <motion.div
                        variants={fadeIn}
                        className="container mx-auto px-4 md:px-6 relative z-10 mt-16">
                        <motion.div className="flex flex-col md:flex-row items-center max-w-6xl mx-auto">
                            <motion.div

                                className="md:w-1/2 text-left mb-10 md:mb-0 md:pr-10">
                                <motion.div
                                    className="inline-block px-3 py-1 rounded-full bg-white/10 border border-white/30 text-xs font-medium text-blue-100 mb-6"
                                    whileHover={{ scale: 1.05, backgroundColor: "rgba(255,255,255,0.2)" }}
                                >
                                    <HiOutlineSparkles className="inline mr-1" />
                                    REVOLUTIONARY CHESS VARIANT
                                </motion.div>

                                <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-black leading-tight">
                                    Reimagine Chess Through<br />
                                    <motion.span
                                        className="bg-gradient-to-r from-indigo-600 to-indigo-800 bg-clip-text text-transparent"
                                        animate={{
                                            backgroundPosition: ['0% 50%', '100% 50%', '0% 50%']
                                        }}
                                        transition={{
                                            duration: 5,
                                            repeat: Infinity,
                                            ease: "easeInOut"
                                        }}
                                    >
                                        Portal Mechanics
                                    </motion.span>
                                </h1>

                                <p className="text-blue-100 text-lg mb-8 max-w-md leading-relaxed">
                                    Experience an innovative evolution of chess where strategic portals allow pieces to teleport across the board, creating entirely new dimensions of gameplay and strategy.
                                </p>

                                <motion.div className="flex flex-col sm:flex-row gap-4">
                                    <motion.button
                                        onClick={handleSignUpClick}
                                        className="bg-gradient-to-r from-indigo-600 to-blue-500 hover:from-indigo-700 hover:to-blue-600 text-white shadow-lg shadow-indigo-500/30 transition-all duration-300 rounded-full px-8 py-4 flex items-center justify-center gap-2 font-medium"
                                        whileHover={scaleButton.hover}
                                        whileTap={{ scale: 0.95 }}
                                    >
                                        Play Now <BiChevronRight size={20} />
                                    </motion.button>
                                    <motion.a
                                        href="#how-to-play"
                                        className="border border-white/30 text-white bg-white/5 hover:bg-white/10 backdrop-blur-sm rounded-full px-8 py-4 text-center transition-all duration-300 flex items-center justify-center gap-2"
                                        whileHover={scaleButton.hover}
                                        whileTap={{ scale: 0.95 }}
                                    >
                                        Watch Gameplay
                                    </motion.a>
                                </motion.div>


                            </motion.div>

                            <motion.div

                                className="md:w-1/2 relative">
                                {/* 3D Chess board representation */}
                                <motion.div className="aspect-square max-w-md mx-auto relative perspective-800">
                                    {/* Chessboard background */}
                                    <motion.div
                                        className="absolute inset-0 rounded-xl overflow-hidden shadow-2xl"
                                        style={{ transform: `rotateX(20deg) rotateY(${-5 + scrollY * 0.01}deg)` }}
                                        animate={{
                                            rotateX: [20, 25, 20],
                                            rotateY: [-5, 5, -5],
                                        }}
                                        transition={{
                                            duration: 8,
                                            repeat: Infinity,
                                            ease: "easeInOut"
                                        }}
                                    >
                                        <div className="w-full h-full bg-gradient-to-br from-indigo-900/80 via-indigo-800 to-blue-900/80 p-4 backdrop-blur-sm border border-indigo-700/50">
                                            {/* Chess grid pattern */}
                                            <div className="grid grid-cols-8 grid-rows-8 w-full h-full">
                                                {[...Array(64)].map((_, i) => {
                                                    const row = Math.floor(i / 8);
                                                    const col = i % 8;
                                                    const isBlack = (row + col) % 2 === 1;
                                                    return (
                                                        <div
                                                            key={i}
                                                            className={`${isBlack ? 'bg-indigo-800/70' : 'bg-indigo-600/30'} 
                                                                  border border-indigo-700/20`}
                                                        />
                                                    );
                                                })}
                                            </div>
                                        </div>
                                    </motion.div>

                                    {/* Chess pieces and portals */}
                                    <motion.div
                                        className="absolute inset-0 flex items-center justify-center z-10"
                                        style={{ transform: `rotateX(20deg) rotateY(${-5 + scrollY * 0.01}deg)` }}
                                        animate={{
                                            rotateX: [20, 25, 20],
                                            rotateY: [-5, 5, -5],
                                        }}
                                        transition={{
                                            duration: 8,
                                            repeat: Infinity,
                                            ease: "easeInOut"
                                        }}
                                    >
                                        <motion.div
                                            variants={floatingAnimation}
                                            animate="animate"
                                            className="relative"
                                        >
                                            <GiChessKnight size={100} className="text-white drop-shadow-2xl filter brightness-110" />
                                        </motion.div>

                                        {/* Additional chess pieces */}
                                        <motion.div
                                            className="absolute top-1/4 left-1/4"
                                            variants={floatingAnimation}
                                            animate="animate"
                                        >
                                            <GiChessBishop size={70} className="text-blue-300 drop-shadow-2xl" />
                                        </motion.div>

                                        <motion.div
                                            className="absolute bottom-1/4 right-1/4"
                                            variants={floatingAnimation}
                                            animate="animate"
                                            style={{ animationDelay: '1s' }}
                                        >
                                            <GiChessRook size={70} className="text-blue-300 drop-shadow-2xl" />
                                        </motion.div>
                                    </motion.div>

                                    {/* Portals with glow effects */}
                                    <motion.div
                                        className="absolute -top-5 -right-5 z-20"
                                        variants={portalPulse}
                                        animate="pulse"
                                    >
                                        <div className="relative">
                                            <div className="absolute inset-0 rounded-full bg-blue-500 blur-xl opacity-40 scale-150" />
                                            <GiPortal size={100} className="text-blue-400 filter drop-shadow-lg brightness-125" />
                                        </div>
                                    </motion.div>
                                    <motion.div
                                        className="absolute -bottom-5 -left-5 z-20"
                                        variants={portalPulse}
                                        animate="pulse"
                                    >
                                        <div className="relative">
                                            <div className="absolute inset-0 rounded-full bg-orange-500 blur-xl opacity-40 scale-150" />
                                            <GiPortal size={100} className="text-orange-400 filter drop-shadow-lg brightness-125" />
                                        </div>
                                    </motion.div>

                                    {/* Portal connection line/beam */}
                                    <motion.div
                                        className="absolute top-0 left-0 w-full h-full z-15 overflow-hidden pointer-events-none"
                                        style={{ transform: `rotateX(20deg) rotateY(${-5 + scrollY * 0.01}deg)` }}
                                    >
                                        <motion.div
                                            className="absolute h-1 bg-gradient-to-r from-blue-400 via-indigo-300 to-orange-400 rounded-full top-1/2 left-0 right-0 opacity-70 blur-sm"
                                            animate={{
                                                opacity: [0.3, 0.7, 0.3],
                                                height: ['2px', '3px', '2px']
                                            }}
                                            transition={{
                                                duration: 3,
                                                repeat: Infinity,
                                                ease: "easeInOut"
                                            }}
                                        />
                                    </motion.div>
                                </motion.div>
                            </motion.div>
                        </motion.div>
                    </motion.div>
                </motion.div>
            </section>
            {/* Features Section with modern cards */}
            <section id="features" className="py-20 relative overflow-hidden" >
                <motion.div
                    className="absolute inset-0 bg-gradient-to-b from-indigo-900/30 to-indigo-700/70"
                    style={{ y: scrollY * -0.1 }}
                />

                <motion.div
                    className="container mx-auto px-4 md:px-6 relative z-10"
                    variants={slideUp}
                    initial="hidden"
                    whileInView="visible"
                    viewport={{ once: true, amount: 0.3 }}
                >
                    <motion.div
                        className="text-center max-w-3xl mx-auto mb-16">
                        <motion.div
                            className="inline-block px-3 py-1 rounded-full bg-white/10 border border-white/30 text-xs font-medium text-blue-100 mb-4"
                            whileHover={{ scale: 1.05, backgroundColor: "rgba(255,255,255,0.2)" }}
                        >
                            GAMEPLAY FEATURES
                        </motion.div>

                        <h2 className="text-3xl md:text-4xl font-bold mb-6 text-white">
                            A New Dimension of Chess
                        </h2>
                        <p className="text-blue-100 text-lg">
                            Portal Gambit introduces revolutionary mechanics that transform traditional chess into an entirely new strategic experience.
                        </p>
                    </motion.div>

                    <motion.div
                        variants={staggerContainer}
                        initial="hidden"
                        whileInView="visible"
                        viewport={{ once: true, amount: 0.3 }}
                        className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto">
                        {[
                            {
                                icon: <GiPortal className="text-blue-400 w-8 h-8" />,
                                title: "Dimensional Portals",
                                description: "Warp pieces instantly with portals, unlocking new strategies."
                            },
                            {
                                icon: <BiSliderAlt className="text-blue-400 w-8 h-8" />,
                                title: "Customizable Matches",
                                description: "Set time limits and portal rules for a tailored experience."
                            },
                            {
                                icon: <BiMessageRoundedDetail className="text-blue-400 w-8 h-8" />,
                                title: "Interactive Communication",
                                description: "Chat with opponents via voice and text for strategic play."
                            },
                            {
                                icon: <BiGroup className="text-blue-400 w-8 h-8" />,
                                title: "Social Competition",
                                description: "Track rivalries, build your network, and challenge friends."
                            },
                            {
                                icon: <BiHistory className="text-blue-400 w-8 h-8" />,
                                title: "Match History",
                                description: "Review past games to analyze moves and improve strategy."
                            },
                            {
                                icon: <BiTime className="text-blue-400 w-8 h-8" />,
                                title: "Flexible Time Controls",
                                description: "Play fast blitz or deep-thinking correspondence games."
                            }
                        ]
                            .map((feature, index) => (
                                <motion.div
                                    key={index}
                                    variants={fadeIn}
                                    whileHover={scaleButton.hover}
                                    className="bg-gradient-to-b from-white/5 to-white/10 backdrop-blur-sm p-6 rounded-xl border border-white/20 hover:border-white/30 transition-all group"
                                >
                                    <motion.div className="bg-gradient-to-br from-indigo-600/30 to-blue-600/30 rounded-full p-4 w-16 h-16 flex items-center justify-center mb-4 border border-indigo-500/30 group-hover:border-indigo-500/50 transition-all">
                                        {feature.icon}
                                    </motion.div>
                                    <h3 className="text-xl font-bold mb-2 text-white group-hover:text-blue-200 transition-all">{feature.title}</h3>
                                    <p className="text-blue-100 group-hover:text-white transition-all">
                                        {feature.description}
                                    </p>
                                </motion.div>
                            ))}
                    </motion.div>
                </motion.div>
            </section>






            {/* How to Play Section */}
            <section id="how-to-play" className="py-20 relative overflow-hidden">
                <motion.div
                    className="absolute inset-0 bg-gradient-to-b from-indigo-700/70 to-indigo-900"
                    style={{ y: scrollY * -0.1 }}
                />

                <motion.div
                    className="container mx-auto px-4 md:px-6 relative z-10"
                    variants={slideUp}
                    initial="hidden"
                    whileInView="visible"
                    viewport={{ once: true, amount: 0.3 }}
                >
                    <motion.div className="text-center max-w-3xl mx-auto mb-12">
                        <motion.div
                            className="inline-block px-3 py-1 rounded-full bg-white/10 border border-white/30 text-xs font-medium text-blue-100 mb-4"
                            whileHover={{ scale: 1.05, backgroundColor: "rgba(255,255,255,0.2)" }}
                        >
                            GAME MECHANICS
                        </motion.div>

                        <h2 className="text-3xl md:text-4xl font-bold mb-4 text-white">
                            How to Play
                        </h2>
                        <p className="text-blue-100 text-lg">
                            Master the art of portal chess with innovative teleportation mechanics
                        </p>
                    </motion.div>

                    <motion.div
                        className="grid grid-cols-1 md:grid-cols-2 gap-12 max-w-4xl mx-auto"
                        variants={staggerContainer}
                        initial="hidden"
                        whileInView="visible"
                        viewport={{ once: true, amount: 0.3 }}
                    >
                        <motion.div

                            className="bg-gradient-to-b from-white/5 to-white/10 backdrop-blur-sm p-8 rounded-xl border border-white/20 hover:border-white/30 transition-all group shadow-lg"
                            whileHover={scaleButton.hover}
                        >
                            <motion.div
                                className="aspect-square rounded-lg mb-6 relative overflow-hidden border border-indigo-500/30 bg-indigo-900/30"
                                whileHover={{
                                    boxShadow: "0 0 30px rgba(99, 102, 241, 0.3)",
                                }}
                            >
                                {/* Portal Entry */}
                                <motion.div
                                    className="absolute top-1/4 left-1/4 w-12 h-12 rounded-full border-2 border-indigo-500"
                                    animate={{
                                        scale: [1, 1.1, 1],
                                        opacity: [0.8, 1, 0.8],
                                        boxShadow: [
                                            "0 0 0 rgba(99, 102, 241, 0.4)",
                                            "0 0 15px rgba(99, 102, 241, 0.6)",
                                            "0 0 0 rgba(99, 102, 241, 0.4)"
                                        ]
                                    }}
                                    transition={{
                                        duration: 3,
                                        repeat: Infinity,
                                        ease: "easeInOut"
                                    }}
                                >
                                    <motion.div
                                        className="absolute inset-0 bg-indigo-500/30 rounded-full"
                                        animate={{
                                            opacity: [0.3, 0.6, 0.3]
                                        }}
                                        transition={{
                                            duration: 3,
                                            repeat: Infinity,
                                            ease: "easeInOut"
                                        }}
                                    ></motion.div>
                                </motion.div>

                                {/* Portal Exit */}
                                <motion.div
                                    className="absolute bottom-1/4 right-1/4 w-12 h-12 rounded-full border-2 border-blue-500"
                                    animate={{
                                        scale: [1, 1.1, 1],
                                        opacity: [0.8, 1, 0.8],
                                        boxShadow: [
                                            "0 0 0 rgba(59, 130, 246, 0.4)",
                                            "0 0 15px rgba(59, 130, 246, 0.6)",
                                            "0 0 0 rgba(59, 130, 246, 0.4)"
                                        ]
                                    }}
                                    transition={{
                                        duration: 3,
                                        repeat: Infinity,
                                        ease: "easeInOut",
                                        delay: 1
                                    }}
                                >
                                    <motion.div
                                        className="absolute inset-0 bg-blue-500/30 rounded-full"
                                        animate={{
                                            opacity: [0.3, 0.6, 0.3]
                                        }}
                                        transition={{
                                            duration: 3,
                                            repeat: Infinity,
                                            ease: "easeInOut",
                                            delay: 1
                                        }}
                                    ></motion.div>
                                </motion.div>

                                {/* Chess Knight Piece Movement Indicator - with corrected path */}
                                <motion.div
                                    className="absolute top-1/4 left-1/4 w-8 h-8 flex items-center justify-center"
                                    initial={{ opacity: 0 }}
                                    animate={{
                                        opacity: [0, 1, 1, 1, 0],
                                        x: [0, 0, 125, 125, 125],  // Start at portal 1, end at portal 2 X position
                                        y: [0, 0, 125, 125, 125]   // Start at portal 1, end at portal 2 Y position
                                    }}
                                    transition={{
                                        duration: 4,
                                        repeat: Infinity,
                                        repeatDelay: 1,
                                        ease: "easeInOut",
                                        times: [0, 0.1, 0.5, 0.9, 1]  // Control timing of each keyframe
                                    }}
                                >
                                    {/* Knight Chess Piece SVG */}
                                    <svg
                                        viewBox="0 0 45 45"
                                        width="100%"
                                        height="100%"
                                        className="text-indigo-500 fill-current"
                                    >
                                        <g>
                                            <path
                                                d="M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18"
                                                style={{ fill: "currentColor", stroke: "white", strokeWidth: 1.5, strokeLinejoin: "round" }}
                                            />
                                            <path
                                                d="M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10"
                                                style={{ fill: "currentColor", stroke: "white", strokeWidth: 1.5, strokeLinecap: "round" }}
                                            />
                                            <path
                                                d="M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z"
                                                style={{ fill: "white", stroke: "white", strokeWidth: 1.5 }}
                                            />
                                            <path
                                                d="M 15 15.5 A 0.5 1.5 0 1 1 14,15.5 A 0.5 1.5 0 1 1 15 15.5 z"
                                                transform="matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)"
                                                style={{ fill: "white", stroke: "white", strokeWidth: 1.5 }}
                                            />
                                        </g>
                                    </svg>
                                </motion.div>

                                {/* Portal connection line/beam */}
                                <motion.div
                                    className="absolute top-0 left-0 w-full h-full pointer-events-none"
                                >
                                    <motion.div
                                        className="absolute h-1 bg-gradient-to-r from-indigo-400 to-blue-400 rounded-full top-1/2 left-0 right-0 opacity-70 blur-sm"
                                        animate={{
                                            opacity: [0.3, 0.7, 0.3],
                                            height: ['2px', '3px', '2px']
                                        }}
                                        transition={{
                                            duration: 3,
                                            repeat: Infinity,
                                            ease: "easeInOut"
                                        }}
                                    />
                                </motion.div>
                            </motion.div>

                            <h3 className="text-xl font-bold mb-3 text-white group-hover:text-blue-200 transition-all">Portal Movement</h3>
                            <p className="text-blue-100 group-hover:text-white transition-all">
                                When a piece's movement path intersects with a portal, it automatically teleports through and continues its movement from the exit portal.
                            </p>
                        </motion.div>

                        <motion.div

                            className="bg-gradient-to-b from-white/5 to-white/10 backdrop-blur-sm p-8 rounded-xl border border-white/20 hover:border-white/30 transition-all shadow-lg"
                            whileHover={scaleButton.hover}
                        >
                            <motion.div className="space-y-4 mb-6">
                                {[
                                    "Classic Chess with a Twist – move pieces as usual or place portals instead",
                                    "Strategic Portals – teleport pieces instantly across the board",
                                    "Turn-Based Portal Play – placing a portal pair costs a turn",
                                    "Customizable Rules – set time limits & portal limits before playing",
                                    "Manage Portals Wisely – exceeding the limit removes the oldest ones"
                                ].map((step, index) => (
                                    <motion.div
                                        key={index}
                                        className="flex items-center space-x-4 p-4 bg-indigo-900/30 rounded-lg border border-indigo-500/30 group-hover:border-indigo-500/50 hover:bg-indigo-800/40 transition-all"
                                        variants={fadeIn}
                                        whileHover={{ x: 5 }}
                                    >
                                        <motion.div
                                            className="w-8 h-8 rounded-full bg-gradient-to-br from-indigo-600/70 to-blue-600/70 flex items-center justify-center shadow-md"
                                            whileHover={{ scale: 1.1 }}
                                        >
                                            <span className="font-bold text-white">{index + 1}</span>
                                        </motion.div>
                                        <motion.div className="flex-1 text-blue-100">{step}</motion.div>
                                    </motion.div>
                                ))}
                            </motion.div>
                        </motion.div>
                    </motion.div>
                </motion.div>
            </section>

            {/* Auth Modals */}
            < Modal isOpen={isLoginModalOpen} onClose={closeLoginModal} title="Sign In" >
                <LoginModal onClose={closeLoginModal} onSwitchToSignup={switchToSignup} />
            </Modal >

            <Modal isOpen={isSignupModalOpen} onClose={closeSignupModal} title="Sign Up">
                <SignupModal onClose={closeSignupModal} onSwitchToLogin={switchToLogin} />
            </Modal>

        </div>
    );
};

export default LandingPage;

================================================================================

Filename: src/components/auth/LoginModal.jsx
Content:
import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, sendEmailVerification } from 'firebase/auth';
import { auth } from '../../firebase/config';
import { useNavigate } from 'react-router-dom';
import { FcGoogle } from 'react-icons/fc';
import { BACKEND_URL } from '../../config';

const LoginModal = ({ onClose, onSwitchToSignup }) => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState('');
    const [loading, setLoading] = useState(false);
    const [verificationMessage, setVerificationMessage] = useState('');
    const navigate = useNavigate();


    const checkAndCreateProfile = async (user) => {
        try {
            const checkResponse = await fetch(`${BACKEND_URL}/profiles/${user.uid}`, {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('access_token')}`
                }
            });
            if (checkResponse.status === 404) {
                const createResponse = await fetch(`${BACKEND_URL}/profiles/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('access_token')}`
                    },
                    body: JSON.stringify({
                        display_name: user.displayName || 'Chess Player',
                        draws: 0,
                        email: user.email,
                        games_played: 0,
                        losses: 0,
                        rating: 1200,
                        uid: user.uid,
                        username: user.email.split('@')[0],
                        wins: 0
                    })
                });
                if (!createResponse.ok) {
                    throw new Error('Failed to create profile');
                }
            } else if (!checkResponse.ok) {
                throw new Error('Failed to check profile');
            }
        } catch (error) {
            throw new Error('Failed to setup user profile');
        }
    };

    const exchangeTokenWithBackend = async (firebaseToken) => {
        try {
            await new Promise(resolve => setTimeout(resolve, 1000));

            const response = await fetch(`${BACKEND_URL}/auth/token`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    firebase_token: firebaseToken,
                })
            });

            if (!response.ok) {
                const errorData = await response.json();
                if (errorData.detail?.includes('Token used too early')) {
                    await new Promise(resolve => setTimeout(resolve, 2000));
                    return exchangeTokenWithBackend(firebaseToken);
                }
                throw new Error(errorData.detail || 'Backend authentication failed');
            }

            const data = await response.json();
            if (!data.access_token) {
                throw new Error('Invalid response from backend');
            }
            return data;
        } catch (error) {
            throw error;
        }
    };

    const saveAuthToken = async (user) => {
        try {
            const firebaseToken = await user.getIdToken(/* forceRefresh */ true);

            const backendTokens = await exchangeTokenWithBackend(firebaseToken);

            // Store tokens only after successful exchange
            localStorage.setItem('access_token', backendTokens.access_token);
            localStorage.setItem('token_type', backendTokens.token_type);
            localStorage.setItem('userId', user.uid);
            localStorage.setItem('userEmail', user.email);
        } catch (error) {
            throw new Error('Failed to complete authentication process');
        }
    };


    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);
        setError('');

        try {
            const userCredential = await signInWithEmailAndPassword(auth, email, password);
            const user = userCredential.user;

            if (!user.emailVerified) {
                await sendEmailVerification(userCredential.user);
                setVerificationMessage('Please verify your email before logging in. Verification link sent.');
                setLoading(false);
                return;
            }

            const userId = user.uid;
            await saveAuthToken(userCredential.user);
            await checkAndCreateProfile(user);
            onClose();
            navigate(`/profile`);
        } catch (error) {
            if (error.code === 'auth/too-many-requests') {
                setError('Too many failed login attempts. Please try again later.');
            } else if (error.message.includes('Backend authentication failed')) {
                setError('Backend authentication failed. Please try again.');
            } else if (error.message.includes('Failed to setup user profile')) {
                setError('Failed to setup user profile. Please try again.');
            } else {
                setError('Failed to sign in. Please check your credentials.');
            }
        } finally {
            setLoading(false);
        }
    };

    const handleGoogleSignIn = async () => {
        setLoading(true);
        setError('');

        try {
            const result = await signInWithPopup(auth, new GoogleAuthProvider());
            const user = result.user;

            if (!user.emailVerified) {
                setError('This email address is not verified.');
                return;
            }

            await saveAuthToken(user);
            await checkAndCreateProfile(user);
            onClose();
            navigate(`/profile`);
        } catch (error) {
            setError(error.message.includes('Failed to setup user profile')
                ? 'Failed to setup user profile. Please try again.'
                : 'Failed to sign in with Google');
        } finally {
            setLoading(false);
        }
    };

    return (
        <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            transition={{ duration: 0.3 }}
            className="space-y-6">


            {error && (
                <motion.div
                    initial={{ opacity: 0, scale: 0.95 }}
                    animate={{ opacity: 1, scale: 1 }}
                    className="p-3 text-sm text-red-600 bg-red-50 rounded-lg">
                    {error}
                </motion.div>
            )}

            <motion.button
                onClick={handleGoogleSignIn}
                disabled={loading}
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
                className="w-full flex items-center justify-center gap-3 px-4 py-3 mb-6 bg-white rounded-lg border border-gray-300 hover:bg-gray-50 active:bg-gray-100 transition-colors"
            >
                <FcGoogle className="w-5 h-5" />
                <span className="text-gray-700 font-medium">Continue with Google</span>
            </motion.button>

            <div className="relative my-6">
                <div className="absolute inset-0 flex items-center">
                    <div className="w-full border-t border-gray-200"></div>
                </div>
                <div className="relative flex justify-center">
                    <span className="px-4 text-sm text-gray-500 bg-white">or continue with email</span>
                </div>
            </div>

            <form onSubmit={handleSubmit} className="space-y-4">
                <div>
                    <label htmlFor="email" className="block text-sm font-medium text-gray-700">
                        Email
                    </label>
                    <input
                        type="email"
                        id="email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        required
                        className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                </div>
                <div>
                    <label htmlFor="password" className="block text-sm font-medium text-gray-700">
                        Password
                    </label>
                    <input
                        type="password"
                        id="password"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        required
                        className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                </div>

                {verificationMessage && (
                    <div className="p-3 bg-yellow-100 border border-yellow-400 text-yellow-700 rounded mt-2">
                        {verificationMessage}
                    </div>
                )}

                <motion.button
                    type="submit"
                    disabled={loading}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400"
                >
                    {loading ? 'Signing in...' : 'Sign In'}
                </motion.button>
            </form>

            <div className="text-sm text-center">
                <span className="text-gray-600">Don't have an account? </span>
                <motion.button
                    onClick={onSwitchToSignup}
                    whileHover={{ scale: 1.05 }}
                    className="text-indigo-600 hover:text-indigo-500 font-medium"
                >
                    Sign up
                </motion.button>
            </div>
        </motion.div>
    );
};

export default LoginModal;

================================================================================

Filename: src/components/auth/PrivateRoute.jsx
Content:
import { Navigate } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';

const PrivateRoute = ({ children }) => {
    const { user, loading } = useAuth();

    if (loading) {
        return <div>Loading...</div>;
    }

    return user ? children : <Navigate to="/" />;
};

export default PrivateRoute;


================================================================================

Filename: src/components/auth/SignupModal.jsx
Content:
import { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { createUserWithEmailAndPassword, updateProfile, sendEmailVerification, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';
import { auth } from '../../firebase/config';
import { useNavigate } from 'react-router-dom';
import { FcGoogle } from 'react-icons/fc';
import { BACKEND_URL } from '../../config';

const SignupModal = ({ onClose, onSwitchToLogin }) => {
    const [username, setUsername] = useState('');
    const [displayName, setDisplayName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [error, setError] = useState('');
    const [message, setMessage] = useState('');
    const [verificationMessage, setVerificationMessage] = useState('');
    const [loading, setLoading] = useState(false);
    const navigate = useNavigate();

    const checkAndCreateProfile = async (user) => {
        try {
            const checkResponse = await fetch(`${BACKEND_URL}/profiles/${user.uid}`, {
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('access_token')}`
                }
            });
            if (checkResponse.status === 404) {
                const createResponse = await fetch(`${BACKEND_URL}/profiles/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('access_token')}`
                    },
                    body: JSON.stringify({
                        display_name: user.displayName || 'Chess Player',
                        draws: 0,
                        email: user.email,
                        games_played: 0,
                        losses: 0,
                        rating: 1200,
                        uid: user.uid,
                        username: user.email.split('@')[0],
                        wins: 0
                    })
                });
                if (!createResponse.ok) {
                    throw new Error('Failed to create profile');
                }
            } else if (!checkResponse.ok) {
                throw new Error('Failed to check profile');
            }
        } catch (error) {
            console.error('Profile check/create error:', error);
            throw new Error('Failed to setup user profile');
        }
    };

    const exchangeTokenWithBackend = async (firebaseToken) => {
        try {
            await new Promise(resolve => setTimeout(resolve, 1000));

            const response = await fetch(`${BACKEND_URL}/auth/token`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    firebase_token: firebaseToken,
                })
            });

            if (!response.ok) {
                const errorData = await response.json();
                if (errorData.detail?.includes('Token used too early')) {
                    await new Promise(resolve => setTimeout(resolve, 2000));
                    return exchangeTokenWithBackend(firebaseToken);
                }
                throw new Error(errorData.detail || 'Backend authentication failed');
            }

            const data = await response.json();
            if (!data.access_token) {
                throw new Error('Invalid response from backend');
            }
            return data;
        } catch (error) {
            console.error('Backend token exchange error:', error);
            throw error;
        }
    };

    const saveAuthToken = async (user) => {
        try {
            const firebaseToken = await user.getIdToken(/* forceRefresh */ true);

            const backendTokens = await exchangeTokenWithBackend(firebaseToken);

            // Store tokens only after successful exchange
            localStorage.setItem('access_token', backendTokens.access_token);
            localStorage.setItem('token_type', backendTokens.token_type);
            localStorage.setItem('userId', user.uid);
            localStorage.setItem('userEmail', user.email);
        } catch (error) {
            console.error('Error saving auth tokens:', error);
            throw new Error('Failed to complete authentication process');
        }
    };

    const validatePassword = (password) => {
        const minLength = 8;
        const hasUpperCase = /[A-Z]/.test(password);
        const hasLowerCase = /[a-z]/.test(password);
        const hasNumbers = /\d/.test(password);
        const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);

        if (password.length < minLength) return "Password must be at least 8 characters long";
        if (!hasUpperCase) return "Password must contain at least one uppercase letter";
        if (!hasLowerCase) return "Password must contain at least one lowercase letter";
        if (!hasNumbers) return "Password must contain at least one number";
        if (!hasSpecialChar) return "Password must contain at least one special character";
        return null;
    };

    const handleEmailSignup = async (e) => {
        e.preventDefault();
        setError('');
        setMessage('');

        // Validate password
        const passwordError = validatePassword(password);
        if (passwordError) {
            setError(passwordError);
            return;
        }

        // Check if passwords match
        if (password !== confirmPassword) {
            setError('Passwords do not match');
            return;
        }

        setLoading(true);

        try {
            const userCredential = await createUserWithEmailAndPassword(auth, email, password);
            await updateProfile(userCredential.user, {
                displayName: displayName,
                photoURL: `https://ui-avatars.com/api/?name=${username}&background=random`
            });
            await sendEmailVerification(userCredential.user);

            setVerificationMessage('Verification email sent! Please check your inbox and verify your email before continuing.');

            setLoading(false);

            // Set up listener for email verification
            const unsubscribe = auth.onAuthStateChanged(async (user) => {
                if (user?.emailVerified) {
                    await saveAuthToken(userCredential.user);
                    await checkAndCreateProfile(user);
                    unsubscribe();
                    onClose();
                    navigate(`/profile`);
                }
            });

        } catch (error) {
            setError('Failed to create account: ' + error.message);
            setLoading(false);
        }
    };

    const handleGoogleSignup = async () => {
        setLoading(true);
        setError('');

        try {
            const result = await signInWithPopup(auth, new GoogleAuthProvider());
            const user = result.user;

            if (!user.emailVerified) {
                setError('This email address is not verified.');
                return;
            }

            await saveAuthToken(user);
            await checkAndCreateProfile(user);
            onClose();
            navigate(`/profile`);
        } catch (error) {
            setError('Failed to sign in with Google');
        } finally {
            setLoading(false);
        }
    };

    return (
        <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            transition={{ duration: 0.3 }}
            className="space-y-6">
            {error && (
                <motion.div
                    initial={{ opacity: 0, scale: 0.95 }}
                    animate={{ opacity: 1, scale: 1 }}
                    className="p-3 text-sm text-red-600 bg-red-50 rounded-lg">
                    {error}
                </motion.div>
            )}

            <motion.button
                onClick={handleGoogleSignup}
                disabled={loading}
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
                className="w-full flex items-center justify-center gap-3 px-4 py-3 mb-6 bg-white rounded-lg border border-gray-300 hover:bg-gray-50 active:bg-gray-100 transition-colors"
            >
                <FcGoogle className="w-5 h-5" />
                <span className="text-gray-700 font-medium">Sign up with Google</span>
            </motion.button>

            <motion.div className="relative my-6">
                <motion.div className="absolute inset-0 flex items-center">
                    <motion.div className="w-full border-t border-gray-200"></motion.div>
                </motion.div>
                <motion.div className="relative flex justify-center">
                    <span className="px-4 text-sm text-gray-500 bg-white">or sign up with email</span>
                </motion.div>
            </motion.div>

            <form onSubmit={handleEmailSignup} className="space-y-4">
                <motion.div>
                    <label htmlFor="username" className="block text-sm font-medium text-gray-700">
                        Username
                    </label>
                    <input
                        type="text"
                        id="username"
                        value={username}
                        onChange={(e) => setUsername(e.target.value)}
                        required
                        className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                </motion.div>

                <motion.div>
                    <label htmlFor="displayName" className="block text-sm font-medium text-gray-700">
                        Full Name
                    </label>
                    <input
                        type="text"
                        id="displayName"
                        value={displayName}
                        onChange={(e) => setDisplayName(e.target.value)}
                        required
                        className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                </motion.div>

                <motion.div>
                    <label htmlFor="email" className="block text-sm font-medium text-gray-700">
                        Email
                    </label>
                    <input
                        type="email"
                        id="email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        required
                        className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                </motion.div>

                <motion.div>
                    <label htmlFor="password" className="block text-sm font-medium text-gray-700">
                        Password
                    </label>
                    <input
                        type="password"
                        id="password"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        required
                        className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                </motion.div>

                <motion.div>
                    <label htmlFor="confirm-password" className="block text-sm font-medium text-gray-700">
                        Confirm Password
                    </label>
                    <input
                        type="password"
                        id="confirm-password"
                        value={confirmPassword}
                        onChange={(e) => setConfirmPassword(e.target.value)}
                        required
                        className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                </motion.div>

                {verificationMessage && (
                    <motion.div className="p-3 bg-yellow-100 border border-yellow-400 text-yellow-700 rounded mt-2">
                        {verificationMessage}
                    </motion.div>
                )}

                <motion.button
                    type="submit"
                    disabled={loading}
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                    className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400"
                >
                    {loading ? 'Creating account...' : 'Sign up'}
                </motion.button>
            </form>

            <motion.div className="text-sm text-center">
                <span className="text-gray-600">Already have an account? </span>
                <motion.button
                    onClick={onSwitchToLogin}
                    whileHover={{ scale: 1.05 }}
                    className="text-indigo-600 hover:text-indigo-500 font-medium"
                >
                    Sign in
                </motion.button>
            </motion.div>
        </motion.div >
    );
};

export default SignupModal;

================================================================================

Filename: src/components/common/Modal.jsx
Content:
import { useEffect } from 'react';

const Modal = ({ isOpen, onClose, title, children }) => {
    useEffect(() => {
        const handleEscape = (e) => {
            if (e.key === 'Escape') onClose();
        };

        if (isOpen) {
            document.addEventListener('keydown', handleEscape);
            document.body.style.overflow = 'hidden';
        }

        return () => {
            document.removeEventListener('keydown', handleEscape);
            document.body.style.overflow = 'unset';
        };
    }, [isOpen, onClose]);

    if (!isOpen) return null;

    return (
        <div className="fixed inset-0 z-50 overflow-y-auto">
            <div className="fixed inset-0 bg-black/30 backdrop-blur-sm transition-opacity" onClick={onClose}></div>

            <div className="flex min-h-screen items-center justify-center p-4">
                <div
                    className="relative w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all"
                    onClick={(e) => e.stopPropagation()}
                >
                    <div className="flex items-center justify-between mb-4">
                        <h3 className="text-lg font-medium leading-6 text-gray-900">
                            {title}
                        </h3>
                        <button
                            onClick={onClose}
                            className="text-gray-400 hover:text-gray-500 focus:outline-none"
                        >
                            <span className="sr-only">Close</span>
                            <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    {children}
                </div>
            </div>
        </div>
    );
};

export default Modal;

================================================================================

Filename: src/components/game/CustomChessEngine.js
Content:
import { Chess } from 'chess.js';

export class PortalChess extends Chess {
  constructor(fen, maxPortals = 3) {
    super(fen || 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');
    this.portals = {};
    this.portalMoves = 0;
    this.maxPortals = maxPortals;
    this.color_hashes = ['#FF5733', '#33A1FF', '#28A745', '#FFC107', '#8E44AD'];
  }

  moves({ square, verbose, visited } = {}) {
    // Enhanced visited state
    if (!visited) {
      visited = {
        portals: new Set(),        // currently used portals
        portalChain: [],          // sequence of portals used
        blocks: new Set(),         // blocked squares
        moves: new Map(),          // accumulate moves across chain
        simulChecked: new Set(),   // track squares checked for simultaneous existence
        hasTraversedPortal: false  // NEW: flag to track if we've already gone through a portal
      };
    }

    let standardMoves = super.moves({ square, verbose });
    const portalMoves = [];
    const piece = this.get(square);

    if (!piece) return standardMoves;

    // Check if this piece is on a portal - if so, it's already using portal capabilities
    const isOnPortal = this.portals[square] !== undefined;

    // Handle piece on portal (simultaneous existence)
    if (isOnPortal && !visited.simulChecked.has(square)) {
      // Mark that this piece has already traversed a portal
      visited.hasTraversedPortal = true;

      const linkedSquare = this.portals[square].linkedTo;

      // Mark both squares as checked to prevent loops
      visited.simulChecked.add(square);
      visited.simulChecked.add(linkedSquare);

      // Only calculate moves from linked square if there isn't our own piece there
      const pieceAtLinked = this.get(linkedSquare);
      if (!pieceAtLinked || pieceAtLinked.color !== piece.color) {
        // Clone the piece for temporary placement
        const tempPiece = { ...piece };

        // Save original board state
        const originalPieceAtLinked = pieceAtLinked;

        // Temporarily place piece at linked square to calculate moves
        if (pieceAtLinked) this.remove(linkedSquare);
        this.put(tempPiece, linkedSquare);

        // Get ONLY standard moves from the linked square position
        // Don't recurse into further portal traversal
        const linkedStandardMoves = super.moves({ square: linkedSquare, verbose: true });

        // Restore original board state
        this.remove(linkedSquare);
        if (originalPieceAtLinked) {
          this.put(originalPieceAtLinked, linkedSquare);
        }

        // Add these moves to our collection with special flag
        for (const move of linkedStandardMoves) {
          standardMoves.push({
            ...move,
            simulPortalMove: true,
            simulFrom: linkedSquare,
            originalFrom: square
          });
        }
      }
    }

    // If this piece is already on a portal or has traversed one,
    // skip all additional portal traversal logic
    if (visited.hasTraversedPortal) {
      return verbose ? standardMoves : standardMoves.map(m => m.san);
    }

    const isSquareInPiecePath = (from, to, checkSquare, pieceType) => {
      const fromFile = from.charCodeAt(0) - 97; // Convert 'a' to 0
      const fromRank = parseInt(from[1]) - 1;   // Convert '1' to 0
      const toFile = to.charCodeAt(0) - 97;
      const toRank = parseInt(to[1]) - 1;
      const checkFile = checkSquare.charCodeAt(0) - 97;
      const checkRank = parseInt(checkSquare[1]) - 1;
      switch (pieceType) {
        case 'r': // Rook
          if (fromFile === toFile) {
            // Vertical movement
            const minRank = Math.min(fromRank, toRank);
            const maxRank = Math.max(fromRank, toRank);
            return checkFile === fromFile && checkRank > minRank && checkRank < maxRank;
          } else if (fromRank === toRank) {
            // Horizontal movement
            const minFile = Math.min(fromFile, toFile);
            const maxFile = Math.max(fromFile, toFile);
            return checkRank === fromRank && checkFile > minFile && checkFile < maxFile;
          }
          return false;

        case 'b': // Bishop
          const dx = toFile - fromFile;
          const dy = toRank - fromRank;
          if (Math.abs(dx) === Math.abs(dy)) {
            const fileDir = Math.sign(dx);
            const rankDir = Math.sign(dy);
            let file = fromFile + fileDir;
            let rank = fromRank + rankDir;
            while (file !== toFile && rank !== toRank) {
              if (file === checkFile && rank === checkRank) return true;
              file += fileDir;
              rank += rankDir;
            }
          }
          return false;

        case 'q': // Queen - combines rook and bishop logic
          return isSquareInPiecePath(from, to, checkSquare, 'r') ||
            isSquareInPiecePath(from, to, checkSquare, 'b');

        case 'p': // Pawn - only straight movement
          if (fromFile === toFile && Math.abs(toRank - fromRank) === 2) {
            return checkFile === fromFile &&
              checkRank === (fromRank + Math.sign(toRank - fromRank));
          }
          return false;

        default: // Knights and Kings don't have intermediate squares
          return false;
      }
    };

    const blockedMoves = standardMoves.filter(move => {
      const from = typeof move === 'string' ? move.slice(0, 2) : move.from;
      const to = typeof move === 'string' ? move.slice(2, 4) : move.to;
      return Object.keys(this.portals).some(portalSquare =>
        isSquareInPiecePath(from, to, portalSquare, piece.type)
      );
    });

    let unblockedMoves = standardMoves.filter(move => !blockedMoves.includes(move));

    // Filter out standard moves that target portal squares with same-color pieces
    // or straight pawn moves to portals with opposite-color pieces on exit
    unblockedMoves = unblockedMoves.filter(move => {
      const to = typeof move === 'string' ? move.slice(2, 4) : move.to;
      const from = typeof move === 'string' ? move.slice(0, 2) : move.from;

      // Skip if the target isn't a portal square
      if (!this.portals[to]) return true;

      const portalExit = this.portals[to].linkedTo;
      const pieceOnPortalExit = this.get(portalExit);
      const movingPiece = this.get(from);

      // Block move if a same-color piece is on the other end of the portal
      if (pieceOnPortalExit && pieceOnPortalExit.color === movingPiece.color) {
        return false;
      }

      // Special case for pawns: Block straight moves to portals with opposite-color pieces
      if (movingPiece.type === 'p' && pieceOnPortalExit && pieceOnPortalExit.color !== movingPiece.color) {
        // Check if this is a straight move (same file/column)
        if (from.charAt(0) === to.charAt(0)) {
          // This is a straight pawn move to a portal with opposite piece on exit
          // Block this move
          return false;
        }
      }

      return true;
    });

    // Special case: Add diagonal pawn captures through portals
    if (piece && piece.type === 'p') {
      // Calculate diagonal capture squares for pawns
      const file = square.charCodeAt(0) - 97;  // 'a' is 97 in ASCII
      const rank = parseInt(square[1]) - 1;    // Convert to 0-indexed

      // Direction of pawn movement (1 for white, -1 for black)
      const direction = piece.color === 'w' ? 1 : -1;

      // Check both diagonal squares
      [-1, 1].forEach(lateral => {
        const captureFile = file + lateral;
        const captureRank = rank + direction;

        // Check if coordinates are valid
        if (captureFile >= 0 && captureFile < 8 && captureRank >= 0 && captureRank < 8) {
          const diagonalSquare = String.fromCharCode(97 + captureFile) + (captureRank + 1);

          // Check if there's a portal on the diagonal square
          if (this.portals[diagonalSquare]) {
            const portalExit = this.portals[diagonalSquare].linkedTo;
            const pieceOnExit = this.get(portalExit);

            // If there's an opposite-colored piece on the portal exit, add a capture move
            if (pieceOnExit && pieceOnExit.color !== piece.color) {
              portalMoves.push({
                color: piece.color,
                from: square,
                to: portalExit,
                piece: piece.type,
                via: diagonalSquare,
                portal: true,
                flags: 'p', // portal capture
                san: `P${diagonalSquare}-${portalExit}`,
                captured: pieceOnExit.type,
                lan: `${square}${portalExit}`,
                after: this.fen(),
                before: this.fen()
              });
            }
          }
        }
      });
    }

    // Continue with existing portal traversal logic
    if (!visited.hasTraversedPortal) { // Only process portal traversal if we haven't gone through one yet
      Object.entries(this.portals).forEach(([portalSquare, portal]) => {
        if (visited.portals.has(portalSquare)) return;

        const allowedPieces = ['r', 'b', 'q', 'p'];
        if (!allowedPieces.includes(piece.type)) return;

        if (piece.type === 'p') {
          const startRank = piece.color === 'w' ? '2' : '7';
          if (square[1] !== startRank) return;
        }

        // Check if there's a piece of same color on either portal square
        const portalExit = portal.linkedTo;
        const pieceOnPortalEntry = this.get(portalSquare);
        const pieceOnPortalExit = this.get(portalExit);

        // Skip this portal if either portal square has a piece of the same color
        if ((pieceOnPortalEntry && pieceOnPortalEntry.color === piece.color) ||
          (pieceOnPortalExit && pieceOnPortalExit.color === piece.color)) {
          return;
        }

        visited.portals.add(portalSquare);
        visited.portalChain.push(portalSquare);

        const movesToPortal = unblockedMoves.filter(move =>
          (typeof move === 'string' ? move.slice(2, 4) : move.to) === portalSquare
        );

        if (movesToPortal.length > 0) {
          const portalExit = portal.linkedTo;
          const moveToPortal = movesToPortal[0];

          const dx = Math.sign(moveToPortal.to.charCodeAt(0) - moveToPortal.from.charCodeAt(0));
          const dy = Math.sign(parseInt(moveToPortal.to[1]) - parseInt(moveToPortal.from[1]));

          // Check if there's a piece on the portal exit
          const pieceOnPortalExit = this.get(portalExit);

          // If there's a piece on the portal exit, only allow capture moves
          if (pieceOnPortalExit && pieceOnPortalExit.color !== piece.color) {
            // Can only capture the piece on the portal
            portalMoves.push({
              color: piece.color,
              from: square,
              to: portalExit,
              piece: piece.type,
              via: [...visited.portalChain].join('->'),
              portal: true,
              flags: 'p',
              san: `P${[...visited.portalChain].join('->')}-${portalExit}`,
              captured: pieceOnPortalExit.type,
              lan: `${square}${portalExit}`,
              after: this.fen(),
              before: this.fen()
            });

            // Skip normal portal traversal logic
            visited.portals.delete(portalSquare);
            visited.portalChain.pop();
            return;
          }

          // Normal portal traversal logic continues if no piece on portal exit
          const originalPiece = this.remove(square);
          this.put(originalPiece, portalExit);

          // Mark that we've traversed a portal
          const modifiedVisited = { ...visited, hasTraversedPortal: true };

          const exitMoves = this.moves({
            square: portalExit,
            verbose: true,
            visited: modifiedVisited // Pass the modified visited state with hasTraversedPortal flag
          });

          exitMoves.forEach(move => {
            if (visited.blocks.has(move.to)) return;

            const exitDx = Math.sign(move.to.charCodeAt(0) - portalExit.charCodeAt(0));
            const exitDy = Math.sign(parseInt(move.to[1]) - parseInt(portalExit[1]));

            let isValidDirection = false;
            switch (piece.type) {
              case 'r':
                isValidDirection = (exitDx === dx && exitDy === 0) || (exitDx === 0 && exitDy === dy);
                break;
              case 'b':
                isValidDirection = exitDx === dx && exitDy === dy;
                break;
              case 'q':
                isValidDirection = exitDx === dx && exitDy === dy;
                break;
              case 'p':
                isValidDirection = exitDx === 0 && exitDy === (piece.color === 'w' ? 1 : -1);
                break;
            }

            if (isValidDirection) {
              const targetPiece = this.get(move.to);
              if (!targetPiece || targetPiece.color !== piece.color) {
                visited.blocks.add(move.to);
                portalMoves.push({
                  color: piece.color,
                  from: square,
                  to: move.to,
                  piece: piece.type,
                  via: [...visited.portalChain].join('->'),
                  portal: true,
                  flags: 'p',
                  san: `P${[...visited.portalChain].join('->')}-${move.to}`,
                  captured: targetPiece ? targetPiece.type : undefined,
                  lan: `${square}${move.to}`,
                  after: this.fen(),
                  before: this.fen()
                });
              }
            }
          });

          this.remove(portalExit);
          this.put(originalPiece, square);
        }

        visited.portals.delete(portalSquare);
        visited.portalChain.pop();
      });
    }

    const allMoves = [...unblockedMoves, ...portalMoves];
    return verbose ? allMoves : allMoves.map(m => m.san);
  }

  move(moveObj) {
    // Handle portal moves
    if (moveObj.portal) {
      const piece = this.get(moveObj.from);
      if (!piece) return null;

      const moves = this.moves({ square: moveObj.from, verbose: true });
      const isValid = moves.some(move =>
        move.portal &&
        move.to === moveObj.to &&
        move.via === moveObj.via
      );

      if (!isValid) return null;

      this.remove(moveObj.from);
      this.put(piece, moveObj.to);
      this._turn = this._turn === 'w' ? 'b' : 'w';

      return {
        color: piece.color,
        from: moveObj.from,
        to: moveObj.to,
        piece: piece.type,
        portal: true,
        via: moveObj.via
      };
    }

    // Handle simultaneous portal moves
    if (moveObj.simulPortalMove) {
      // Get the piece from the original position
      const piece = this.get(moveObj.originalFrom);
      if (!piece) return null;

      // Validate the move
      const moves = this.moves({ square: moveObj.originalFrom, verbose: true });
      const isValid = moves.some(move =>
        move.simulPortalMove &&
        move.to === moveObj.to &&
        move.simulFrom === moveObj.simulFrom
      );

      if (!isValid) return null;

      // Execute the move (remove from original square, place on target square)
      this.remove(moveObj.originalFrom);
      this.put(piece, moveObj.to);
      this._turn = this._turn === 'w' ? 'b' : 'w';

      return {
        color: piece.color,
        from: moveObj.originalFrom,
        to: moveObj.to,
        piece: piece.type,
        simulPortalMove: true,
        simulFrom: moveObj.simulFrom
      };
    }

    return super.move(moveObj);
  }

  placePair(square1, square2) {
    // Verify that neither square is occupied
    if (this.get(square1) || this.get(square2)) {
      throw new Error("Cannot place portal on an occupied square");
    }

    // Check if either square already has a portal
    if (this.portals[square1] || this.portals[square2]) {
      throw new Error("Cannot place portal on a square that already has a portal");
    }

    const portalCount = Object.keys(this.portals).length / 2;

    if (portalCount >= this.maxPortals) {
      // Find lowest portal_id to remove
      let lowestId = Infinity;
      let portalSquaresToRemove = [];

      Object.entries(this.portals).forEach(([square, portal]) => {
        if (portal.portal_id < lowestId) {
          lowestId = portal.portal_id;
          portalSquaresToRemove = [];
        }
        if (portal.portal_id === lowestId) {
          portalSquaresToRemove.push(square);
        }
      });

      // Remove portal pair with lowest id
      portalSquaresToRemove.forEach(square => {
        delete this.portals[square];
      });
    }

    // Find highest existing portal ID
    let highestId = -1;
    Object.values(this.portals).forEach(portal => {
      if (portal.portal_id > highestId) {
        highestId = portal.portal_id;
      }
    });

    // New portal ID is highest + 1 (or 0 if no portals exist)
    const newPortalId = highestId + 1;
    const colorHash = this.color_hashes[newPortalId % this.color_hashes.length];

    // Create the portal pair with new attributes
    this.portals[square1] = {
      linkedTo: square2,
      player: this.turn(),
      portal_id: newPortalId,
      color_hash: colorHash
    };

    this.portals[square2] = {
      linkedTo: square1,
      player: this.turn(),
      portal_id: newPortalId,
      color_hash: colorHash
    };
  }

  isGameOver() {
    return {
      over: this.isCheckmate() || this.isStalemate() || this.isDraw(),
      winner: this.isCheckmate() ? (this.turn() === 'w' ? 'black' : 'white') : null,
      reason: this.isCheckmate() ? 'checkmate' :
        this.isStalemate() ? 'stalemate' :
          this.isDraw() ? 'draw' : null
    };
  }

  isCheckmate() {
    return super.isCheckmate();
  }

  isStalemate() {
    return super.isStalemate();
  }

  isDraw() {
    return super.isDraw() ||
      super.isThreefoldRepetition() ||
      super.isInsufficientMaterial();
  }
}

================================================================================

Filename: src/components/game/GameEndPopup.jsx
Content:
import PropTypes from 'prop-types';
import { ref, push, set } from 'firebase/database';
import { database } from '../../firebase/config';
import { useAuth } from '../../contexts/AuthContext';

const GameEndPopup = ({ winner, reason, onClose, onRematch, gameId, disableRematch }) => {
    const { user } = useAuth();

    const getMessage = () => {
        switch (reason) {
            case 'checkmate':
                return `Game Over! ${winner.charAt(0).toUpperCase() + winner.slice(1)} wins by checkmate!`;
            case 'stalemate':
                return 'Game Over! Draw by stalemate';
            case 'draw':
                return 'Game Over! Draw by agreement';
            case 'timeout':
                return `Game Over! ${winner.charAt(0).toUpperCase() + winner.slice(1)} wins on time!`;
            case 'abandoned':
                return `Game Over! ${winner.charAt(0).toUpperCase() + winner.slice(1)} wins by abandonment!`;
            default:
                return 'Game Over!';
        }
    };

    const handleRematch = async () => {
        try {
            const notificationRef = push(ref(database, `games/${gameId}/notifications`));
            await set(notificationRef, {
                type: 'rematch_request',
                from: user.uid,
                fromName: user.displayName || user.email,
                timestamp: Date.now()
            });
            onRematch();
        } catch (error) {
            console.error('Error sending rematch notification:', error);
        }
    };

    const handleExit = () => {
        onClose();
        window.location.href = "/profile";
    };

    const isWaiting = reason === 'waiting';
    const displayMessage = isWaiting ? "Waiting for the other player to join..." : getMessage();

    return (
        <div className="fixed inset-0 backdrop-blur-sm bg-black/30 flex items-center justify-center z-50">
            <div className="bg-white/90 p-6 rounded-lg shadow-lg backdrop-blur-sm">
                <h2 className="text-xl font-bold mb-4">{displayMessage}</h2>
                <div className="flex justify-center gap-4">
                    {!isWaiting ? (
                        <>
                            <button
                                onClick={handleRematch}
                                disabled={disableRematch}
                                className={`bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 ${disableRematch ? 'opacity-50 cursor-not-allowed' : ''}`}
                            >
                                Rematch
                            </button>
                            <button
                                onClick={handleExit}
                                className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
                            >
                                Exit
                            </button>
                            <button
                                onClick={onClose}
                                className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600"
                            >
                                Close
                            </button>
                        </>
                    ) : (
                        <button
                            onClick={onClose}
                            className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600"
                        >
                            Close
                        </button>
                    )}
                </div>
            </div>
        </div>
    );
};

GameEndPopup.propTypes = {
    winner: PropTypes.oneOf(['white', 'black', 'draw', null]),
    reason: PropTypes.string,
    onClose: PropTypes.func.isRequired,
    onRematch: PropTypes.func.isRequired,
    gameId: PropTypes.string,
    disableRematch: PropTypes.bool,
};

export default GameEndPopup;

================================================================================

Filename: src/components/game/PortalChessGame.css
Content:
.game-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  max-width: 800px;
  margin: 0 auto;
}

.game-controls {
  width: 100%;
  margin-bottom: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.portal-button {
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  background-color: #2196f3;
  color: white;
  cursor: pointer;
  transition: background-color 0.3s;
}

.portal-button:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

.portal-button.active {
  background-color: #f44336;
}

.portal-instructions {
  margin-top: 10px;
  color: #666;
}

.board-container {
  width: 100%;
  max-width: 600px;
  aspect-ratio: 1;
}

.game-status {
  margin-top: 20px;
  font-size: 18px;
  font-weight: bold;
  color: #333;
}

.portal-square {
  position: relative;
  width: 100%;
  height: 100%;
}

.piece-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
}

.portal-indicator {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 3px solid #2196f3;
  border-radius: 50%;
  opacity: 0.5;
  z-index: 1;
}

/* .portal-chess-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  padding: 20px;
} */

.controls {
  display: flex;
  gap: 10px;
}

.portal-button {
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  background-color: #2196f3;
  color: white;
  cursor: pointer;
  transition: all 0.3s ease;
}

.portal-button:hover {
  background-color: #1976d2;
}

.portal-button.active {
  background-color: #f44336;
}

.portal-button.active:hover {
  background-color: #d32f2f;
}

.portal-piece {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.5;
  pointer-events: none;
  z-index: 1;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

/* Add new styles for chat */
.game-board-chat-container {
  display: flex;
  width: 100%;
  gap: 20px;
  margin-bottom: 20px;
}

/* .board-container {
  flex: 1;
  min-width: 300px;
  max-width: 600px;
} */

.chat-container {
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 400px;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.chat-messages {
  flex: 1;
  overflow-y: auto;
  padding: 10px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.chat-message {
  padding: 8px 12px;
  border-radius: 8px;
  max-width: 80%;
  word-break: break-word;
}

.my-message {
  align-self: flex-end;
  background-color: #dcf8c6;
}

.other-message {
  align-self: flex-start;
  background-color: #f1f0f0;
}

.message-sender {
  font-size: 0.8rem;
  font-weight: bold;
  margin-bottom: 2px;
  color: #555;
}

.message-text {
  font-size: 0.95rem;
}

.chat-input-form {
  display: flex;
  padding: 10px;
}

.chat-input {
  flex: 1;
  padding: 8px 12px;
  border-radius: 20px;
  outline: none;
}


.chat-send-button {
  margin-left: 8px;
  padding: 8px 16px;
  background-color: #2196f3;
  color: white;
  border: none;
  border-radius: 20px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.chat-send-button:hover {
  background-color: #1976d2;
}

/* Responsive design for mobile */
@media (max-width: 768px) {
  .game-board-chat-container {
    flex-direction: column;
  }

  .board-container,
  .chat-container {
    width: 100%;
    max-width: 100%;
  }

  .chat-container {
    height: 300px;
  }
}

/* Add new styles for chat header and voice controls */
.chat-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
}

.chat-header h3 {
  margin: 0;
  font-size: 1rem;
  font-weight: 600;

}

.voice-chat-controls {
  display: flex;
  align-items: center;
  gap: 8px;
}

.voice-chat-toggle,
.mute-button {
  padding: 6px 10px;
  border: none;
  border-radius: 4px;
  font-size: 0.8rem;
  cursor: pointer;
  transition: all 0.2s;
}

.voice-chat-toggle {
  background-color: #2196f3;
  color: white;
}

.voice-chat-toggle:hover {
  background-color: #1976d2;
}

.voice-chat-toggle.active {
  background-color: #f44336;
}

.voice-chat-toggle.active:hover {
  background-color: #d32f2f;
}

.voice-chat-toggle:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.mute-button {
  background-color: #4caf50;
  color: white;
}

.mute-button:hover {
  background-color: #388e3c;
}

.mute-button.muted {
  background-color: #ff9800;
}

.mute-button.muted:hover {
  background-color: #f57c00;
}

.connection-status {
  font-size: 0.75rem;
  padding: 3px 6px;
  border-radius: 3px;
  background-color: #eee;
}

.connection-status.disconnected {
  color: #666;
}

.connection-status.waiting {
  color: #ff9800;
}

.connection-status.connecting {
  color: #2196f3;
}

.connection-status.connected {
  color: #4caf50;
}

.connection-status.error {
  color: #f44336;
}

.empty-chat-message {
  text-align: center;
  color: #888;
  margin: auto;
  font-style: italic;
}

/* Update chat messages container to account for the header */
.chat-messages {
  flex: 1;
  overflow-y: auto;
  padding: 10px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.chat-message {
  padding: 8px 12px;
  border-radius: 12px;
  max-width: 80%;
  word-break: break-word;
  position: relative;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.my-message {
  align-self: flex-end;
  background-color: #dcf8c6;
  border-bottom-right-radius: 4px;
  margin-left: 20%;
}

.other-message {
  align-self: flex-start;
  background-color: #ffffff;
  border-bottom-left-radius: 4px;
  margin-right: 20%;
}

================================================================================

Filename: src/components/game/PortalChessGame.jsx
Content:
import { useCallback, useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import PlayerInfo from './components/PlayerInfo';
import ChessboardWrapper from './components/ChessboardWrapper';
import GameHistory from './components/GameHistory';
import ChatComponent from './components/ChatComponent';
import { useLostPieces } from './hooks/useLostPieces';
import { PortalChess } from './CustomChessEngine';
import { useChat } from './hooks/useChat';
import { useVoiceChat } from './hooks/useVoiceChat';
import { useMoveHistory } from './hooks/useMoveHistory';
import './PortalChessGame.css';
import GameEndPopup from './GameEndPopup';
import Modal from '../common/Modal';
import { useGameId } from './hooks/useGameId';
import { useServerTime } from './hooks/useServerTime';
import { useArchiving } from './hooks/useArchiving';
import { useGameLifecycle } from './hooks/useGameLifecycle';
import { useGameState } from './hooks/useGameState';
import { useGameTimer } from './hooks/useGameTimer';
import { useGameActions } from './hooks/useGameActions';
import { useRematch } from './hooks/useRematch';

const PortalChessGame = () => {
    const { user } = useAuth();

    // --- Setup Hooks ---
    const { gameId, activeGame, setActiveGame } = useGameId();
    const { getServerTime } = useServerTime();

    // --- Archiving Hook (Manages central archiving logic and state) ---
    const { initiateArchiving, isArchivingLocally, isGameArchived } = useArchiving(gameId);

    // --- Lifecycle Hook (Handles exiting, end popup state) ---
    // Needs initiateArchiving now, provides setters for popup
    const [showGameEndPopup, setShowGameEndPopup] = useState(false); // State still needed here for popup
    const [gameEndDetails, setGameEndDetails] = useState(null); // State still needed here for popup
    const { exitGame } = useGameLifecycle(
        gameId,
        user,
        activeGame,
        setActiveGame,
        initiateArchiving, // Pass initiateArchiving
        setGameEndDetails, // Pass setter
        setShowGameEndPopup, // Pass setter
        isGameArchived,    // Pass archive status
        isArchivingLocally // Pass local archiving status
    );

    // --- State for Temporary Archived Banner ---
    const [showArchivedBanner, setShowArchivedBanner] = useState(false);

    // Effect to show the archived banner temporarily
    useEffect(() => {
        let timerId;
        if (isGameArchived) {
            setShowArchivedBanner(true);
            timerId = setTimeout(() => {
                setShowArchivedBanner(false);
            }, 5000); // 5 seconds
        } else {
            // If isGameArchived becomes false (e.g., during rematch setup),
            // immediately hide the banner
            setShowArchivedBanner(false);
        }

        // Cleanup function to clear the timer
        return () => {
            if (timerId) {
                clearTimeout(timerId);
            }
        };
    }, [isGameArchived]); // Run only when isGameArchived changes

    // --- Game State & Dependent Hooks ---
    // 1. Lost Pieces Hook (Needs a game object, initialize with default)
    //    We'll update it based on the actual game object via useEffect below.
    const [lostPieces, updateLostPieces] = useLostPieces(new PortalChess());

    // 2. Game State Hook (Manages game and gameState from Firebase)
    //    Now only needs popup setters.
    const { game, setGame, gameState } = useGameState(
        gameId,
        setGameEndDetails,
        setShowGameEndPopup
    );
    
    // 3. Effect to sync Lost Pieces with Game State
    const [lastFen, setLastFen] = useState('');
    useEffect(() => {
        if (game && updateLostPieces) {
          
            
            // Force update when moves are made
            updateLostPieces(game);
        }
    }, [game, game?.fen?.(), updateLostPieces]);

    // Other dependent hooks
    const moveHistory = useMoveHistory(gameId);
    const { chatMessages, newMessage, setNewMessage, sendMessage } = useChat(gameId, user);
    const { voiceChatEnabled, isMuted, isConnecting, connectionStatus, remoteAudioRef, toggleVoiceChat, toggleMute } = useVoiceChat(gameId, gameState, user);

    // Utility functions (derived state)
    const areBothPlayersJoined = useCallback(() => {
        return !!(gameState?.white_player && gameState?.black_player);
    }, [gameState]);

    const isMyTurn = useCallback(() => {
        if (!gameState || !user || !areBothPlayersJoined()) return false;
        const myColor = gameState.white_player === user.uid ? 'white' :
            gameState.black_player === user.uid ? 'black' : null;
        // Also check game status - cannot be turn if finished/archiving/archived
        return myColor === gameState.current_turn && 
               gameState.status === 'active' && 
               !isGameArchived && 
               !isArchivingLocally;
    }, [gameState, user, areBothPlayersJoined, isGameArchived, isArchivingLocally]);

    // --- Game Timer Hook ---
    // Needs initiateArchiving and archive status
    const { whiteTime, blackTime, setWhiteTime, setBlackTime } = useGameTimer(
        gameId,
        gameState,
        getServerTime,
        areBothPlayersJoined,
        initiateArchiving, // Pass initiateArchiving
        setGameEndDetails, // Pass setter
        setShowGameEndPopup, // Pass setter
        isGameArchived,    // Pass archive status
        isArchivingLocally // Pass local archiving status
    );

    // --- Game Actions Hook ---
    // Pass the correct updateLostPieces
    const {
        makeMove,
        handleSquareClick,
        portalMode,
        setPortalMode,
        portalStart,
        selectedSquare,
    } = useGameActions(
        game, // Pass the game object from useGameState
        setGame,
        gameState,
        user,
        gameId,
        moveHistory,
        getServerTime,
        updateLostPieces, // Pass the function from useLostPieces
        initiateArchiving,
        isGameArchived,
        isArchivingLocally,
        isMyTurn,
        areBothPlayersJoined,
        whiteTime,
        blackTime,
        setGameEndDetails,
        setShowGameEndPopup
    );

    // --- Rematch Hook ---
    // No changes needed here, only depends on game state and timer setters
    const {
        showRematchRequest,
        setShowRematchRequest,
        rematchRequestFrom,
        handleAcceptRematch,
        sendRematchRequest
    } = useRematch(
        gameId,
        user,
        gameState,
        setShowGameEndPopup,
        setGameEndDetails,
        setWhiteTime,
        setBlackTime
    );

    // --- Derived State for UI ---
    const amIWhitePlayer = gameState?.white_player === user?.uid;
    const whitePlayerName = gameState?.white_player_name || "White Player";
    const blackPlayerName = gameState?.black_player_name || "Black Player";
    const topPlayerColor = amIWhitePlayer ? 'black' : 'white';
    const bottomPlayerColor = amIWhitePlayer ? 'white' : 'black';

    // --- Render Logic ---
    // Add checks for isGameArchived or isArchivingLocally if needed to disable UI elements
    return (
        <div className="portal-chess-container bg-gradient-to-bl from-indigo-500/70 to-blue-600/70 flex flex-col md:flex-row w-full h-screen">
            {/* Archiving status - Increase z-index */}
            {(isArchivingLocally || gameState?.status === 'archiving') && (
                <div className="absolute top-0 left-0 w-full bg-yellow-500 text-black text-center p-1 z-[1100]">
                    Archiving game...
                </div>
            )}
            {/* Archived status - Increase z-index */}
            {showArchivedBanner && (
                 <div className="absolute top-0 left-0 w-full bg-gray-500 text-white text-center p-1 z-[1100]">
                     Game archived.
                 </div>
             )}

            <div className="w-full md:w-1/2 bg-transparent p-2 flex flex-col h-full max-h-screen overflow-hidden">
                <PlayerInfo
                    isTopPlayer={true}
                    playerNumber={2}
                    playerName={amIWhitePlayer ? blackPlayerName : whitePlayerName}
                    isMyTurn={isMyTurn}
                    lostPieces={lostPieces}
                    playerColor={topPlayerColor}
                    timeRemaining={amIWhitePlayer ? blackTime : whiteTime}
                />
                <ChessboardWrapper
                    game={game}
                    makeMove={makeMove}
                    handleSquareClick={handleSquareClick}
                    gameState={gameState}
                    user={user}
                    isMyTurn={isMyTurn}
                    portalMode={portalMode}
                    portalStart={portalStart}
                    selectedSquare={selectedSquare}
                />
                <PlayerInfo
                    isTopPlayer={false}
                    playerNumber={1}
                    playerName={amIWhitePlayer ? whitePlayerName : blackPlayerName}
                    isMyTurn={isMyTurn}
                    lostPieces={lostPieces}
                    playerColor={bottomPlayerColor}
                    timeRemaining={amIWhitePlayer ? whiteTime : blackTime}
                />
            </div>
            <div className="w-full md:w-1/2 bg-transparent p-2 flex flex-col h-full">
                <GameHistory
                    moveHistory={moveHistory}
                    portalMode={portalMode}
                    setPortalMode={setPortalMode}
                    isMyTurn={isMyTurn}
                    exit={exitGame}
                    portalCount={gameState?.portal_count || 0}
                />
                <ChatComponent
                    chatMessages={chatMessages}
                    newMessage={newMessage}
                    setNewMessage={setNewMessage}
                    sendMessage={sendMessage}
                    voiceChatEnabled={voiceChatEnabled}
                    isConnecting={isConnecting}
                    toggleVoiceChat={toggleVoiceChat}
                    isMuted={isMuted}
                    toggleMute={toggleMute}
                    connectionStatus={connectionStatus}
                    user={user}
                    remoteAudioRef={remoteAudioRef}
                />
            </div>
            {showGameEndPopup && gameEndDetails && (
                <GameEndPopup
                    winner={gameEndDetails.winner}
                    reason={gameEndDetails.reason}
                    onClose={() => {
                        setShowGameEndPopup(false);
                    }}
                    onRematch={sendRematchRequest}
                    onExit={exitGame}
                    gameId={gameId}
                    disableRematch={isArchivingLocally || gameState?.status === 'archiving'}
                />
            )}
            {showRematchRequest && rematchRequestFrom && (
                <Modal
                    isOpen={showRematchRequest}
                    onClose={() => setShowRematchRequest(false)}
                    title="Rematch Request"
                >
                    <div className="p-4">
                        <p className="mb-4">{rematchRequestFrom.name} wants a rematch!</p>
                        <div className="flex justify-end gap-4">
                            <button
                                onClick={() => setShowRematchRequest(false)}
                                className="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600"
                            >
                                Decline
                            </button>
                            <button
                                onClick={handleAcceptRematch}
                                className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                            >
                                Accept
                            </button>
                        </div>
                    </div>
                </Modal>
            )}
        </div>
    );
};

export default PortalChessGame;


================================================================================

Filename: src/components/game/components/ChatComponent.jsx
Content:
import PropTypes from 'prop-types';

const ChatComponent = ({
    chatMessages,
    newMessage,
    setNewMessage,
    sendMessage,
    voiceChatEnabled,
    isConnecting,
    toggleVoiceChat,
    isMuted,
    toggleMute,
    connectionStatus,
    user,
    remoteAudioRef
}) => {
    return (
        <div className="chat-container bg-indigo-100 border border-indigo-200">
            <div className="chat-header bg-indigo-100 border-b border-indigo-200 flex justify-between items-center p-2">
                <div className="text-m text-indigo-700 font-medium">
                    Game Chat
                </div>
                <div className="voice-chat-controls flex items-center space-x-2">
                    <button
                        onClick={toggleVoiceChat}
                        className={`voice-chat-toggle px-3 py-1.5 rounded-md text-sm font-medium transition-all ${voiceChatEnabled
                            ? 'bg-red-500 hover:bg-red-600 text-white'
                            : 'bg-green-500 hover:bg-green-600 text-white'
                            } ${connectionStatus === 'connecting' ? 'opacity-75 cursor-wait' : ''}`}
                        disabled={connectionStatus === 'connecting'}
                    >
                        {connectionStatus === 'connecting' ? (
                            <span className="flex items-center">
                                <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Connecting...
                            </span>
                        ) : voiceChatEnabled ? 'Disable Voice' : 'Enable Voice'}
                    </button>

                    {voiceChatEnabled && (
                        <button
                            onClick={toggleMute}
                            className={`mute-button px-3 py-1.5 rounded-md text-sm font-medium transition-all ${isMuted
                                ? 'bg-blue-500 hover:bg-blue-600 text-white'
                                : 'bg-yellow-500 hover:bg-yellow-600 text-white'
                                }`}
                            disabled={connectionStatus !== 'connected'}
                        >
                            <span className="flex items-center">
                                {isMuted ? (
                                    <>
                                        <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2" />
                                        </svg>
                                        Unmute
                                    </>
                                ) : (
                                    <>
                                        <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />
                                        </svg>
                                        Mute
                                    </>
                                )}
                            </span>
                        </button>
                    )}

                    {voiceChatEnabled && (
                        <div className={`connection-status px-2.5 py-1 rounded-full text-xs font-medium ${connectionStatus === 'disconnected' ? 'bg-gray-200 text-gray-800' :
                            connectionStatus === 'waiting' ? 'bg-yellow-100 text-yellow-800' :
                                connectionStatus === 'connecting' ? 'bg-blue-100 text-blue-800' :
                                    connectionStatus === 'connected' ? 'bg-green-100 text-green-800' :
                                        'bg-red-100 text-red-800'
                            }`}>
                            <span className="flex items-center">
                                <span className={`h-2 w-2 rounded-full mr-1.5 ${connectionStatus === 'disconnected' ? 'bg-gray-500' :
                                    connectionStatus === 'waiting' ? 'bg-yellow-500' :
                                        connectionStatus === 'connecting' ? 'bg-blue-500 animate-pulse' :
                                            connectionStatus === 'connected' ? 'bg-green-500' :
                                                'bg-red-500'
                                    }`}></span>
                                {connectionStatus === 'disconnected' && 'Disconnected'}
                                {connectionStatus === 'waiting' && 'Waiting for opponent...'}
                                {connectionStatus === 'connecting' && 'Connecting...'}
                                {connectionStatus === 'connected' && 'Connected'}
                                {connectionStatus === 'error' && 'Connection Error'}
                            </span>
                        </div>
                    )}
                </div>
            </div>
            <div className="chat-messages bg-indigo-100">
                {chatMessages.length === 0 ? (
                    <div className="empty-chat-message">No messages yet. Start the conversation!</div>
                ) : (
                    chatMessages.map((message) => (
                        <div
                            key={message.id}
                            className={`chat-message ${message.sender === user?.uid ? 'my-message' : 'other-message'}`}
                        >
                            <div className="message-sender">{message.senderName}</div>
                            <div className="message-text">{message.text}</div>
                        </div>
                    ))
                )}
            </div>
            <form onSubmit={sendMessage} className="chat-input-form border-t border-indigo-200">
                <input
                    type="text"
                    value={newMessage}
                    onChange={(e) => setNewMessage(e.target.value)}
                    placeholder="Type a message..."
                    className="chat-input border border-indigo-200 rounded-md px-3 py-2 w-full focus:outline-none focus:ring-1 focus:ring-indigo-500"
                />
                <button type="submit" className="chat-send-button">
                    Send
                </button>
            </form>

            <audio ref={remoteAudioRef} autoPlay playsInline hidden />
        </div>
    );
};

ChatComponent.propTypes = {
    chatMessages: PropTypes.arrayOf(PropTypes.shape({
        id: PropTypes.string.isRequired,
        text: PropTypes.string.isRequired,
        sender: PropTypes.string.isRequired,
        senderName: PropTypes.string.isRequired
    })).isRequired,
    newMessage: PropTypes.string.isRequired,
    setNewMessage: PropTypes.func.isRequired,
    sendMessage: PropTypes.func.isRequired,
    voiceChatEnabled: PropTypes.bool.isRequired,
    isConnecting: PropTypes.bool.isRequired,
    toggleVoiceChat: PropTypes.func.isRequired,
    isMuted: PropTypes.bool.isRequired,
    toggleMute: PropTypes.func.isRequired,
    connectionStatus: PropTypes.oneOf(['disconnected', 'waiting', 'connecting', 'connected', 'error']).isRequired,
    user: PropTypes.shape({
        uid: PropTypes.string.isRequired
    }),
    remoteAudioRef: PropTypes.object.isRequired
};

export default ChatComponent;

================================================================================

Filename: src/components/game/components/ChessboardWrapper.jsx
Content:
import PropTypes from 'prop-types';
import { Chessboard } from 'react-chessboard';
import { useEffect, useState, useMemo } from 'react'; // Import useMemo

// Helper function to determine square color (standard chessboard)
// Returns true if the square is light, false if dark.
function isLightSquare(square) {
  if (!square || square.length !== 2) return false; // Handle invalid input
  const file = square.charCodeAt(0) - 'a'.charCodeAt(0); // 0 for 'a', ..., 7 for 'h'
  const rank = parseInt(square[1], 10) - 1; // 0 for rank '1', ..., 7 for rank '8'
  // Standard chessboards: squares where (file + rank) is odd are light.
  return (file + rank) % 2 !== 0;
}

const ChessboardWrapper = ({
  game,
  makeMove,
  handleSquareClick,
  gameState,
  user,
  isMyTurn,
  portalStart,
  selectedSquare
}) => {
  const [boardWidth, setBoardWidth] = useState(400);

  useEffect(() => {
    const handleResize = () => {
      const container = document.getElementById('board-container');
      if (container) {
        const availableHeight = window.innerHeight - 120;
        const availableWidth = container.clientWidth;
        const size = Math.min(availableHeight, availableWidth);
        setBoardWidth(size);
      }
    };
    window.addEventListener('resize', handleResize);
    handleResize();
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Define the custom SVG pieces using useMemo for performance
  const customPieces = useMemo(() => {
    const pieces = ['wP', 'wN', 'wB', 'wR', 'wQ', 'wK', 'bP', 'bN', 'bB', 'bR', 'bQ', 'bK'];
    const pieceComponents = {};

    pieces.forEach((piece) => {
      // Map react-chessboard notation (e.g., wP) to your SVG file naming convention (e.g., w_p)
      const svgFileName = `${piece[0].toLowerCase()}_${piece[1].toLowerCase()}.svg`;
      const svgPath = `/assets/pieces/${svgFileName}`; // Path relative to public folder

      pieceComponents[piece] = ({ squareWidth }) => (
        <div
          style={{
            width: squareWidth,
            height: squareWidth,
            backgroundImage: `url(${svgPath})`,
            backgroundSize: 'contain', // Or 'cover', '100%', etc. depending on desired look
            backgroundRepeat: 'no-repeat',
            backgroundPosition: 'center center'
          }}
        />
      );
    });

    return pieceComponents;
  }, []); // Empty dependency array ensures this runs only once

  // Calculate customSquareStyles using useMemo for performance
  const customSquareStyles = useMemo(() => {
    const styles = {
      // Apply portal styles first
      ...Object.entries(game.portals).reduce((acc, [square, portal]) => ({
        ...acc,
        [square]: {
          background: `radial-gradient(circle, ${portal.color_hash || '#2196f3'} 0%, transparent 70%)`,
          borderRadius: '50%'
        }
      }), {}),
      // Apply portal start selection style
      ...(portalStart ? {
        [portalStart]: {
          background: 'radial-gradient(circle, #4CAF50 0%, transparent 70%)',
          borderRadius: '50%'
        }
      } : {}),
    };

    // Apply selected square and move highlights if a square is selected
    if (selectedSquare) {
      // Determine the background color based on whether the selected square is light or dark
      const selectedBgColor = isLightSquare(selectedSquare)
        ? '#b1a7fc' // Highlight color for selected light squares
        : '#9990ec'; // Highlight color for selected dark squares

      // Apply the selected square background color, preserving existing styles (like portal background)
      styles[selectedSquare] = {
        ...(styles[selectedSquare] || {}), // Keep existing styles if any (e.g., portal)
        backgroundColor: selectedBgColor
      };

      // Calculate and apply move highlights
      const moveStyles = game.moves({ square: selectedSquare, verbose: true }).reduce((acc, move) => {
        // Determine portal color for this move if it's a portal move
        let portalColor = 'rgba(33, 150, 243, 0.4)'; // Default blue
        if (move.portal && move.via) {
          const firstPortalSquare = move.via.split('->')[0];
          if (game.portals[firstPortalSquare]?.color_hash) {
            // Attempt to parse the portal color and add alpha, fallback if invalid
            try {
              // Basic hex check
              if (/^#[0-9A-F]{6}$/i.test(game.portals[firstPortalSquare].color_hash)) {
                 portalColor = `${game.portals[firstPortalSquare].color_hash}66`; // Add ~40% alpha
              } else {
                 // Potentially handle other color formats or keep default
                 console.warn("Invalid portal color format:", game.portals[firstPortalSquare].color_hash);
              }
            } catch (e) {
              console.error("Error processing portal color:", e);
            }
          }
        }

        const moveHighlightStyle = {
          background: move.portal
            ? move.captured
              ? `radial-gradient(circle, transparent 35%, ${portalColor} 36%, ${portalColor} 45%, transparent 46%)` // Portal capture
              : `radial-gradient(circle, ${portalColor} 0%, ${portalColor} 30%, transparent 31%)` // Portal move
            : move.captured
              ? 'radial-gradient(circle, transparent 35%, rgba(0, 255, 0, 0.4) 36%, rgba(0, 255, 0, 0.4) 45%, transparent 46%)' // Normal capture
              : 'radial-gradient(circle, rgba(0, 255, 0, 0.4) 0%, rgba(0, 255, 0, 0.4) 30%, transparent 31%)' // Normal move
        };

        return {
          ...acc,
          [move.to]: {
            ...(styles[move.to] || {}), // Keep existing styles if any (e.g., portal)
            ...moveHighlightStyle
          }
        };
      }, {});

      // Merge move styles into the main styles object, potentially overwriting portal styles if a move ends on a portal
      Object.assign(styles, moveStyles);
    }

    return styles;
  }, [game, portalStart, selectedSquare]); // Dependencies for useMemo

  return (
    <div
      className="flex-grow bg-transparent flex items-center justify-center m-1 overflow-hidden"
      id="board-container"
    >
      <div className="board-container" style={{
        width: boardWidth,
        maxWidth: '100%',
        maxHeight: 'calc(100vh)'
      }}>
        <Chessboard
          position={game.fen()}
          onPieceDrop={(source, target) => makeMove(source, target)}
          onSquareClick={handleSquareClick}
          boardOrientation={gameState?.black_player === user?.uid ? 'black' : 'white'}
          arePiecesDraggable={isMyTurn()}
          customBoardStyle={{
            borderRadius: '3px',
          }}
          customSquareStyles={customSquareStyles}
          customDarkSquareStyle={{ backgroundColor: '#b7c0d8' }}
          customLightSquareStyle={{ backgroundColor: '#e8edf9' }}
          customPieces={customPieces}
        />
      </div>
    </div>
  );
};

ChessboardWrapper.propTypes = {
  game: PropTypes.shape({
    fen: PropTypes.func.isRequired,
    portals: PropTypes.object.isRequired,
    moves: PropTypes.func.isRequired,
    // Add other game methods/properties used if necessary
  }).isRequired,
  makeMove: PropTypes.func.isRequired,
  handleSquareClick: PropTypes.func.isRequired,
  gameState: PropTypes.shape({
    black_player: PropTypes.string
  }),
  user: PropTypes.shape({
    uid: PropTypes.string
  }),
  isMyTurn: PropTypes.func.isRequired,
  // portalMode: PropTypes.bool.isRequired, // Removed if not used directly here
  portalStart: PropTypes.string,
  selectedSquare: PropTypes.string
};

export default ChessboardWrapper;

================================================================================

Filename: src/components/game/components/GameHistory.jsx
Content:
import { useCallback } from 'react';
import PropTypes from 'prop-types';

const GameHistory = ({ moveHistory = [], portalMode, setPortalMode, isMyTurn, exit, portalCount }) => {
  const getMoveDisplay = useCallback((move) => {
    if (!move) return '';
  
    // For portal creation moves, SHOW where the portal was created
    if (move.via && move.portal) {
      const piece = move.piece ? move.piece.toUpperCase() : '';
      const from = move.from || '';
      const to = move.to || '';
      
      if (from && to) {
        return `${piece} ${from}→${to}`;
      } else {
        return `Portal Move`; // Fallback if coordinates are missing
      }
    }
    else if (move.portal) {
      // Make sure from and to are defined
      if (move.from && move.to) {
        return `Portal ${move.from}↔${move.to}`;
      } else {
        return 'Portal Created'; // Fallback if coordinates are missing
      }
    }
    
    // For moves using a portal (via), now show piece type and coordinates
    // For regular moves, use standard algebraic notation
    if (move.san) {
      return move.san;
    }
    
    // Final fallback with safety checks
    const piece = move.piece ? move.piece.toUpperCase() : '';
    const from = move.from || '';
    const to = move.to || '';
    
    if (!from || !to) {
      // Changed fallback message to be more generic
      return piece ? `${piece} moved` : 'Move made';
    }
    
    return `${piece}${from}-${to}`;
  }, []);

  return (
    <div className="bg-indigo-100 flex-grow mb-2 rounded-lg border border-indigo-200 flex flex-col overflow-hidden" style={{ maxHeight: "471px" }}>
      <div className="relative flex justify-end items-center p-2 border-b border-indigo-200 flex-shrink-0 space-x-2">
        <div className="absolute left-4 text-m text-left text-indigo-700 font-medium pointer-events-none">
          Moves
        </div>
        <div className="flex items-center space-x-2 flex-shrink-0 z-10">
          <button
            onClick={() => setPortalMode(!portalMode)}
            className={`bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded text-sm transition-colors duration-150 flex items-center ${portalMode ? 'ring-2 ring-blue-300' : ''} disabled:opacity-50 disabled:cursor-not-allowed`}
            disabled={!isMyTurn() || portalCount === 0}
          >
            {portalMode ? 'Cancel Portal' : 'Place Portal'}
          </button>
          <button
            onClick={exit}
            className="bg-red-500 hover:bg-red-600 text-white py-1 px-3 rounded text-sm transition-colors duration-150 flex items-center"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
            </svg>
            Leave Game
          </button>
        </div>
      </div>


      <div className="overflow-y-auto p-3 flex-grow bg-indigo-100">
        {moveHistory.length === 0 ? (
          <div className="flex flex-col items-center justify-center h-full text-gray-400 italic text-sm gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              {portalMode ? (
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5}
                  d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
              ) : (
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5}
                  d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              )}
            </svg>
            <span>
              {portalMode ? 'Select two squares to place a portal' : 'No moves yet. Game will start soon.'}
            </span>
          </div>
        ) : (
          <div className="space-y-2">
            <div className="flex justify-center mb-3">
              <div className="bg-indigo-100 text-gray-500 px-4 py-1 text-xs font-medium">
                Game started
              </div>
            </div>

            <div className="grid grid-cols-1 gap-2">
              {Array.from({ length: Math.ceil(moveHistory.length / 2) }).map((_, turnIndex) => {
                const whiteIndex = turnIndex * 2;
                const blackIndex = whiteIndex + 1;
                const whiteMove = moveHistory[whiteIndex];
                const blackMove = blackIndex < moveHistory.length ? moveHistory[blackIndex] : null;

                return (
                  <div key={turnIndex} className="flex flex-col sm:flex-row gap-1">
                    <div className="w-10 text-xs font-semibold text-gray-500 flex items-center justify-center bg-indigo-100">
                      {turnIndex + 1}
                    </div>

                    <div className="flex-grow grid grid-cols-1 sm:grid-cols-2 gap-1">
                      {whiteMove && (
                        <div className={`flex items-center gap-2 px-3 py-2 rounded-md ${whiteMove.portal || whiteMove.via
                          ? 'bg-gradient-to-bl from-green-200 to-green-100 border border-green-200'
                          : 'bg-gradient-to-bl from-blue-200 to-blue-100 border border-blue-200'
                          } shadow-sm transition-all hover:shadow-md`}>
                          <div className={`h-3 w-3 rounded-full ${whiteMove.portal || whiteMove.via ? 'bg-green-500' : 'bg-blue-500'} flex-shrink-0`}></div>
                          <div className={`${whiteMove.portal || whiteMove.via ? 'text-green-800' : 'text-blue-800'} text-sm font-medium`}>
                            {getMoveDisplay(whiteMove)}
                           
                          </div>
                        </div>
                      )}

                      {blackMove && (
                        <div className={`flex items-center gap-2 px-3 py-2 rounded-md ${blackMove.portal || blackMove.via
                          ? 'bg-gradient-to-bl from-green-200 to-green-100 border border-green-200'
                          : 'bg-gradient-to-bl from-purple-200 to-purple-100 border border-purple-200'
                          } shadow-sm transition-all hover:shadow-md`}>
                          <div className={`h-3 w-3 rounded-full ${blackMove.portal || blackMove.via ? 'bg-green-500' : 'bg-purple-500'} flex-shrink-0`}></div>
                          <div className={`${blackMove.portal || blackMove.via ? 'text-green-800' : 'text-purple-800'} text-sm font-medium`}>
                            {getMoveDisplay(blackMove)}
                         
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

GameHistory.propTypes = {
  moveHistory: PropTypes.arrayOf(PropTypes.shape({
    piece: PropTypes.string,
    from: PropTypes.string,
    to: PropTypes.string,
    captured: PropTypes.string,
    portal: PropTypes.bool,
    via: PropTypes.string,
    san: PropTypes.string
  })),
  portalMode: PropTypes.bool.isRequired,
  setPortalMode: PropTypes.func.isRequired,
  isMyTurn: PropTypes.func.isRequired,
  exit: PropTypes.func.isRequired,
  portalCount: PropTypes.number.isRequired
};

export default GameHistory;

================================================================================

Filename: src/components/game/components/LostPiecesDisplay.css
Content:
.lost-pieces-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem; /* Maintaining the original gap-1 */
  padding: 0.5rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  min-height: 2rem;
  align-items: center;
}

.lost-pieces-empty {
  justify-content: center;
  color: #666;
  font-size: 0.875rem;
}

.lost-piece-item {
  display: flex;
  align-items: center;
  margin-right: 0.5rem; /* Maintaining the original mr-2 */
  padding: 2px 4px;
  border-radius: 3px;
  background-color: rgba(0, 0, 0, 0.03);
}

/* Remove old piece-symbol style if only using icons */
/*
.piece-symbol {
  font-size: 1.125rem;
  line-height: 1;
}
*/

/* New style for SVG icons */
.piece-icon {
  width: 1.125rem;  /* Adjust size as needed, matches old text-lg */
  height: 1.125rem; /* Adjust size as needed */
  vertical-align: middle; /* Align icon nicely with count */
}

.piece-count {
  font-size: 0.75rem; /* text-xs equivalent */
  font-weight: 500;
  margin-left: 0.25rem;
  color: #666;
  line-height: 1.125rem; /* Match icon height for alignment */
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .lost-pieces-container {
    border-color: rgba(255, 255, 255, 0.1);
  }

  .lost-pieces-empty {
    color: #999;
  }

  .lost-piece-item {
    background-color: rgba(255, 255, 255, 0.03);
  }

  
  .piece-count {
    color: #999;
  }
}

================================================================================

Filename: src/components/game/components/LostPiecesDisplay.jsx
Content:
import React, { useEffect } from 'react';
import PropTypes from 'prop-types';
import './LostPiecesDisplay.css';

/**
 * Component to display lost chess pieces using SVG icons from the public folder
 */
const LostPiecesDisplay = ({ lostPieces, color }) => {
  // Add debug logging

  // Determine the color of the pieces to display (opponent's lost pieces)
  const displayColor = color === 'black' ? 'white' : 'black';
  const displayColorPrefix = displayColor === 'white' ? 'w' : 'b';

  if (!lostPieces || !lostPieces[displayColor] || lostPieces[displayColor].length === 0) {
    return <div className="lost-pieces-container lost-pieces-empty">No pieces lost</div>;
  }

  // Count pieces of each type
  const pieceCounts = {};
  lostPieces[displayColor].forEach(pieceType => {
    pieceCounts[pieceType] = (pieceCounts[pieceType] || 0) + 1;
  });
  
  // Rest of component code...

  // Sort pieces for consistent display (e.g., by value)
  const sortedPieceTypes = Object.keys(pieceCounts).sort((a, b) => {
    const pieceValues = { p: 1, n: 3, b: 3, r: 5, q: 9, k: 0 };
    return (pieceValues[b] || 0) - (pieceValues[a] || 0);
  });

  return (
    <div className="lost-pieces-container">
      {sortedPieceTypes.map((pieceType) => {
        const count = pieceCounts[pieceType];
        // Construct the absolute path to the SVG in the public directory
        const svgPath = `/assets/pieces/${displayColorPrefix}_${pieceType}.svg`;

        return (
          <div key={pieceType} className="lost-piece-item">
            {/* Use the constructed path directly in the src attribute */}
            <img src={svgPath} alt={`${displayColor} ${pieceType}`} className="piece-icon" />
            {count > 1 && <span className="piece-count">×{count}</span>}
          </div>
        );
      })}
    </div>
  );
};

LostPiecesDisplay.propTypes = {
  lostPieces: PropTypes.shape({
    white: PropTypes.array.isRequired,
    black: PropTypes.array.isRequired
  }).isRequired,
  color: PropTypes.oneOf(['white', 'black']).isRequired
};

export default LostPiecesDisplay;

================================================================================

Filename: src/components/game/components/PlayerInfo.jsx
Content:
import React from 'react';
import PropTypes from 'prop-types';
import LostPiecesDisplay from './LostPiecesDisplay';

const formatTime = (seconds) => {
  if (seconds === null) return '--:--';
  const minutes = Math.floor(seconds / 60);
  const remainingSeconds = seconds % 60;
  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
};

const PlayerInfo = ({ isTopPlayer, playerNumber, playerName, isMyTurn, lostPieces, playerColor, timeRemaining }) => {
  return (
    <div className="bg-indigo-100 p-1 rounded-lg flex flex-col border border-indigo-200">
      <div className="flex items-center justify-between">
        <div className="flex items-center flex-grow min-w-0 mr-2"> {/* Added flex-grow, min-w-0, mr-2 */}
          <div className={`w-8 h-8 bg-gradient-to-br from-gray-300 to-gray-400 rounded-full mr-2 shadow-inner
                          flex items-center justify-center text-white font-bold text-xs
                          ${isMyTurn ? 'ring-2 ring-yellow-400' : ''}`}>
            {isTopPlayer ? "p2" : "p1"}
          </div>
          <div className="font-semibold text-gray-800 text-sm truncate mr-2"> {/* Added truncate, mr-2 */}
            {playerName}
          </div>
          {/* Moved LostPiecesDisplay here */}
          <div className="flex-shrink-0"> {/* Added flex-shrink-0 */}
            <LostPiecesDisplay
              lostPieces={typeof lostPieces === 'object' ? lostPieces : { white: [], black: [] }}
              color={playerColor}
            />
          </div>
          {/* Removed the 0/0/0 display div */}
        </div>
        <div className="flex items-center bg-indigo-100 px-4 py-1 rounded-full flex-shrink-0"> {/* Added flex-shrink-0 */}
          <div className="timer-display text-xl font-bold">
            {formatTime(timeRemaining)}
          </div>
        </div>
      </div>
      {/* Removed the second row that previously contained LostPiecesDisplay */}
    </div>
  );
};

PlayerInfo.propTypes = {
  isTopPlayer: PropTypes.bool.isRequired,
  playerNumber: PropTypes.number.isRequired,
  playerName: PropTypes.string.isRequired,
  isMyTurn: PropTypes.bool.isRequired,
  lostPieces: PropTypes.oneOfType([
    PropTypes.array,
    PropTypes.shape({
      white: PropTypes.array,
      black: PropTypes.array
    })
  ]),
  playerColor: PropTypes.string.isRequired,
  timeRemaining: PropTypes.number // Assuming timeRemaining is a number of seconds
};

export default PlayerInfo;

================================================================================

Filename: src/components/game/hooks/useArchiving.js
Content:
import { useState, useCallback, useEffect } from 'react';
import { ref, update, runTransaction, get, onValue } from 'firebase/database';
import { v4 as uuidv4 } from 'uuid';
import { database } from '../../../firebase/config';
import { BACKEND_URL } from '../../../config';

export const useArchiving = (gameId) => {
    // Local state to track if *this client* is actively archiving
    const [isArchivingLocally, setIsArchivingLocally] = useState(false);
    // Local state reflecting the game's archived status (driven by Firebase)
    const [isGameArchived, setIsGameArchived] = useState(false);

    // Central function to initiate the archive process
    const initiateArchiving = useCallback(async (gameDataForArchive, gameDetails) => {
        if (!gameId || !gameDataForArchive || !gameDetails) {
            return;
        }

        // Avoid starting if already archiving locally or game is known to be archived
        if (isArchivingLocally || isGameArchived) {
            return;
        }

        // Double-check player data before proceeding
        if (!gameDataForArchive.white_player || !gameDataForArchive.black_player) {
            return;
        }

        const gameRef = ref(database, `games/${gameId}`);
        const gameStatusRef = ref(database, `games/${gameId}/status`);

        setIsArchivingLocally(true); // Indicate local attempt

        try {
            const transactionResult = await runTransaction(gameStatusRef, (currentStatus) => {
                if (currentStatus === 'finished') {
                    return 'archiving'; // Attempt to claim archiving lock
                }
                // If status is already 'archiving' or 'archived', abort transaction
                return undefined; // Abort
            });

            if (transactionResult.committed) {
                const uniqueArchiveId = uuidv4();

                try {
                    // Fetch latest moves (needed for history API)
                    const movesRef = ref(database, `games/${gameId}/moves`);
                    const movesSnapshot = await get(movesRef);
                    const movesData = movesSnapshot.val() || {};
                    const formattedMoves = Object.values(movesData)
                        .sort((a, b) => a.timestamp - b.timestamp)
                        .map(move => typeof move === 'string' ? move : move.san || '');

                    const response = await fetch(`${BACKEND_URL}/history/games`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('access_token')}`
                        },
                        body: JSON.stringify({
                            game_id: uniqueArchiveId,
                            firebase_game_ref: gameId,
                            white_player_id: gameDataForArchive.white_player,
                            black_player_id: gameDataForArchive.black_player,
                            start_time: new Date(gameDataForArchive.created_at || gameDataForArchive.lastMoveTime || Date.now()).toISOString(), // Use best available start time
                            end_time: new Date().toISOString(),
                            result: gameDetails.winner === 'white' ? 'white_win' :
                                gameDetails.winner === 'black' ? 'black_win' :
                                    gameDetails.winner === 'draw' ? 'draw' :
                                        gameDetails.reason === 'abandoned' ? 'abandoned' : 'unknown', // Handle abandon explicitly
                            winner_id: gameDetails.winner === 'white' ? gameDataForArchive.white_player :
                                gameDetails.winner === 'black' ? gameDataForArchive.black_player : null,
                            moves: formattedMoves,
                            initial_position: 'standard',
                            white_rating: gameDataForArchive.white_rating || 1200,
                            black_rating: gameDataForArchive.black_rating || 1200,
                            // TODO: Actual rating calculation needed if implementing ratings
                            rating_change: {
                                white: gameDetails.winner === 'white' ? 15 : (gameDetails.winner === 'black' ? -15 : 0),
                                black: gameDetails.winner === 'black' ? 15 : (gameDetails.winner === 'white' ? -15 : 0)
                            },
                            game_type: `${gameDataForArchive.portal_count}`, // Ensure string
                            time_control: {
                                initial: (gameDataForArchive.time_control?.initial || (gameDataForArchive.time_control || 10) * 60), // Handle both formats
                                increment: (gameDataForArchive.time_control?.increment || gameDataForArchive.increment || 0)
                            }
                        })
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(`Failed to archive game via API: ${response.status} ${response.statusText}`);
                    }

                    await update(gameRef, {
                        status: 'archived',
                        archived_at: Date.now(),
                        archive_id: uniqueArchiveId
                    });
                    setIsGameArchived(true);

                } catch (apiError) {
                } finally {
                    setIsArchivingLocally(false);
                }

            } else {
                // Transaction failed - likely already archiving or archived by another client
                const snapshot = await get(gameRef);
                const currentData = snapshot.val();
                if (currentData?.status === 'archived' || currentData?.archive_id) {
                    setIsGameArchived(true); // Sync local state
                }
                setIsArchivingLocally(false);
            }
        } catch (error) {
            setIsArchivingLocally(false); // Release local lock on error
        }

    }, [gameId, isArchivingLocally, isGameArchived]);

    // Effect to listen for external changes to archived status (e.g., another client archived)
    useEffect(() => {
        if (!gameId) return;
        const statusRef = ref(database, `games/${gameId}/status`);
        const archiveIdRef = ref(database, `games/${gameId}/archive_id`);

        // Listener for status changes
        const unsubStatus = onValue(statusRef, (snapshot) => {
            const status = snapshot.val();
            if (status === 'archived') {
                setIsGameArchived(true);
                setIsArchivingLocally(false); // Stop local attempts if archived elsewhere
            } else {
                // If status is not 'archived' (e.g., active, finished, waiting, archiving)
                // Ensure local archived state is false
                setIsGameArchived(false);
            }
        });

        // Listener for archive_id changes (redundant but safe)
        const unsubArchiveId = onValue(archiveIdRef, (snapshot) => {
            if (snapshot.exists()) {
                setIsGameArchived(true);
                setIsArchivingLocally(false);
            } else {
                // If archive_id is removed (e.g., during rematch)
                // Ensure local archived state is false
                setIsGameArchived(false);
            }
        });

        return () => {
            unsubStatus();
            unsubArchiveId();
        };
    }, [gameId]);


    return { initiateArchiving, isArchivingLocally, isGameArchived };
};

================================================================================

Filename: src/components/game/hooks/useChat.js
Content:
import { useState, useEffect } from 'react';
import { ref, push, onValue, serverTimestamp } from 'firebase/database';
import { database } from '../../../firebase/config';

export const useChat = (gameId, user) => {
  const [chatMessages, setChatMessages] = useState([]);
  const [newMessage, setNewMessage] = useState('');

  useEffect(() => {
    if (!gameId) return;

    const chatRef = ref(database, `games/${gameId}/chat`);
    const unsubscribe = onValue(chatRef, (snapshot) => {
      const data = snapshot.val();
      if (data) {
        const messagesArray = Object.entries(data).map(([id, message]) => ({
          id,
          ...message,
        })).sort((a, b) => a.timestamp - b.timestamp);
        
        setChatMessages(messagesArray);
      }
    });

    return () => unsubscribe();
  }, [gameId]);

  const sendMessage = (e) => {
    e.preventDefault();
    if (!newMessage.trim() || !user || !gameId) return;

    const chatRef = ref(database, `games/${gameId}/chat`);
    push(chatRef, {
      text: newMessage.trim(),
      sender: user.uid,
      senderName: user.displayName || user.email,
      timestamp: serverTimestamp(),
    });

    setNewMessage('');
  };

  return {
    chatMessages,
    newMessage,
    setNewMessage,
    sendMessage
  };
}; 

================================================================================

Filename: src/components/game/hooks/useGameActions.js
Content:
import { useState, useCallback, useEffect } from 'react';
import { ref, update, runTransaction, push, serverTimestamp } from 'firebase/database';
import { database } from '../../../firebase/config';
import { PortalChess } from '../CustomChessEngine';

export const useGameActions = (
    game,
    setGame,
    gameState,
    user,
    gameId,
    moveHistory,
    getServerTime,
    updateLostPieces,
    initiateArchiving,
    isGameArchived,
    isArchivingLocally,
    isMyTurn,
    areBothPlayersJoined,
    whiteTime,
    blackTime,
    setGameEndDetails,
    setShowGameEndPopup
) => {
    const [selectedSquare, setSelectedSquare] = useState(null);
    const [portalMode, setPortalMode] = useState(false);
    const [portalStart, setPortalStart] = useState(null);

    useEffect(() => {
        if (!portalMode) {
            setPortalStart(null);
        }
    }, [portalMode]);

    const makeMove = useCallback((sourceSquare, targetSquare) => {
        if (!areBothPlayersJoined || !areBothPlayersJoined()) return false;
        if (!isMyTurn || !isMyTurn()) return false;
        if (gameState?.status === 'archived' || gameState?.status === 'archiving' || isGameArchived) {
            return false;
        }
        if (isArchivingLocally) {

            return false;
        }

        if (gameState?.current_turn === 'white' && whiteTime <= 0) return false;
        if (gameState?.current_turn === 'black' && blackTime <= 0) return false;

        try {
            const currentFen = game.fen();
            const newGame = new PortalChess(currentFen, gameState?.portal_count);
            newGame.portals = { ...game.portals };

            // Get all valid moves for the source square
            const validMoves = newGame.moves({ square: sourceSquare, verbose: true });

            // Find a valid move that matches our target square
            const validMove = validMoves.find(move => move.to === targetSquare);

            if (!validMove) {
                console.log('Invalid move:', sourceSquare, 'to', targetSquare);
                return false;
            }

            // Now execute the move with appropriate parameters
            let moveResult;
            if (validMove.portal) {
                moveResult = newGame.move({
                    from: sourceSquare,
                    to: targetSquare,
                    via: validMove.via,
                    portal: true
                });
            } else if (validMove.simulPortalMove) {
                // Handle simultaneous portal moves
                moveResult = newGame.move({
                    from: sourceSquare,
                    to: targetSquare,
                    simulPortalMove: true,
                    simulFrom: validMove.simulFrom,
                    originalFrom: sourceSquare
                });
            } else {
                moveResult = newGame.move({ from: sourceSquare, to: targetSquare, promotion: 'q' });
            }

            if (moveResult) {
                const cleanMove = {
                    captured: moveResult.captured || null,
                    promotion: moveResult.promotion || null,
                    from: moveResult.from,
                    to: moveResult.to,
                    piece: moveResult.piece,
                    color: moveResult.color,
                    flags: moveResult.flags || '',
                    san: moveResult.san || '',
                    via: moveResult.via || null,
                    portal: moveResult.portal || false
                };
                const updatedHistory = [...(moveHistory || []), cleanMove];
                const newTurn = gameState.current_turn === 'white' ? 'black' : 'white';
                const currentTime = getServerTime();
                const lastMoveTime = gameState.lastMoveTime || currentTime;
                const elapsedSeconds = Math.floor((currentTime - lastMoveTime) / 1000);
                const currentWhiteTime = typeof gameState.whiteTime === 'number' ? gameState.whiteTime : 600;
                const currentBlackTime = typeof gameState.blackTime === 'number' ? gameState.blackTime : 600;
                const updatedWhiteTime = gameState.current_turn === 'white' ? Math.max(0, currentWhiteTime - elapsedSeconds) : currentWhiteTime;
                const updatedBlackTime = gameState.current_turn === 'black' ? Math.max(0, currentBlackTime - elapsedSeconds) : currentBlackTime;

                const updatesForFirebase = {
                    fen: newGame.fen(),
                    portals: newGame.portals,
                    current_turn: newTurn,
                    lastMoveTime: currentTime,
                    lastMove: cleanMove,
                    whiteTime: updatedWhiteTime,
                    blackTime: updatedBlackTime
                };

                const movesRef = ref(database, `games/${gameId}/moves`);
                const moveDataWithTimestamp = {
                    ...cleanMove,
                    timestamp: serverTimestamp()
                };

                setGame(newGame);
                updateLostPieces(newGame);

                const gameStatus = newGame.isGameOver();
                if (gameStatus.over) {
                    const gameDetails = {
                        winner: gameStatus.winner,
                        reason: gameStatus.reason
                    };
                    const gameRef = ref(database, `games/${gameId}`);
                    const currentDataForArchive = {
                        ...gameState,
                        ...updatesForFirebase,
                        moveHistory: updatedHistory
                    };

                    runTransaction(gameRef, (currentData) => {
                        if (!currentData || currentData.status !== 'active') return undefined;
                        return {
                            ...currentData,
                            ...updatesForFirebase,
                            status: 'finished',
                            winner: gameStatus.winner,
                            reason: gameStatus.reason
                        };
                    }).then(async (transactionResult) => {
                        if (transactionResult.committed) {

                            setGameEndDetails(gameDetails);
                            setShowGameEndPopup(true);
                            push(movesRef, moveDataWithTimestamp).then(() => {
                                initiateArchiving(currentDataForArchive, gameDetails);
                            }).catch(error => {

                                initiateArchiving(currentDataForArchive, gameDetails);
                            });
                        }
                    }).catch(error => {
                    });

                } else {
                    Promise.all([
                        update(ref(database, `games/${gameId}`), updatesForFirebase),
                        push(movesRef, moveDataWithTimestamp)
                    ]).catch(error => {

                    });
                }
                return true;
            }
            return false;
        } catch (error) {
            return false;
        }
    }, [
        game, setGame, gameState, gameId, moveHistory, getServerTime,
        updateLostPieces, initiateArchiving, isGameArchived, isArchivingLocally,
        isMyTurn, areBothPlayersJoined, whiteTime, blackTime,
        setGameEndDetails, setShowGameEndPopup
    ]);

    const handleSquareClick = useCallback((square) => {
        if (gameState?.status === 'archived' || gameState?.status === 'archiving' || isGameArchived || isArchivingLocally) {
            return;
        }

        if (!portalMode) {
            if (!selectedSquare) {
                const piece = game.get(square);
                if (piece && piece.color === game.turn() && isMyTurn && isMyTurn()) {
                    setSelectedSquare(square);
                }
            } else {
                makeMove(selectedSquare, square);
                setSelectedSquare(null);
            }
        } else {
            if (!isMyTurn || !isMyTurn()) {

                return;
            }
            if (!portalStart) {
                if (game.get(square)) {
                    alert("Cannot place portal start on an occupied square!");
                    return;
                }
                if (game.portals[square]) {
                    alert("Cannot place portal start on an existing portal!");
                    return;
                }
                setPortalStart(square);
            } else {
                if (game.get(square)) {
                    alert("Cannot place portal end on an occupied square!");
                    return;
                }
                if (game.portals[square]) {
                    alert("Cannot place portal end on an existing portal!");
                    return;
                }
                if (portalStart === square) {
                    alert("Portal start and end cannot be the same square!");
                    return;
                }

                try {
                    const tempGame = new PortalChess(game.fen(), gameState?.portal_count);
                    tempGame.portals = { ...game.portals };
                    tempGame.placePair(portalStart, square);

                    const newGame = tempGame;
                    setGame(newGame);

                    const portalMove = {
                        type: 'portal',
                        from: portalStart,
                        to: square,
                        piece: gameState?.current_turn === 'white' ? 'P' : 'p',
                        color: gameState?.current_turn,
                        san: `Portal ${portalStart}↔${square}`,
                        portal: true
                    };
                    const newTurn = gameState?.current_turn === 'white' ? 'black' : 'white';
                    const currentTime = getServerTime();
                    const lastMoveTime = gameState?.lastMoveTime || currentTime;
                    const elapsedSeconds = Math.floor((currentTime - lastMoveTime) / 1000);
                    const currentWhiteTime = typeof gameState?.whiteTime === 'number' ? gameState.whiteTime : 600;
                    const currentBlackTime = typeof gameState?.blackTime === 'number' ? gameState.blackTime : 600;
                    const updatedWhiteTime = gameState?.current_turn === 'white' ? Math.max(0, currentWhiteTime - elapsedSeconds) : currentWhiteTime;
                    const updatedBlackTime = gameState?.current_turn === 'black' ? Math.max(0, currentBlackTime - elapsedSeconds) : currentBlackTime;

                    update(ref(database, `games/${gameId}`), {
                        portals: newGame.portals,
                        current_turn: newTurn,
                        lastMoveTime: currentTime,
                        lastMove: portalMove,
                        whiteTime: updatedWhiteTime,
                        blackTime: updatedBlackTime
                    });

                    const movesRef = ref(database, `games/${gameId}/moves`);
                    const portalMoveWithTimestamp = {
                        ...portalMove,
                        timestamp: serverTimestamp()
                    };
                    push(movesRef, portalMoveWithTimestamp);

                    setPortalStart(null);
                    setPortalMode(false);
                } catch (error) {
                    alert(`Portal placement failed: ${error.message || `Maximum number of portals (${gameState?.portal_count}) reached!`}`);
                    setPortalStart(null);
                    setPortalMode(false);
                }
            }
        }
    }, [
        game, setGame, gameState, gameId, portalMode, portalStart, selectedSquare,
        makeMove, isGameArchived, isArchivingLocally,
        isMyTurn, getServerTime, setPortalMode, setPortalStart, setSelectedSquare
    ]);

    return {
        makeMove,
        handleSquareClick,
        portalMode,
        setPortalMode,
        portalStart,
        selectedSquare,
        setSelectedSquare
    };
};

================================================================================

Filename: src/components/game/hooks/useGameId.js
Content:
import { useState, useEffect } from 'react';

export const useGameId = () => {
    const [gameId, setGameId] = useState(null);
    const [activeGame, setActiveGame] = useState(null);

    useEffect(() => {
        if (typeof window !== 'undefined') {
            try {
                const urlObj = new URL(window.location.href);
                const id = urlObj.searchParams.get('gameId');
                setGameId(id);
                setActiveGame(id);
            } catch (error) {
                console.error("Invalid URL:", error);
                setGameId(null);
                setActiveGame(null);
            }
        } else {
            setGameId(null);
            setActiveGame(null);
        }
    }, []);

    return { gameId, setGameId, activeGame, setActiveGame };
}; 

================================================================================

Filename: src/components/game/hooks/useGameLifecycle.js
Content:
import { useCallback } from 'react';
import { get, ref, remove, runTransaction } from 'firebase/database';
import { database } from '../../../firebase/config';
import { useNavigate } from 'react-router-dom';

export const useGameLifecycle = (
    gameId,
    user,
    activeGame,
    setActiveGame,
    initiateArchiving,
    setGameEndDetails,
    setShowGameEndPopup,
    isGameArchived,
    isArchivingLocally
) => {
    const navigate = useNavigate();
    const exitGame = useCallback(async () => {
        if (!activeGame) {
            setActiveGame(null);
            navigate('/profile');
            return;
        }

        if (isGameArchived || isArchivingLocally) {
            setActiveGame(null);
            navigate('/profile');
            return;
        }

        try {
            const gameRef = ref(database, `games/${activeGame}`);
            const gameSnapshot = await get(gameRef);
            const gameData = gameSnapshot.val();

            if (!gameData) {
                setActiveGame(null);
                return;
            }

            if (gameData.status === 'archived' || gameData.status === 'archiving') {
                setActiveGame(null);
                return;
            }

            if (gameData.status === 'active') {
                const isWhiteLeaving = gameData.white_player === user.uid;
                const gameDetails = {
                    winner: isWhiteLeaving ? 'black' : 'white',
                    reason: 'abandoned'
                };
                const currentDataForArchive = {
                    ...gameData,
                    winner: gameDetails.winner,
                    reason: gameDetails.reason
                };

                const transactionResult = await runTransaction(gameRef, (currentData) => {
                    if (!currentData || currentData.status !== 'active') return undefined;
                    return {
                        ...currentData,
                        status: 'finished',
                        winner: gameDetails.winner,
                        reason: gameDetails.reason
                    };
                });

                if (transactionResult.committed) {
                    setGameEndDetails(gameDetails);
                    setShowGameEndPopup(true);
                    initiateArchiving(currentDataForArchive, gameDetails);
                    setActiveGame(null);
                } else {
                    setActiveGame(null);
                }
                return;
            }

            const transactionResult = await runTransaction(gameRef, (game) => {
                if (game === null || game.status === 'archived' || game.status === 'archiving') return undefined;

                if (game.white_player === user.uid) {
                    game.white_player = null;
                    game.white_player_name = null;
                    game.white_player_email = null;
                } else if (game.black_player === user.uid) {
                    game.black_player = null;
                    game.black_player_name = null;
                    game.black_player_email = null;
                }
                return game;
            });

            if (transactionResult.committed) {
                const updatedGameSnapshot = await get(gameRef);
                const updatedGameData = updatedGameSnapshot.val();
                if (updatedGameData && !updatedGameData.white_player && !updatedGameData.black_player && updatedGameData.status !== 'archived' && updatedGameData.status !== 'archiving') {
                    await remove(gameRef);
                }
            }
            setActiveGame(null);
            navigate('/profile');

        } catch (error) {
            setActiveGame(null);
            navigate('/profile');
        }

    }, [
        activeGame,
        user,
        initiateArchiving,
        setActiveGame,
        setGameEndDetails,
        setShowGameEndPopup,
        isGameArchived,
        isArchivingLocally
    ]);

    return {
        exitGame
    };
};

================================================================================

Filename: src/components/game/hooks/useGameState.js
Content:
import { useState, useEffect } from 'react';
import { ref, onValue } from 'firebase/database';
import { database } from '../../../firebase/config';
import { PortalChess } from '../CustomChessEngine';

export const useGameState = (
    gameId,
    setGameEndDetails,
    setShowGameEndPopup
) => {
    const [game, setGame] = useState(() => new PortalChess());
    const [gameState, setGameState] = useState(null);

    useEffect(() => {
        if (!gameId) return;

        const gameRef = ref(database, `games/${gameId}`);
        const unsubscribe = onValue(gameRef, (snapshot) => {
            const data = snapshot.val();
            if (data) {
                setGameState(data);
                try {
                    const newGame = new PortalChess(undefined, data.portal_count);
                    if (typeof data.fen === 'string') {
                        newGame.load(data.fen);
                    }
                    newGame.portals = data.portals || {};
                    newGame._turn = data.current_turn === 'white' ? 'w' : 'b';
                    setGame(newGame);

                    if (data.status === 'finished' && data.winner && data.reason) {
                        const gameDetails = {
                            winner: data.winner,
                            reason: data.reason
                        };
                        setGameEndDetails(prevDetails =>
                            JSON.stringify(prevDetails) !== JSON.stringify(gameDetails) ? gameDetails : prevDetails
                        );
                        setShowGameEndPopup(true);
                    } else if (data.status === 'active') {
                        setShowGameEndPopup(false);
                        setGameEndDetails(null);
                    } else if (data.status === 'waiting') {
                        const waitingDetails = { winner: null, reason: 'waiting' };
                        setGameEndDetails(waitingDetails);
                        setShowGameEndPopup(true);
                    } else if (data.status === 'archiving' || data.status === 'archived') {
                    }

                } catch (error) {
                    console.error('Error initializing/updating chess game from Firebase data:', error);
                }
            } else {
                setGameState(null);
                setGame(new PortalChess());
                setShowGameEndPopup(false);
                setGameEndDetails(null);
            }
        });

        return () => unsubscribe();
    }, [gameId, setGameEndDetails, setShowGameEndPopup]);

    return { game, setGame, gameState, setGameState };
};

================================================================================

Filename: src/components/game/hooks/useGameTimer.js
Content:
import { useState, useEffect, useRef } from 'react';
import { ref, runTransaction } from 'firebase/database';
import { database } from '../../../firebase/config';

export const useGameTimer = (
    gameId,
    gameState,
    getServerTime,
    areBothPlayersJoined,
    initiateArchiving,
    setGameEndDetails,
    setShowGameEndPopup,
    isGameArchived,
    isArchivingLocally
) => {
    // Keep state for UI rendering
    const [whiteTime, setWhiteTime] = useState(null);
    const [blackTime, setBlackTime] = useState(null);
    
    // Track real-time local values separate from render state
    const localWhiteTimeRef = useRef(null);
    const localBlackTimeRef = useRef(null);
    const lastTickRef = useRef(null);
    const timerIntervalRef = useRef(null);
    const initializedRef = useRef(false);
    
    // Track last move made time to detect new moves
    const lastMoveTimeRef = useRef(null);

    // Initialize or sync timer values when game state changes
    useEffect(() => {
        if (!gameState) return;
        
        // Only sync times when server values actually change OR on initial load
        const newMoveDetected = lastMoveTimeRef.current !== gameState.lastMoveTime;
        
        if (newMoveDetected || !initializedRef.current) {
            // Update our tracking reference
            lastMoveTimeRef.current = gameState.lastMoveTime;
            
            // Update actual timer values
            localWhiteTimeRef.current = gameState.whiteTime;
            localBlackTimeRef.current = gameState.blackTime;
            lastTickRef.current = getServerTime();
            
            // Update UI state
            setWhiteTime(Math.ceil(gameState.whiteTime));
            setBlackTime(Math.ceil(gameState.blackTime));
            
            initializedRef.current = true;
        }
    }, [gameState?.lastMoveTime, gameState?.whiteTime, gameState?.blackTime, getServerTime]);

    // Main timer effect
    useEffect(() => {
        if (!gameState || !gameId || !initializedRef.current) {
            return;
        }

        // Check if any moves have been made - don't start timer if it's the very beginning
        const firstMoveNotMade = !gameState.lastMoveTime || !gameState.lastMove;
        const isInitialWhiteTurn = gameState.current_turn === 'white' && firstMoveNotMade;
        
        if (isInitialWhiteTurn) {
            return;
        }

        if (gameState.status !== 'active' || isArchivingLocally || isGameArchived || 
            (areBothPlayersJoined && !areBothPlayersJoined())) {
            return;
        }

        // Clear any existing interval
        if (timerIntervalRef.current) {
            clearInterval(timerIntervalRef.current);
            timerIntervalRef.current = null;
        }
        
        // Get reference values rather than closure values for timer stability
        const currentTurn = gameState.current_turn;
        
        let tickCount = 0;
        let lastFrameTime = getServerTime();
        
        // Start a consistent interval for visual updates
        timerIntervalRef.current = setInterval(() => {
            tickCount++;
            
            // Get current time and calculate elapsed time since last tick
            const now = getServerTime();
            const elapsedSec = (now - lastFrameTime) / 1000;
            lastFrameTime = now;

            // Update the appropriate timer based on current turn
            if (currentTurn === 'white') {
                if (localWhiteTimeRef.current !== null) {
                    localWhiteTimeRef.current = Math.max(0, localWhiteTimeRef.current - elapsedSec);
                    
                    // Update UI state - use Math.ceil for smoother countdown experience
                    setWhiteTime(Math.ceil(localWhiteTimeRef.current));
                }
                
                // Server-side timeout check
                const serverElapsed = Math.floor((now - gameState.lastMoveTime) / 1000);
                const serverWhiteTime = Math.max(0, gameState.whiteTime - serverElapsed);
                
                if (serverWhiteTime <= 0 && gameState.whiteTime > 0) {
                    handleWhiteTimeout();
                }
            } else {
                if (localBlackTimeRef.current !== null) {
                    localBlackTimeRef.current = Math.max(0, localBlackTimeRef.current - elapsedSec);
                    
                    // Update UI state
                    setBlackTime(Math.ceil(localBlackTimeRef.current));
                }
                
                // Server-side timeout check
                const serverElapsed = Math.floor((now - gameState.lastMoveTime) / 1000);
                const serverBlackTime = Math.max(0, gameState.blackTime - serverElapsed);
                
                if (serverBlackTime <= 0 && gameState.blackTime > 0) {
                    handleBlackTimeout();
                }
            }
        }, 50); // Update every 50ms for smoother countdown

        // Timeout handlers
        function handleWhiteTimeout() {
            clearInterval(timerIntervalRef.current);
            timerIntervalRef.current = null;
            setWhiteTime(0); // Ensure UI shows 0
            
            const gameDetails = { winner: 'black', reason: 'timeout' };
            const gameRef = ref(database, `games/${gameId}`);
            const currentDataForArchive = { ...gameState, whiteTime: 0 };

            runTransaction(gameRef, (currentData) => {
                if (!currentData || currentData.status !== 'active') return undefined;
                return {
                    ...currentData,
                    status: 'finished',
                    winner: 'black',
                    reason: 'timeout',
                    whiteTime: 0
                };
            }).then((transactionResult) => {
                if (transactionResult.committed) {
                    setGameEndDetails(gameDetails);
                    setShowGameEndPopup(true);
                    initiateArchiving(currentDataForArchive, gameDetails);
                }
            }).catch(error => console.error("Error during timeout transaction:", error));
        }

        function handleBlackTimeout() {
            clearInterval(timerIntervalRef.current);
            timerIntervalRef.current = null;
            setBlackTime(0); // Ensure UI shows 0
            
            const gameDetails = { winner: 'white', reason: 'timeout' };
            const gameRef = ref(database, `games/${gameId}`);
            const currentDataForArchive = { ...gameState, blackTime: 0 };

            runTransaction(gameRef, (currentData) => {
                if (!currentData || currentData.status !== 'active') return undefined;
                return {
                    ...currentData,
                    status: 'finished',
                    winner: 'white',
                    reason: 'timeout',
                    blackTime: 0
                };
            }).then((transactionResult) => {
                if (transactionResult.committed) {
                    setGameEndDetails(gameDetails);
                    setShowGameEndPopup(true);
                    initiateArchiving(currentDataForArchive, gameDetails);
                }
            }).catch(error => console.error("Error during timeout transaction:", error));
        }

        return () => {
            if (timerIntervalRef.current) {
                clearInterval(timerIntervalRef.current);
                timerIntervalRef.current = null;
            }
        };
    }, [
        gameId,
        gameState?.status,
        gameState?.current_turn,
        gameState?.lastMoveTime,
        gameState?.lastMove,
        isGameArchived,
        isArchivingLocally,
        areBothPlayersJoined,
        initiateArchiving,
        setGameEndDetails, 
        setShowGameEndPopup
    ]); // Dependencies that affect whether timer should run

    return { whiteTime, blackTime };
};

================================================================================

Filename: src/components/game/hooks/useLostPieces.js
Content:
import { useState, useEffect, useCallback } from 'react';

export const useLostPieces = (game) => {
  // Initialize with empty arrays
  const [lostPieces, setLostPieces] = useState({
    white: [],
    black: []
  });

  // Define the calculation function
  const calculateLostPieces = useCallback((currentGame) => {
    if (!currentGame || typeof currentGame.board !== 'function') {
      console.error('[LostPieces] Invalid game object:', currentGame);
      return { white: [], black: [] };
    }

    // Define the starting pieces for a standard chess game
    const startingPieces = {
      white: { p: 8, n: 2, b: 2, r: 2, q: 1, k: 1 },
      black: { p: 8, n: 2, b: 2, r: 2, q: 1, k: 1 }
    };

    // Count current pieces on the board
    const currentPieces = {
      white: { p: 0, n: 0, b: 0, r: 0, q: 0, k: 0 },
      black: { p: 0, n: 0, b: 0, r: 0, q: 0, k: 0 }
    };

    try {
      // Get the current board state
      const board = currentGame.board();
      
      // Make sure the board is properly structured
      if (!Array.isArray(board) || board.length !== 8) {
        throw new Error('Invalid board structure');
      }
      
      // Count all pieces currently on the board
      let pieceCount = 0;
      
      for (let row = 0; row < 8; row++) {
        for (let col = 0; col < 8; col++) {
          const piece = board[row][col];
          if (piece) {
            pieceCount++;
            const color = piece.color === 'w' ? 'white' : 'black';
            const type = piece.type;
            currentPieces[color][type]++;
          }
        }
      }

      // Calculate lost pieces
      const lost = {
        white: [],
        black: []
      };

      // For each color, determine which pieces are lost
      ['white', 'black'].forEach(color => {
        for (const pieceType in startingPieces[color]) {
          const expectedCount = startingPieces[color][pieceType];
          const actualCount = currentPieces[color][pieceType];
          const lostCount = Math.max(0, expectedCount - actualCount);
          
          for (let i = 0; i < lostCount; i++) {
            lost[color].push(pieceType);
          }
        }
      });
      return lost;
    } catch (error) {
      console.error('[LostPieces] Error calculating lost pieces:', error);
      return { white: [], black: [] };
    }
  }, []);

  // Function to update lost pieces
  const updateLostPieces = useCallback((currentGame) => {
    if (!currentGame) return lostPieces;
    
    
    const newLostPieces = calculateLostPieces(currentGame);
    
    setLostPieces(prevLostPieces => {
      // Check if there's a real change
      const hasChanged = 
        JSON.stringify(prevLostPieces.white) !== JSON.stringify(newLostPieces.white) ||
        JSON.stringify(prevLostPieces.black) !== JSON.stringify(newLostPieces.black);
      
      
      if (hasChanged) {
        return newLostPieces;
      }
      return prevLostPieces;
    });
    
    return newLostPieces;
  }, [calculateLostPieces, lostPieces]);

  // Update when the game changes
  useEffect(() => {
    if (game && typeof game.board === 'function') {
      updateLostPieces(game);
    }
  }, [game, updateLostPieces]);

  // IMPORTANT: Update when a move is made
  // This will force a recalculation when the FEN changes
  useEffect(() => {
    if (game && typeof game.fen === 'function') {
      const fen = game.fen();
      updateLostPieces(game);
    }
  }, [game?.fen?.(), updateLostPieces]);

  return [lostPieces, updateLostPieces];
};

================================================================================

Filename: src/components/game/hooks/useMoveHistory.js
Content:
import {useEffect, useRef, useState} from 'react';
import {database} from '../../../firebase/config';
import {onValue, ref} from 'firebase/database';

const STARTING_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';

export const useMoveHistory = (gameId) => {
    const [moveHistory, setMoveHistory] = useState([]);
    const moveHistoryRef = useRef([]);
    const lastProcessedMoveKeyRef = useRef(null);
    const isResettingRef = useRef(false); // Flag to prevent race conditions during reset

    useEffect(() => {
        if (!gameId) {
            moveHistoryRef.current = [];
            lastProcessedMoveKeyRef.current = null;
            setMoveHistory([]);
            // console.log("useMoveHistory: No gameId provided, reset state.");
            return;
        }

        // Initial setup for a new gameId
        // console.log(`useMoveHistory: Setting up for gameId: ${gameId}`);
        moveHistoryRef.current = [];
        lastProcessedMoveKeyRef.current = null;
        setMoveHistory([]);
        isResettingRef.current = false; // Ensure reset flag is false initially

        const gameRef = ref(database, `games/${gameId}`);

        const listener = (snapshot) => {
            // If resetting is in progress, ignore this snapshot to avoid processing old data
            if (isResettingRef.current) {
                // console.log("useMoveHistory: Currently resetting, skipping snapshot.");
                return;
            }

            const data = snapshot.val();
            if (!data) {
                // console.log("useMoveHistory: Game data snapshot is null.");
                // Consider if a reset is needed here too, e.g., if game was deleted
                if (moveHistoryRef.current.length > 0) {
                    // console.log("useMoveHistory: Game data became null, resetting local history.");
                    moveHistoryRef.current = [];
                    lastProcessedMoveKeyRef.current = null;
                    setMoveHistory([]);
                }
                return;
            }

            const {lastMove, fen, lastMoveTime} = data;

            // --- Reset Condition Check ---
            // Use looser check for lastMove (null or undefined)
            const isStartingPos = fen === STARTING_FEN;
            const isLastMoveCleared = lastMove == null; // Checks for both null and undefined

            // Log the conditions being checked for reset
            // // console.log(`useMoveHistory: Reset check - isStartingPos: ${isStartingPos}, isLastMoveCleared:
            // ${isLastMoveCleared}, historyLength: ${moveHistoryRef.current.length}`);

            if (isStartingPos && isLastMoveCleared && moveHistoryRef.current.length > 0) {
                // console.log("useMoveHistory: *** RESET CONDITION MET *** Clearing history.");
                isResettingRef.current = true; // Set flag before async operations
                moveHistoryRef.current = [];
                lastProcessedMoveKeyRef.current = null;
                setMoveHistory([]); // Trigger UI update
                // Reset the flag after a short delay to allow state to settle
                setTimeout(() => {
                    isResettingRef.current = false;
                }, 50);
                return; // Exit callback after reset
            }

            // --- Append Condition Check ---
            if (lastMove) {
                const currentMoveKey = lastMoveTime || JSON.stringify(lastMove);

                if (currentMoveKey !== lastProcessedMoveKeyRef.current) {
                    // Ensure we don't append during or immediately after a reset
                    if (!isResettingRef.current) {
                        // console.log("useMoveHistory: Appending new move:", lastMove.san || 'Portal Move', `(Key: ${currentMoveKey})`);
                        moveHistoryRef.current = [...moveHistoryRef.current, lastMove];
                        lastProcessedMoveKeyRef.current = currentMoveKey;
                        setMoveHistory([...moveHistoryRef.current]);
                    } else {
                        // console.log("useMoveHistory: Skipping append due to recent reset flag.");
                    }
                }
            }
        };

        const unsubscribe = onValue(gameRef, listener, (error) => {
            console.error("useMoveHistory: Firebase listener error:", error);
            moveHistoryRef.current = [];
            lastProcessedMoveKeyRef.current = null;
            setMoveHistory([]);
            isResettingRef.current = false;
        });

        // Cleanup
        return () => {
            // console.log(`useMoveHistory: Cleaning up listener for gameId: ${gameId}`);
            unsubscribe();
        };

    }, [gameId]);

    return moveHistory;
};

================================================================================

Filename: src/components/game/hooks/useRematch.js
Content:
import { useState, useEffect, useCallback } from 'react';
import { ref, onValue, update, push, set } from 'firebase/database';
import { database } from '../../../firebase/config';

export const useRematch = (
    gameId,
    user,
    gameState,
    setShowGameEndPopup, // from useGameLifecycle
    setGameEndDetails, // from useGameLifecycle
    setWhiteTime, // from useGameTimer
    setBlackTime // from useGameTimer
) => {
    const [showRematchRequest, setShowRematchRequest] = useState(false);
    const [rematchRequestFrom, setRematchRequestFrom] = useState(null);

    // Function to handle the actual game state reset for rematch
    const handleRematch = useCallback(async () => {
        if (!gameId || !gameState) {
            console.error("Cannot start rematch: missing gameId or gameState");
            return;
        }
        try {
            // Calculate initial time based on game settings, fallback to default
            const initialTime = (gameState.time_control?.initial || 10 * 60);
            const currentTime = Date.now(); // Use local time for reset, server offset handled elsewhere

            const newGameState = {
                // Keep player info
                white_player: gameState.white_player,
                white_player_name: gameState.white_player_name,
                white_player_email: gameState.white_player_email,
                black_player: gameState.black_player,
                black_player_name: gameState.black_player_name,
                black_player_email: gameState.black_player_email,

                // Reset game state
                status: 'active', // Crucial: Set status back to active
                current_turn: 'white',
                whiteTime: initialTime,
                blackTime: initialTime,
                lastMoveTime: currentTime, // Reset last move time
                fen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1', // Standard starting FEN
                lastMove: null,
                portals: {},
                portal_count: gameState.portal_count, // Keep portal count setting
                // lostPieces are managed by useLostPieces based on game state
                winner: null,
                reason: null,
                // Clear any existing rematch notifications or archive info
                notifications: null,
                archive_id: null,
                archived_at: null
                // Moves history will be implicitly cleared by resetting other fields in Firebase
            };

            // Update the entire game node in Firebase
            await update(ref(database, `games/${gameId}`), newGameState);

            // Reset local UI states managed by other hooks
            setShowGameEndPopup(false);
            setGameEndDetails(null);
            setWhiteTime(initialTime);
            setBlackTime(initialTime);
            // GameArchived state should be handled by the lifecycle hook reacting to DB changes

            // console.log("Rematch: Successfully updated Firebase for rematch.");

        } catch (error) {
            // console.error('Error starting rematch:', error);
        }

    }, [gameId, gameState, setShowGameEndPopup, setGameEndDetails, setWhiteTime, setBlackTime]);

    // Listener for incoming rematch requests
    useEffect(() => {
        if (!gameId || !user) return;

        const notificationsRef = ref(database, `games/${gameId}/notifications`);
        const unsubscribe = onValue(notificationsRef, (snapshot) => {
            const notifications = snapshot.val();
            if (!notifications) return;

            Object.entries(notifications).forEach(([key, notification]) => {
                if (notification?.type === 'rematch_request' && notification.from !== user.uid) {
                    setRematchRequestFrom({
                        uid: notification.from,
                        name: notification.fromName || 'Opponent' // Fallback name
                    });
                    setShowRematchRequest(true);
                    // Remove the notification after processing to avoid re-triggering
                    update(ref(database, `games/${gameId}/notifications/${key}`), null);
                }
            });
        });

        return () => unsubscribe();
    }, [gameId, user]);

    // Function called when the user accepts an incoming rematch request
    const handleAcceptRematch = () => {
        setShowRematchRequest(false);
        setRematchRequestFrom(null);
        handleRematch(); // Trigger the game state reset
    };

    // Function to *send* a rematch request (could be called from GameEndPopup)
    const sendRematchRequest = useCallback(async () => {
        if (!gameId || !user || !gameState) return;

        const notification = {
            type: 'rematch_request',
            from: user.uid,
            fromName: user.displayName || user.email, // Use display name or email
            timestamp: Date.now()
        };
        const notificationRef = ref(database, `games/${gameId}/notifications`);
        const newNotificationRef = push(notificationRef); // Use push for unique key
        try {
            await set(newNotificationRef, notification);
            // console.log("Rematch request sent.");
            // Optionally close the popup or show a waiting message here
        } catch (error) {
            console.error("Error sending rematch request:", error);
        }
    }, [gameId, user, gameState]);


    return {
        showRematchRequest,
        setShowRematchRequest,
        rematchRequestFrom,
        handleAcceptRematch,
        handleRematch, // Expose the main rematch logic if needed elsewhere (e.g., initiator)
        sendRematchRequest // Expose function to send request
    };
}; 

================================================================================

Filename: src/components/game/hooks/useServerTime.js
Content:
import { useState, useEffect } from 'react';
import { ref, onValue } from 'firebase/database';
import { database } from '../../../firebase/config';

export const useServerTime = () => {
    const [serverTimeOffset, setServerTimeOffset] = useState(0);

    useEffect(() => {
        const offsetRef = ref(database, '.info/serverTimeOffset');
        const unsubscribe = onValue(offsetRef, (snapshot) => {
            const offset = snapshot.val() || 0;
            setServerTimeOffset(offset);
        });

        return () => unsubscribe();
    }, []);

    const getServerTime = () => Date.now() + serverTimeOffset;

    return { getServerTime };
}; 

================================================================================

Filename: src/components/game/hooks/useVoiceChat.js
Content:
import { useState, useRef, useEffect } from 'react';
import { ref, update, onValue } from 'firebase/database';
import { database } from '../../../firebase/config';
import Peer from 'peerjs';

export const useVoiceChat = (gameId, gameState, user) => {
  const [voiceChatEnabled, setVoiceChatEnabled] = useState(false);
  const [isMuted, setIsMuted] = useState(false);
  const [isConnecting, setIsConnecting] = useState(false);
  const [connectionStatus, setConnectionStatus] = useState('disconnected');

  const peerRef = useRef(null);
  const connectionRef = useRef(null);
  const localStreamRef = useRef(null);
  const remoteAudioRef = useRef(null);

  useEffect(() => {
    if (!gameId || !user || !voiceChatEnabled) return;

    const voiceChatRef = ref(database, `games/${gameId}/voiceChat`);
    const unsubscribe = onValue(voiceChatRef, (snapshot) => {
      const data = snapshot.val();
      if (!data) return;

      const amIWhitePlayer = gameState?.white_player === user.uid;
      const myRole = amIWhitePlayer ? 'white' : 'black';
      const opponentRole = amIWhitePlayer ? 'black' : 'white';

      if (data[myRole] && !data[opponentRole]) {
        setConnectionStatus('waiting');
        return;
      }

      if (data[myRole] && data[opponentRole] && connectionRef.current === null) {
        if (myRole === 'white') {
          connectToPeer(data[opponentRole]);
        }
      }
    });

    return () => unsubscribe();
  }, [gameId, user, voiceChatEnabled, gameState]);

  useEffect(() => {
    return () => {
      if (localStreamRef.current) {
        localStreamRef.current.getTracks().forEach(track => track.stop());
        localStreamRef.current = null;
      }
      
      if (connectionRef.current) {
        connectionRef.current.close();
        connectionRef.current = null;
      }
      
      if (peerRef.current) {
        peerRef.current.destroy();
        peerRef.current = null;
      }
    };
  }, []);

  const toggleVoiceChat = async () => {
    if (voiceChatEnabled) {
      if (localStreamRef.current) {
        localStreamRef.current.getTracks().forEach(track => track.stop());
        localStreamRef.current = null;
      }
      
      if (connectionRef.current) {
        connectionRef.current.close();
        connectionRef.current = null;
      }
      
      if (peerRef.current) {
        peerRef.current.destroy();
        peerRef.current = null;
      }
      
      const amIWhitePlayer = gameState?.white_player === user.uid;
      const myRole = amIWhitePlayer ? 'white' : 'black';
      
      const updates = {};
      updates[`games/${gameId}/voiceChat/${myRole}`] = null;
      update(ref(database), updates);
      
      setVoiceChatEnabled(false);
      setConnectionStatus('disconnected');
    } else {
      setIsConnecting(true);
      try {
        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
        localStreamRef.current = stream;
        
        const peer = new Peer();
        peerRef.current = peer;
        
        peer.on('open', (id) => {
          const amIWhitePlayer = gameState?.white_player === user.uid;
          const myRole = amIWhitePlayer ? 'white' : 'black';
          
          const updates = {};
          updates[`games/${gameId}/voiceChat/${myRole}`] = id;
          update(ref(database), updates);
          
          setVoiceChatEnabled(true);
          setConnectionStatus('waiting');
        });
        
        peer.on('call', (call) => {
          call.answer(localStreamRef.current);
          
          call.on('stream', (remoteStream) => {
            if (remoteAudioRef.current) {
              remoteAudioRef.current.srcObject = remoteStream;
              remoteAudioRef.current.play().catch(e => console.error('Error playing audio:', e));
            }
            setConnectionStatus('connected');
          });
          
          connectionRef.current = call;
        });
        
        peer.on('error', (err) => {
          console.error('Peer error:', err);
          setConnectionStatus('error');
          setIsConnecting(false);
        });
      } catch (error) {
        console.error('Error accessing microphone:', error);
        setConnectionStatus('error');
        setIsConnecting(false);
      }
    }
  };

  const toggleMute = () => {
    if (localStreamRef.current) {
      const audioTracks = localStreamRef.current.getAudioTracks();
      audioTracks.forEach(track => {
        track.enabled = !track.enabled;
      });
      setIsMuted(!isMuted);
    }
  };

  const connectToPeer = (peerId) => {
    if (!peerRef.current || !localStreamRef.current) return;
    
    setConnectionStatus('connecting');
    
    const call = peerRef.current.call(peerId, localStreamRef.current);
    
    call.on('stream', (remoteStream) => {
      if (remoteAudioRef.current) {
        remoteAudioRef.current.srcObject = remoteStream;
        remoteAudioRef.current.play().catch(e => console.error('Error playing audio:', e));
      }
      setConnectionStatus('connected');
    });
    
    call.on('error', (err) => {
      console.error('Call error:', err);
      setConnectionStatus('error');
    });
    
    connectionRef.current = call;
  };

  return {
    voiceChatEnabled,
    isMuted,
    isConnecting,
    connectionStatus,
    remoteAudioRef,
    toggleVoiceChat,
    toggleMute
  };
}; 

================================================================================

Filename: src/components/game/utils/pieceUtils.js
Content:
// utils/pieceUtils.js

// Unicode chess symbols for both white and black pieces
export const pieceSymbols = {
  // White pieces
  'w_p': '♙', // white pawn
  'w_n': '♘', // white knight
  'w_b': '♗', // white bishop
  'w_r': '♖', // white rook
  'w_q': '♕', // white queen
  'w_k': '♔', // white king
  
  // Black pieces
  'b_p': '♟', // black pawn
  'b_n': '♞', // black knight
  'b_b': '♝', // black bishop
  'b_r': '♜', // black rook
  'b_q': '♛', // black queen
  'b_k': '♚', // black king
  
  // Single character piece types (for use with piece type only)
  'p': '♟', // pawn (default black for backward compatibility)
  'n': '♞', // knight
  'b': '♝', // bishop
  'r': '♜', // rook
  'q': '♛', // queen
  'k': '♚'  // king
};

// Function to get the proper piece symbol based on piece type and color
export const getPieceSymbol = (pieceType, pieceColor = 'b') => {
  const key = pieceColor === 'w' ? `w_${pieceType}` : `b_${pieceType}`;
  return pieceSymbols[key] || pieceSymbols[pieceType] || '?';
};

// Function to categorize captured pieces by type and count
export const categorizePieces = (pieces) => {
  const categorized = [];
  
  if (!pieces || !Array.isArray(pieces)) return categorized;
  
  const countMap = {};
  
  // Count each piece type
  pieces.forEach(pieceType => {
    countMap[pieceType] = (countMap[pieceType] || 0) + 1;
  });
  
  // Convert to array of objects with type and count
  for (const [type, count] of Object.entries(countMap)) {
    categorized.push({
      type,
      count
    });
  }
  
  // Sort by value (optional)
  categorized.sort((a, b) => {
    const pieceValues = { p: 1, n: 3, b: 3, r: 5, q: 9, k: 0 };
    return pieceValues[b.type] - pieceValues[a.type];
  });
  
  return categorized;
};

================================================================================

Filename: src/components/profile/AvailableGameComponent.jsx
Content:
import React from 'react';
import PropTypes from 'prop-types';

function AvailableGamesComponent({ availableGames, joinGame, backToSetup }) {
  return (
    <div className="bg-indigo-100 rounded-xl h-full p-6 shadow-md border border-indigo-100">
      <h2 className="text-xl font-bold text-indigo-800 mb-6">Available Games</h2>

      {availableGames.length > 0 ? (
        <div className="bg-white p-4 rounded-lg shadow border border-indigo-100">
          <div className="space-y-2 max-h-64 overflow-y-auto">
            {availableGames.map((game) => (
              <div
                key={game.id}
                className="flex justify-between items-center p-3 border-b border-indigo-100 hover:bg-indigo-50 rounded transition-colors"
              >
                <div>
                  <span className="text-indigo-800 font-medium">
                    {game.white_player_email || game.black_player_email || 'Open Game'}
                  </span>
                  <div className="text-xs text-gray-500">
                    Time: {game.time_control} min | Portals: {game.portal_count}
                  </div>
                </div>
                <button
                  onClick={() => joinGame(game.id)}
                  className="px-3 py-1 bg-indigo-600 text-white text-sm rounded hover:bg-indigo-700 transition-colors"
                >
                  Join
                </button>
              </div>
            ))}
          </div>
        </div>
      ) : (
        <div className="text-center py-8">
          <p className="text-gray-600">No available games found.</p>
        </div>
      )}

      <div className="mt-6">
        <button
          onClick={backToSetup}
          className="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700"
        >
          Back to Game Setup
        </button>
      </div>
    </div>
  );
}

AvailableGamesComponent.propTypes = {
  availableGames: PropTypes.arrayOf(
    PropTypes.shape({
      id: PropTypes.number.isRequired,
      white_player_email: PropTypes.string,
      black_player_email: PropTypes.string,
      time_control: PropTypes.number,
      portal_count: PropTypes.number,
    })
  ).isRequired,
  joinGame: PropTypes.func.isRequired,
  backToSetup: PropTypes.func.isRequired,
};

export default AvailableGamesComponent;


================================================================================

Filename: src/components/profile/Friends.jsx
Content:
import React, { useState, useContext, useEffect, useRef } from 'react';
// Make sure this import matches your actual context path
import AuthContext from "../../contexts/AuthContext";
import { fetchProfileDetails } from "../../utils/profileUtils";
import { BACKEND_URL } from "../../config.js";

const Friends = () => {
  // Existing state and context
  const { user } = useContext(AuthContext);
  const [friends, setFriends] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [friendRequest, setFriendRequest] = useState('');
  const [pendingRequests, setPendingRequests] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showPendingRequests, setShowPendingRequests] = useState(false);
  const [isFriendsLoading, setIsFriendsLoading] = useState(false);
  const [friendsError, setFriendsError] = useState(null);
  const [requestProfiles, setRequestProfiles] = useState({});

  // New state for username search functionality
  const [searchResults, setSearchResults] = useState([]);
  const [isSearching, setIsSearching] = useState(false);
  const [showSearchResults, setShowSearchResults] = useState(false);
  const [searchError, setSearchError] = useState(null);
  const [sendingRequests, setSendingRequests] = useState({});

  // Ref for search input to track outside clicks
  const searchInputRef = useRef(null);
  const searchResultsRef = useRef(null);

  // Debounce timeout ref
  const searchTimeout = useRef(null);

  // Handle clicks outside search dropdown to close it
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        searchInputRef.current &&
        !searchInputRef.current.contains(event.target) &&
        searchResultsRef.current &&
        !searchResultsRef.current.contains(event.target)
      ) {
        setShowSearchResults(false);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  // Debounced search effect with friend filtering
  useEffect(() => {
    // Clear any existing timeout
    if (searchTimeout.current) {
      clearTimeout(searchTimeout.current);
    }

    // Don't search if input is empty
    if (!friendRequest.trim()) {
      setSearchResults([]);
      setShowSearchResults(false);
      return;
    }

    // Set a new timeout for the search
    searchTimeout.current = setTimeout(async () => {
      setIsSearching(true);
      setSearchError(null);

      try {
        const accessToken = localStorage.getItem('access_token');
        if (!accessToken) {
          throw new Error('No access token found');
        }

        const response = await fetch(`${BACKEND_URL}/profiles/search/${friendRequest}?limit=10`, {
          method: 'GET',
          headers: {
            'accept': 'application/json',
            'Authorization': `Bearer ${accessToken}`
          }
        });

        if (!response.ok) {
          throw new Error('Failed to search profiles');
        }

        const data = await response.json();

        // Filter out users who are already friends
        const existingFriendIds = friends.map(friend => friend.id);
        const filteredResults = data.filter(profile => !existingFriendIds.includes(profile.uid));

        setSearchResults(filteredResults);
        setShowSearchResults(true);
      } catch (err) {
        console.error('Error searching profiles:', err);
        setSearchError('Failed to search users');
      } finally {
        setIsSearching(false);
      }
    }, 500); // 500ms debounce timeout

    // Cleanup function
    return () => {
      if (searchTimeout.current) {
        clearTimeout(searchTimeout.current);
      }
    };
  }, [friendRequest, friends]); // Added friends dependency

  // Send friend request function
  const sendFriendRequest = async (receiverId) => {
    // Prevent duplicate requests
    if (sendingRequests[receiverId]) return;

    try {
      setSendingRequests(prev => ({ ...prev, [receiverId]: true }));

      const accessToken = localStorage.getItem('access_token');
      if (!accessToken) {
        throw new Error('No access token found');
      }

      const response = await fetch(`${BACKEND_URL}/friends/requests`, {
        method: 'POST',
        headers: {
          'accept': 'application/json',
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${accessToken}`
        },
        body: JSON.stringify({
          receiver_id: receiverId,
          message: "added friend via username search"
        })
      });

      if (!response.ok) {
        throw new Error('Failed to send friend request');
      }

      // Success handling - show feedback to user
      alert(`Friend request sent successfully!`);

      // Clear search
      setFriendRequest('');
      setSearchResults([]);
      setShowSearchResults(false);
    } catch (err) {
      console.error('Error sending friend request:', err);
      alert('Failed to send friend request. Please try again.');
    } finally {
      setSendingRequests(prev => ({ ...prev, [receiverId]: false }));
    }
  };

  // Fetch friends list
  useEffect(() => {
    const fetchFriends = async () => {
      if (!user) return;

      setIsFriendsLoading(true);
      setFriendsError(null);

      try {
        const accessToken = localStorage.getItem('access_token');
        if (!accessToken) {
          throw new Error('No access token found');
        }

        // console.log("friend access token", accessToken);
        const response = await fetch(`${BACKEND_URL}/friends/list`, {
          method: 'GET',
          headers: {
            'accept': 'application/json',
            'Authorization': `Bearer ${accessToken}`
          }
        });

        if (!response.ok) {
          throw new Error('Failed to fetch friends list');
        }

        const friendships = await response.json();

        // Process each friendship entry
        const friendsData = [];
        for (const friendship of friendships) {
          // Skip entries where user is their own friend (self-friendship)
          if (friendship.user_id === friendship.friend_id) continue;

          // Fetch profile details for the friend
          const profileData = await fetchProfileDetails(friendship.friend_id);

          if (profileData) {
            friendsData.push({
              id: friendship.friend_id,
              name: profileData.display_name || profileData.username,
              status: 'online', // Default status, would be updated with real status if available
              Matches: profileData.games_played || 0,
              rating: profileData.rating || 1200,
              wins: profileData.wins || 0,
              losses: profileData.losses || 0,
              draws: profileData.draws || 0,
              friendship: {
                since: friendship.became_friends,
                gamesPlayed: friendship.games_played,
                lastGame: friendship.last_game,
                lastInteraction: friendship.last_interaction
              }
            });
          }
        }

        setFriends(friendsData);
      } catch (err) {
        console.error('Error fetching friends list:', err);
        setFriendsError('Failed to load friends');
      } finally {
        setIsFriendsLoading(false);
      }
    };

    if (user) {
      fetchFriends();
    }
  }, [user]);

  // Existing effect for fetching pending requests stays the same
  useEffect(() => {
    const fetchPendingRequests = async () => {
      setIsLoading(true);
      setError(null);
      try {
        const accessToken = localStorage.getItem('access_token');
        if (!accessToken) {
          throw new Error('No access token found');
        }

        const response = await fetch(`${BACKEND_URL}/friends/requests/pending`, {
          method: 'GET',
          headers: {
            'accept': 'application/json',
            'Authorization': `Bearer ${accessToken}`
          }
        });

        if (!response.ok) {
          throw new Error('Failed to fetch pending requests');
        }

        const data = await response.json();
        // Filter requests meant for the current user
        const userRequests = data.filter(req => req.receiver_id === user.uid);
        setPendingRequests(userRequests);

        // Fetch profile details for each sender
        const profiles = {};
        for (const request of userRequests) {
          if (request.status === "pending") {
            const profileData = await fetchProfileDetails(request.sender_id);
            if (profileData) {
              profiles[request.sender_id] = profileData;
            }
          }
        }
        setRequestProfiles(profiles);
      } catch (err) {
        console.error('Error fetching pending requests:', err);
        setError('Failed to load friend requests');
      } finally {
        setIsLoading(false);
      }
    };

    if (user) {
      fetchPendingRequests();
    }
  }, [user]);

  const filteredFriends = friends.filter(friend =>
    friend.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleAddFriend = () => {
    if (friendRequest.trim()) {
      alert(`Friend request sent to ${friendRequest}`);
      setFriendRequest('');
    }
  };

  // Updated to properly handle friend removal with API request
  const removeFriend = async (friendId) => {
    try {
      const accessToken = localStorage.getItem('access_token');
      if (!accessToken) {
        throw new Error('No access token found');
      }

      // Show confirmation dialog
      if (!window.confirm("Are you sure you want to remove this friend?")) {
        return;
      }

      // Make the DELETE request to remove the friend
      const response = await fetch(`${BACKEND_URL}/friends/${friendId}`, {
        method: 'DELETE',
        headers: {
          'accept': 'application/json',
          'Authorization': `Bearer ${accessToken}`
        }
      });

      if (!response.ok) {
        throw new Error('Failed to remove friend');
      }

      // Update the UI by removing the friend from the list
      setFriends(friends.filter(friend => friend.id !== friendId));
      alert('Friend removed successfully');
    } catch (err) {
      console.error('Error removing friend:', err);
      alert('Failed to remove friend. Please try again.');
    }
  };

  const inviteToGame = (friendName) => {
    alert(`Invited ${friendName} to a game`);
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'online': return 'bg-green-500';
      case 'playing': return 'bg-blue-500';
      default: return 'bg-gray-400';
    }
  };

  // Updated respond to request function to use profile data
  const respondToRequest = async (requestId, accept) => {
    try {
      const accessToken = localStorage.getItem('access_token');
      if (!accessToken) {
        throw new Error('No access token found');
      }

      const response = await fetch(`${BACKEND_URL}/friends/requests/${requestId}/respond`, {
        method: 'POST',
        headers: {
          'accept': 'application/json',
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${accessToken}`
        },
        body: JSON.stringify({
          request_id: requestId,
          accept: accept
        })
      });

      if (!response.ok) {
        throw new Error(`Failed to ${accept ? 'accept' : 'reject'} request`);
      }

      // If successful, remove the request from pending list
      setPendingRequests(pendingRequests.filter(req => req.request_id !== requestId));

      // If accepted, add to friends list with rich profile data
      if (accept) {
        const request = pendingRequests.find(req => req.request_id === requestId);
        if (request) {
          const profileData = requestProfiles[request.sender_id];
          setFriends([...friends, {
            id: request.sender_id,
            name: profileData ? profileData.display_name || profileData.username : 'Unknown User',
            status: 'online',
            Matches: profileData ? profileData.games_played : 0,
            rating: profileData ? profileData.rating : 1200,
            wins: profileData ? profileData.wins : 0,
            losses: profileData ? profileData.losses : 0,
            draws: profileData ? profileData.draws : 0
          }]);
        }
      }
    } catch (err) {
      console.error(`Error ${accept ? 'accepting' : 'rejecting'} request:`, err);
      alert(`Failed to ${accept ? 'accept' : 'reject'} friend request. Please try again.`);
    }
  };

  const acceptRequest = (requestId) => {
    respondToRequest(requestId, true);
  };

  const declineRequest = (requestId) => {
    respondToRequest(requestId, false);
  };

  // Only show requests with "pending" status
  const filteredPendingRequests = pendingRequests.filter(req => req.status === "pending");

  return (
    <div className="bg-indigo-100 h-full p-6 shadow-md">
      {/* Header */}
      <h2 className="text-2xl font-bold text-indigo-800 mb-6">Friends</h2>

      {/* Add Friend & Search - Updated with search dropdown */}
      <div className="space-y-4 mb-6">
        <div className="relative">
          <input
            ref={searchInputRef}
            type="text"
            placeholder="Search for users to add..."
            value={friendRequest}
            onChange={(e) => setFriendRequest(e.target.value)}
            onFocus={() => {
              if (searchResults.length > 0) {
                setShowSearchResults(true);
              }
            }}
            className="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-gray-50 text-gray-800"
          />

          {/* Loading indicator */}
          {isSearching && (
            <div className="absolute right-3 top-2">
              <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-indigo-500"></div>
            </div>
          )}

          {/* Search Results Dropdown */}
          {showSearchResults && (
            <div
              ref={searchResultsRef}
              className="absolute z-10 mt-1 w-full bg-white shadow-lg rounded-lg border border-gray-200 max-h-80 overflow-y-auto"
            >
              {searchError ? (
                <div className="p-3 text-center text-red-500">
                  {searchError}
                </div>
              ) : searchResults.length > 0 ? (
                searchResults.map(profile => (
                  <div
                    key={profile.uid}
                    className="flex items-center justify-between p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0"
                  >
                    <div className="flex-grow">
                      <div className="font-medium text-gray-900">
                        {profile.display_name || profile.username}
                      </div>
                      <div className="text-xs text-gray-600">
                        Rating: {profile.rating}
                      </div>
                      <div className="text-xs text-gray-500">
                        Games: {profile.games_played} (W: {profile.wins} L: {profile.losses} D: {profile.draws})
                      </div>
                    </div>
                    <button
                      onClick={() => sendFriendRequest(profile.uid)}
                      disabled={sendingRequests[profile.uid]}
                      className={`px-3 py-1 text-xs font-medium rounded-md transition-colors 
                        ${sendingRequests[profile.uid]
                          ? 'bg-gray-400 text-white'
                          : 'bg-indigo-600 text-white hover:bg-indigo-700'}`}
                    >
                      {sendingRequests[profile.uid] ? 'Sending...' : 'Add'}
                    </button>
                  </div>
                ))
              ) : friendRequest.trim() !== '' ? (
                <div className="p-3 text-center text-gray-500">
                  No users found
                </div>
              ) : null}
            </div>
          )}
        </div>

        <input
          type="text"
          placeholder="Search friends..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-gray-50 text-gray-800"
        />
      </div>

      {/* Pending Friend Requests Section */}
      <div className="mb-6">
        <button
          onClick={() => setShowPendingRequests(!showPendingRequests)}
          className="flex items-center w-full justify-between px-4 py-2 bg-indigo-50 text-indigo-700 font-medium rounded-lg hover:bg-indigo-100 transition-colors duration-200 mb-2"
        >
          <span>Friend Requests ({filteredPendingRequests.length})</span>
          <span>{showPendingRequests ? '▲' : '▼'}</span>
        </button>

        {showPendingRequests && (
          <div className="space-y-3 mt-3">
            {isLoading ? (
              <div className="text-center py-4 text-gray-500 bg-gray-50 rounded-lg">
                Loading requests...
              </div>
            ) : error ? (
              <div className="text-center py-4 text-red-500 bg-red-50 rounded-lg">
                {error}
              </div>
            ) : filteredPendingRequests.length > 0 ? (
              filteredPendingRequests.map(request => {
                const profileData = requestProfiles[request.sender_id];
                return (
                  <div key={request.request_id} className="flex items-center justify-between p-4 bg-indigo-50 rounded-lg shadow-sm border border-indigo-100">
                    <div>
                      <div className="font-medium text-gray-900">
                        {profileData ? profileData.display_name || profileData.username : 'Unknown User'}
                      </div>
                      <div className="text-xs text-gray-600">
                        Rating: {profileData ? profileData.rating : 'N/A'}
                      </div>
                      <div className="text-xs text-gray-500 mt-1">
                        {profileData ?
                          `Games: ${profileData.games_played} (W: ${profileData.wins} L: ${profileData.losses} D: ${profileData.draws})` :
                          'No stats available'}
                      </div>
                      {request.message && (
                        <div className="text-xs text-gray-500 mt-1 italic">
                          "{request.message}"
                        </div>
                      )}
                      <div className="text-xs text-gray-400 mt-1">
                        {new Date(request.created_at).toLocaleDateString()}
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <button
                        onClick={() => acceptRequest(request.request_id)}
                        className="px-3 py-1 bg-green-500 text-white text-xs font-medium rounded-md hover:bg-green-600 transition-colors"
                      >
                        Accept
                      </button>
                      <button
                        onClick={() => declineRequest(request.request_id)}
                        className="px-3 py-1 bg-red-500 text-white text-xs font-medium rounded-md hover:bg-red-600 transition-colors"
                      >
                        Decline
                      </button>
                    </div>
                  </div>
                );
              })
            ) : (
              <div className="text-center py-4 text-gray-400 bg-gray-50 rounded-lg">
                No pending friend requests
              </div>
            )}
          </div>
        )}
      </div>

      {/* Friends List */}
      <div>
        <h3 className="text-lg font-semibold text-indigo-600 mb-3">My Friends</h3>
        <div className="space-y-3 overflow-y-auto max-h-64">
          {isFriendsLoading ? (
            <div className="text-center py-4 text-gray-500 bg-gray-50 rounded-lg">
              Loading friends...
            </div>
          ) : friendsError ? (
            <div className="text-center py-4 text-red-500 bg-red-50 rounded-lg">
              {friendsError}
            </div>
          ) : filteredFriends.length > 0 ? (
            filteredFriends.map(friend => (
              <div key={friend.id} className="flex items-center justify-between p-4 bg-gray-50 rounded-lg shadow-sm border border-gray-100 hover:border-indigo-200 hover:bg-indigo-50 transition-all duration-200">
                {/* Friend Info */}
                <div className="flex items-center">
                  <div className={`w-3 h-3 rounded-full ${getStatusColor(friend.status)} ring-2 ring-white mr-3`}></div>
                  <div>
                    <div className="font-medium text-gray-900">{friend.name}</div>
                    <div className="text-xs text-gray-600">Rating: {friend.rating}</div>
                    <div className="text-xs text-gray-500">
                      Games: {friend.Matches} (W: {friend.wins} L: {friend.losses} D: {friend.draws})
                    </div>
                    <div className="text-xs text-gray-400">
                      Friends since: {new Date(friend.friendship?.since).toLocaleDateString()}
                    </div>
                  </div>
                </div>

                {/* Action Buttons */}
                <div className="flex gap-2">
                  {/* <button
                    onClick={() => inviteToGame(friend.name)}
                    className="px-3 py-1 bg-indigo-600 text-white text-xs font-medium rounded-md hover:bg-indigo-700 transition-colors"
                  >
                    Invite
                  </button> */}
                  <button
                    onClick={() => removeFriend(friend.id)}
                    className="px-3 py-1 bg-red-500 text-white text-xs font-medium rounded-md hover:bg-red-600 transition-colors"
                  >
                    Remove
                  </button>
                </div>
              </div>
            ))
          ) : (
            <div className="text-center py-8 text-gray-400 bg-gray-50 rounded-lg">
              No friends found
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Friends;

================================================================================

Filename: src/components/profile/GameSetup.jsx
Content:
import { useEffect, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';
import { signOut } from 'firebase/auth';
import { auth, database } from '../../firebase/config';
import { get, push, ref, remove, update } from 'firebase/database';
import AvailableGamesComponent from './AvailableGameComponent.jsx';


const initialBoardSetup = () => {
    // Create a new array with 8 rows
    const board = [];

    // Initialize each row with 8 null values
    for (let i = 0; i < 8; i++) {
        board[i] = new Array(8).fill(null);
    }

    // Place black pieces
    board[0][0] = { type: "rook", color: "black" };
    board[0][1] = { type: "knight", color: "black" };
    board[0][2] = { type: "bishop", color: "black" };
    board[0][3] = { type: "queen", color: "black" };
    board[0][4] = { type: "king", color: "black" };
    board[0][5] = { type: "bishop", color: "black" };
    board[0][6] = { type: "knight", color: "black" };
    board[0][7] = { type: "rook", color: "black" };

    // Place black pawns
    for (let i = 0; i < 8; i++) {
        board[1][i] = { type: "pawn", color: "black" };
    }

    // Place white pawns
    for (let i = 0; i < 8; i++) {
        board[6][i] = { type: "pawn", color: "white" };
    }

    // Place white pieces
    board[7][0] = { type: "rook", color: "white" };
    board[7][1] = { type: "knight", color: "white" };
    board[7][2] = { type: "bishop", color: "white" };
    board[7][3] = { type: "queen", color: "white" };
    board[7][4] = { type: "king", color: "white" };
    board[7][5] = { type: "bishop", color: "white" };
    board[7][6] = { type: "knight", color: "white" };
    board[7][7] = { type: "rook", color: "white" };

    return board;
};


const GameSetup = () => {
    const { user } = useAuth();
    const navigate = useNavigate();
    const location = useLocation();

    const [gameTime, setGameTime] = useState(5);
    const [playerColor, setPlayerColor] = useState('random');
    const [portalCount, setPortalCount] = useState(2);

    const [isLoading, setIsLoading] = useState(false);
    const [availableGames, setAvailableGames] = useState([]);
    const [showAvailableGames, setShowAvailableGames] = useState(false);
    const [activeGame, setActiveGame] = useState(null);

    // Process navigation state if coming from another page
    useEffect(() => {
        if (location.state) {
            const { createGame, findGames, joinGameId, timeControl, playerColor, portalCount } = location.state;

            if (createGame) {
                handleCreateGame(timeControl, playerColor, portalCount);
                navigate(location.pathname, { replace: true }); // Clear state
            } else if (findGames) {
                handleFindGames(timeControl);
                navigate(location.pathname, { replace: true }); // Clear state
            } else if (joinGameId) {
                joinGame(joinGameId);
                navigate(location.pathname, { replace: true }); // Clear state
            }
        }
    }, [location]);

    const handleLogout = async () => {
        try {
            await signOut(auth);
            navigate('/');
        } catch (error) {
        }
    };

    const handleCreateGame = async (timeControl = gameTime, color = playerColor, portals = portalCount) => {
        setIsLoading(true);
        try {
            // Determine player assignment based on color preference
            let whitePlayer = null;
            let blackPlayer = null;
            let whitePlayerName = null;
            let blackPlayerName = null;

            if (color === 'white') {
                whitePlayer = user.uid;
                whitePlayerName = user.displayName || user.email;
            } else if (color === 'black') {
                blackPlayer = user.uid;
                blackPlayerName = user.displayName || user.email;
            } else if (color === 'random') {
                // Randomly assign color
                if (Math.random() > 0.5) {
                    whitePlayer = user.uid;
                    whitePlayerName = user.displayName || user.email;
                } else {
                    blackPlayer = user.uid;
                    blackPlayerName = user.displayName || user.email;
                }
            }

            const gameRef = push(ref(database, 'games'), {
                board: initialBoardSetup(),
                portals: {},
                current_turn: "white",
                white_player: whitePlayer,
                white_player_name: whitePlayerName || null,
                white_player_email: whitePlayer ? user.email : null,
                black_player: blackPlayer,
                black_player_name: blackPlayerName || null,
                black_player_email: blackPlayer ? user.email : null,
                status: "waiting",
                created_at: Date.now(),
                time_control: timeControl,
                whiteTime: timeControl * 60, // Convert minutes to seconds
                blackTime: timeControl * 60,
                portal_count: portals,
                chat: {},
                lostPieces: {
                    white: [],
                    black: []
                }
            });

            setActiveGame(gameRef.key);
        } catch (error) {
            console.error('Error creating game:', error);
        }
        setIsLoading(false);
    };

    const createNewGame = () => {
        handleCreateGame();
    };

    const handleFindGames = async (preferredTimeControl = gameTime) => {
        setIsLoading(true);
        try {
            const gamesRef = ref(database, 'games');
            const snapshot = await get(gamesRef);
            const games = [];

            snapshot.forEach((childSnapshot) => {
                const game = childSnapshot.val();
                if (game.status === 'waiting') {
                    // Check if the user is not already in this game
                    const notInGame = game.white_player !== user.uid && game.black_player !== user.uid;

                    // Check if there's a slot available (either white or black)
                    const slotAvailable = !game.white_player || !game.black_player;

                    // Filter by time control if specified
                    const timeControlMatches = !preferredTimeControl ||
                        game.time_control === preferredTimeControl ||
                        !game.time_control;

                    if (notInGame && slotAvailable && timeControlMatches) {
                        games.push({
                            id: childSnapshot.key,
                            ...game
                        });
                    }
                }
            });

            setAvailableGames(games);
            setShowAvailableGames(true);
        } catch (error) {
            console.error('Error finding games:', error);
        }
        setIsLoading(false);
    };

    const findGames = () => {
        handleFindGames();
    };

    const joinGame = async (gameId) => {
        try {
            // Get current game data first
            const userName = user.displayName || user.email;
            const gameSnapshot = await get(ref(database, `games/${gameId}`));
            const gameData = gameSnapshot.val();

            if (!gameData) {
                console.error('Game not found');
                return;
            }

            const updateData = {};

            // Determine which role to take
            if (!gameData.white_player) {
                updateData.white_player = user.uid;
                updateData.white_player_name = userName;
                updateData.white_player_email = user.email;
            } else if (!gameData.black_player) {
                updateData.black_player = user.uid;
                updateData.black_player_name = userName;
                updateData.black_player_email = user.email;
            } else {
                console.error('No available slots in this game');
                return;
            }

            // If both players are now assigned, update game status
            if ((gameData.white_player || updateData.white_player) &&
                (gameData.black_player || updateData.black_player)) {
                updateData.status = 'active';
            }

            await update(ref(database, `games/${gameId}`), updateData);
            setActiveGame(gameId);
            setShowAvailableGames(false);
        } catch (error) {
            console.error('Error joining game:', error);
        }
    };

    const exitGame = async () => {
        if (activeGame) {
            try {
                // Get current game data
                const gameSnapshot = await get(ref(database, `games/${activeGame}`));
                const gameData = gameSnapshot.val();

                if (!gameData) {
                    console.error('Game not found');
                    setActiveGame(null);
                    setShowAvailableGames(false);
                    return;
                }

                const updateData = {};

                // Determine which player is leaving
                if (gameData.white_player === user.uid) {
                    updateData.white_player = null;
                    updateData.white_player_name = null;
                    updateData.white_player_email = null;
                } else if (gameData.black_player === user.uid) {
                    updateData.black_player = null;
                    updateData.black_player_name = null;
                    updateData.black_player_email = null;
                }

                // Check if both players will be gone after this update
                const bothPlayersLeaving =
                    (gameData.white_player === user.uid || !gameData.white_player) &&
                    (gameData.black_player === user.uid || !gameData.black_player);

                if (bothPlayersLeaving) {
                    // Delete the game if both players have left
                    await remove(ref(database, `games/${activeGame}`));
                    // console.log('Game deleted as both players have left');
                } else {
                    // Update the game with the player removed
                    await update(ref(database, `games/${activeGame}`), updateData);
                    // console.log('Player removed from game');
                }

                setActiveGame(null);
                setShowAvailableGames(false);
            } catch (error) {
                console.error('Error exiting game:', error);
            }
        } else {
            setActiveGame(null);
            setShowAvailableGames(false);
        }
    };

    const backToSetup = () => {
        setShowAvailableGames(false);
    };

    return (
        <>
            {activeGame ? (
                navigate(`/gameScreen?gameId=${activeGame}`)
                // <PortalChessGame
                // gameId={activeGame}
                // exit={exitGame}
                // />

            ) : showAvailableGames ? (
                <AvailableGamesComponent
                    availableGames={availableGames}
                    joinGame={joinGame}
                    backToSetup={backToSetup}
                />
            ) : (

                <div
                    className="bg-indigo-100 rounded-xl h-full p-6 shadow-md border border-indigo-100">
                    <h2 className="text-2xl font-bold text-indigo-800 mb-6">Game Setup</h2>

                    <div className="space-y-6">
                        <div>
                            <label className="block font-medium text-indigo-700 mb-3">Time Control</label>
                            <input
                                type="range" min="3" max="10" step="1"
                                value={gameTime}
                                onChange={(e) => setGameTime(Number(e.target.value))}
                                className="w-full accent-indigo-600 h-2 bg-white border border-indigo-200 rounded-lg appearance-none cursor-pointer hover:bg-indigo-50"
                            />
                            <div className="flex justify-between mt-2 text-sm text-indigo-600">
                                <span>3 min</span>
                                <span className="font-medium">{gameTime} minutes</span>
                                <span>10 min</span>
                            </div>
                        </div>

                        <div>
                            <label className="block font-medium text-indigo-700 mb-3">Play As</label>
                            <div className="grid grid-cols-3 gap-2">
                                {['white', 'black', 'random'].map(color => (
                                    <button
                                        key={color}
                                        className={`py-2 rounded-lg transition-all duration-200 ${playerColor === color
                                            ? 'bg-indigo-600 text-white font-medium shadow-md'
                                            : 'bg-white border border-indigo-200 text-indigo-700 hover:bg-indigo-50'
                                            }`}
                                        onClick={() => setPlayerColor(color)}
                                    >
                                        {color.charAt(0).toUpperCase() + color.slice(1)}
                                    </button>
                                ))}
                            </div>
                        </div>

                        <div>
                            <label className="block font-medium text-indigo-700 mb-3">Number of Portals</label>
                            <div className="grid grid-cols-5 gap-2">
                                {[0, 1, 2, 3, 4].map(num => (
                                    <button
                                        key={num}
                                        className={`py-2 rounded-lg transition-all duration-200 ${portalCount === num
                                            ? 'bg-indigo-600 text-white font-medium shadow-md'
                                            : 'bg-white border border-indigo-200 text-indigo-700 hover:bg-indigo-50'
                                            }`}
                                        onClick={() => setPortalCount(num)}
                                    >
                                        {num}
                                    </button>
                                ))}
                            </div>
                        </div>

                        <div className="grid grid-cols-2 gap-3 pt-4">
                            <button
                                onClick={createNewGame}
                                disabled={isLoading}
                                className="py-3 bg-indigo-600 text-white font-bold rounded-lg hover:bg-indigo-700 transition-colors shadow-md disabled:opacity-50"
                            >
                                Create Game
                            </button>
                            <button
                                onClick={findGames}
                                disabled={isLoading}
                                className="py-3 bg-indigo-600 text-white font-bold rounded-lg hover:bg-indigo-900 transition-colors shadow-md disabled:opacity-50"
                            >
                                Find Games
                            </button>
                        </div>
                    </div>
                </div>

            )}


        </>
    );
};

export default GameSetup;

================================================================================

Filename: src/components/profile/MatchHistory.jsx
Content:
import { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { BACKEND_URL } from '../../config.js';

const MatchHistory = () => {
  const [matches, setMatches] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [filter, setFilter] = useState('all');
  const [opponentProfiles, setOpponentProfiles] = useState({});
  const { user } = useAuth();

  useEffect(() => {
    const fetchMatchHistory = async () => {
      if (!user || !user.uid) return;

      try {
        setLoading(true);
        const response = await fetch(
          `${BACKEND_URL}/history/users/${user.uid}/games?limit=10`,
          {
            headers: {
              'Authorization': `Bearer ${localStorage.getItem('access_token')}`
            }
          }
        );

        if (!response.ok) {
          throw new Error('Failed to fetch match history');
        }

        const data = await response.json();

        // Get unique opponent IDs
        const opponentIds = [...new Set(data.map(game =>
          game.white_player_id === user.uid ? game.black_player_id : game.white_player_id
        ))];

        // Fetch opponent profiles
        const profilesData = {};
        await Promise.all(opponentIds.map(async (opponentId) => {
          try {
            const profileResponse = await fetch(
              `${BACKEND_URL}/profiles/${opponentId}`,
              {
                headers: {
                  'Authorization': `Bearer ${localStorage.getItem('access_token')}`
                }
              }
            );

            if (profileResponse.ok) {
              const profileData = await profileResponse.json();
              profilesData[opponentId] = profileData;
            }
          } catch (err) {
            console.error(`Error fetching profile for ${opponentId}:`, err);
          }
        }));

        setOpponentProfiles(profilesData);

        // Transform the API data to match our component's format
        const formattedMatches = data.map(game => {
          // Determine if the current user won or lost
          const isUserWhite = game.white_player_id === user.uid;
          let result;
          let opponentId;

          if (game.result === 'draw') {
            result = 'draw';
          } else if ((isUserWhite && game.result === 'white_win') ||
            (!isUserWhite && game.result === 'black_win')) {
            result = 'win';
          } else {
            result = 'loss';
          }

          // Get opponent ID
          opponentId = isUserWhite ? game.black_player_id : game.white_player_id;

          // Format date from ISO string
          const date = new Date(game.start_time).toLocaleDateString();

          // Format time control (convert seconds to minutes)
          const timeControlMinutes = Math.floor(game.time_control.initial / 60);
          const timeControl = `${timeControlMinutes} min`;

          // Get player's rating
          const playerRating = isUserWhite ? game.white_rating : game.black_rating;

          // Get portal count
          const portalCount = typeof game.game_type === 'string' &&
            game.game_type.startsWith('portal_gambit_')
            ? game.game_type.replace('portal_gambit_', '')
            : game.game_type || 0;

          return {
            id: game.game_id,
            opponentId,
            result,
            date,
            timeControl,
            playerMatches: playerRating,
            portalCount: parseInt(portalCount)
          };
        });

        setMatches(formattedMatches);
        setError(null);
      } catch (err) {
        setError('Failed to load match history. Please try again later.');
      } finally {
        setLoading(false);
      }
    };

    fetchMatchHistory();
  }, [user]);

  const filteredMatches = filter === 'all' ? matches : matches.filter(match => match.result === filter);

  const getResultColor = (result) => {
    switch (result) {
      case 'win': return 'bg-green-100 text-green-800 border-green-200';
      case 'loss': return 'bg-red-100 text-red-800 border-red-200';
      default: return 'bg-yellow-100 text-yellow-800 border-yellow-200';
    }
  };

  const getResultIcon = (result) => {
    switch (result) {
      case 'win': return '↑';
      case 'loss': return '↓';
      default: return '⟷';
    }
  };

  // Get opponent display name
  const getOpponentName = (opponentId) => {
    if (opponentProfiles[opponentId]) {
      return opponentProfiles[opponentId].username ||
        opponentProfiles[opponentId].displayName ||
        opponentId.substring(0, 8);
    }
    return opponentId.substring(0, 8) + "...";
  };

  return (
    <div className="bg-indigo-100 h-full p-6 shadow-md">
      <h2 className="text-2xl font-bold text-indigo-800 mb-6">Match History</h2>

      <div className="flex gap-2 mb-6">

        {['all', 'win', 'loss', 'draw'].map(option => (
          <button
            key={option}
            className={`px-4 py-2 rounded-lg transition-colors ${filter === option
              ? 'bg-gray-800 text-white font-medium'
              : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
              }`}
            onClick={() => setFilter(option)}
          >
            {option === 'all' ? 'All' :
              option === 'loss' ? 'Loss' :
                option.charAt(0).toUpperCase() + option.slice(1) + 's'}
          </button>
        ))}
      </div>

      {loading ? (
        <div className="flex justify-center items-center h-64">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-gray-900"></div>
        </div>
      ) : error ? (
        <div className="text-center py-12 text-red-500 bg-red-50 rounded-lg border border-red-100">
          {error}
        </div>
      ) : (
        <div className="space-y-4 overflow-y-auto max-h-64">
          {filteredMatches.length > 0 ? (
            filteredMatches.map(match => (
              <div key={match.id} className="p-4 bg-gray-50 rounded-lg shadow-sm border border-gray-100 hover:border-gray-300 transition-all duration-200">
                <div className="flex justify-between items-center mb-2">
                  <div className="font-semibold text-gray-800">
                    vs. {getOpponentName(match.opponentId)}
                  </div>
                  <div className={`text-xs font-medium px-2 py-1 rounded-full border ${getResultColor(match.result)}`}>
                    {getResultIcon(match.result)} {match.result.toUpperCase()}
                  </div>
                </div>
                <div className="grid grid-cols-2 gap-2 text-sm">
                  <div className="text-gray-600">
                    <span className="inline-block mr-2">📅</span>
                    {match.date}
                  </div>
                  <div className="text-gray-600 text-right">
                    <span className="inline-block mr-2">⏱️</span>
                    {match.timeControl}
                  </div>
                  <div className="text-gray-600">
                    <span className="inline-block mr-2">📊</span>
                    Rating: {match.playerMatches}
                  </div>
                  <div className="text-gray-600 text-right">
                    <span className="inline-block mr-2">🌀</span>
                    Portals: {match.portalCount}
                  </div>
                </div>

              </div>
            ))
          ) : (
            <div className="text-center py-12 text-gray-400 bg-gray-50 rounded-lg border border-gray-100">
              No matches found with the selected filter
            </div>
          )}
        </div>
      )}

    </div>
  );
};

export default MatchHistory;

================================================================================

Filename: src/components/profile/ProfilePage.jsx
Content:
import { useState, useContext, useEffect } from 'react';
import { motion } from 'framer-motion'; // Import motion
import { BiUserCircle, BiStats, BiTimeFive, BiStar, BiGame } from 'react-icons/bi'; // Import icons
import GameSetup from './GameSetup';
import Friends from './Friends';
import MatchHistory from './MatchHistory';
import AuthContext from "../../contexts/AuthContext.jsx";
import { BACKEND_URL } from "../../config.js";
import { signOut } from 'firebase/auth';
import { auth } from '../../firebase/config';
import { useNavigate } from 'react-router-dom';

// Animation Variants (similar to LandingPage)
const fadeIn = {
  hidden: { opacity: 0 },
  visible: { opacity: 1, transition: { duration: 0.6 } }
};

const slideUp = {
  hidden: { opacity: 0, y: 20 },
  visible: { opacity: 1, y: 0, transition: { duration: 0.5 } }
};

const staggerContainer = {
  hidden: { opacity: 1 }, // Start visible to avoid layout shift
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.15,
      delayChildren: 0.1
    }
  }
};


const ProfilePage = () => {
  const { user } = useContext(AuthContext);

  const navigate = useNavigate();
  
  // console.log(user.stsTokenManager.accessToken);
  // console.log(user.uid);

  const [userProfile, setUserProfile] = useState({
    username: 'Loading...', // Default placeholder
    email: 'Loading...',    // Default placeholder
    games_played: 0,
    created_at: '',
    display_name: 'Loading...', // Default placeholder
    draws: 0,
    losses: 0,
    rating: 0, // Added rating here
    uid: '',
    wins: 0,
  });

  useEffect(() => {
    const fetchUserProfile = async () => {
      if (user && user.uid) {
        try {
          // First, get the access token

          // const tokenResponse = await fetch(`${BACKEND_URL}/auth/token`, {
          //   method: 'POST',
          //   headers: {
          //     'Content-Type': 'application/json',
          //   },
          //   body: JSON.stringify({
          //     firebase_token: user.stsTokenManager.accessToken
          //   }),
          // });


          // if (!tokenResponse.ok) {
          //   throw new Error('Failed to get access token');
          // }

          // const tokenData = await tokenResponse.json();
          // localStorage.setItem('access_token', tokenData.access_token);

          // Then fetch the profile using GET request
          const profileResponse = await fetch(`${BACKEND_URL}/profiles/${user.uid}`, {
            method: 'GET',
            headers: {
              'Authorization': `Bearer ${localStorage.getItem('access_token')}`
            }
          });

          if (profileResponse.ok) {
            const data = await profileResponse.json();
            setUserProfile(data);
          } else {
            console.error('Failed to fetch user profile:', profileResponse.status);
            setUserProfile(prev => ({ // Set error state or defaults
              ...prev,
              username: 'Error',
              email: 'Could not load profile',
              display_name: 'Error'
            }));
          }
        } catch (error) {
          console.error('Error fetching user profile:', error);
          setUserProfile(prev => ({ // Set error state or defaults
            ...prev,
            username: 'Error',
            email: 'Could not load profile',
            display_name: 'Error'
          }));
        }
      }
    };

    fetchUserProfile();
  }, [user]);


  const [activeSection, setActiveSection] = useState('friends');

  const handleLogout = async () => {
    try {
      await signOut(auth);
      navigate('/');
    } catch (error) {
      // Optionally handle error
    }
  };

  return (
    // Updated background to match LandingPage gradient style

    <div className="min-h-screen bg-gradient-to-br from-indigo-500/70 to-blue-700/70 text-gray-800 py-12 px-4 sm:px-6 lg:px-8 relative">
      {/* Remove the top-right logout button */}
      <div className="absolute inset-0 bg-[url('/chess-pattern.png')] opacity-5 bg-repeat" style={{ backgroundSize: '200px' }}></div>

      <motion.div
        className="container mx-auto max-w-7xl flex flex-col lg:flex-row gap-8 relative z-10"
        initial="hidden"
        animate="visible"
        variants={staggerContainer}
      >
        {/* Left Column */}
        <motion.div className="lg:w-2/5 space-y-8" variants={fadeIn}>

          {/* User Profile Header - Updated with logout button */}
          <motion.div
            className="bg-indigo-100 backdrop-blur-md rounded-xl p-6 shadow-lg border border-white/30 overflow-hidden"
            variants={slideUp}
          >
            <div className="flex items-center gap-5">
              <motion.div
                className="w-20 h-20 bg-gradient-to-br from-indigo-600 to-blue-500 text-white rounded-full flex items-center justify-center text-4xl font-bold shadow-lg border-2 border-white/50 flex-shrink-0"
                whileHover={{ scale: 1.05 }}
              >
                {userProfile.username && userProfile.username !== 'Loading...' && userProfile.username !== 'Error'
                  ? userProfile.username.charAt(0).toUpperCase()
                  : <BiUserCircle />}
              </motion.div>
              <div className="flex-1 min-w-0">
                <div className="flex items-center justify-between">
                  <h1 className="text-2xl font-semibold text-indigo-700 truncate" title={userProfile.display_name || userProfile.username}>
                    {userProfile.display_name || userProfile.username}
                  </h1>
                  <button
                    onClick={handleLogout}
                    className="ml-4 px-3 py-1.5 bg-red-500 text-white text-sm rounded-lg shadow hover:bg-red-600 transition flex items-center gap-1"
                  >
                    <span className="hidden sm:inline">Logout</span>
                    <BiUserCircle className="w-4 h-4" />
                  </button>
                </div>
                <p className="text-gray-600 text-sm truncate" title={userProfile.email}>{userProfile.email}</p>
              </div>
            </div>
            {/* Stats Section - Updated styling */}
            <motion.div
              className="mt-6 grid grid-cols-2 gap-4 text-sm"
              variants={staggerContainer}
            >
              <motion.div className="flex items-center space-x-2 p-3 bg-white/50 backdrop-blur-sm rounded-lg border border-white/50 shadow-sm" variants={slideUp}>
                <BiStar className="text-yellow-500 text-lg flex-shrink-0" />
                <div>
                  <span className="font-medium text-gray-600 block">Rating</span>
                  <span className="text-lg font-semibold text-gray-800">{userProfile.rating}</span>
                </div>
              </motion.div>
              <motion.div className="flex items-center space-x-2 p-3 bg-white/50 backdrop-blur-sm rounded-lg border border-white/50 shadow-sm" variants={slideUp}>
                <BiGame className="text-green-500 text-lg flex-shrink-0" />
                <div>
                  <span className="font-medium text-gray-600 block">Games Played</span>
                  <span className="text-lg font-semibold text-gray-800">{userProfile.games_played}</span>
                </div>
              </motion.div>
              <motion.div className="flex items-center space-x-2 p-3 bg-white/50 backdrop-blur-sm rounded-lg border border-white/50 shadow-sm" variants={slideUp}>
                <BiStats className="text-blue-500 text-lg flex-shrink-0" />
                <div>
                  <span className="font-medium text-gray-600 block">Win Rate</span>
                  <span className="text-lg font-semibold text-gray-800">
                    {userProfile.games_played > 0
                      ? `${((userProfile.wins / userProfile.games_played) * 100).toFixed(1)}%`
                      : 'N/A'}
                  </span>
                </div>
              </motion.div>
              <motion.div className="flex items-center space-x-2 p-3 bg-white/50 backdrop-blur-sm rounded-lg border border-white/50 shadow-sm" variants={slideUp}>
                <BiTimeFive className="text-purple-500 text-lg flex-shrink-0" />
                <div>
                  <span className="font-medium text-gray-600 block">Member Since</span>
                  <span className="text-lg font-semibold text-gray-800">
                    {userProfile.created_at ? new Date(userProfile.created_at).toLocaleDateString() : 'N/A'}
                  </span>
                </div>
              </motion.div>
            </motion.div>
          </motion.div>

          {/* Toggle Buttons & Content Area - Updated styling */}
          <motion.div variants={slideUp}>
            <div className="flex bg-indigo-100 backdrop-blur-sm rounded-t-xl">
              {['friends', 'matchHistory'].map((section) => (
                <motion.button
                  key={section}
                  onClick={() => setActiveSection(section)}
                  className={`flex-1 px-4 py-3 text-center font-medium transition-colors duration-300 focus:outline-none relative ${activeSection === section
                    ? 'text-indigo-600' // Active color
                    : 'text-gray-600 hover:text-indigo-500' // Inactive/hover color
                    }`}
                  whileTap={{ scale: 0.98 }}
                >
                  {section === 'friends' ? 'Friends' : 'Match History'}
                  {activeSection === section && (
                    <motion.div
                      className="absolute bottom-0 left-0 right-0 h-0.5 bg-indigo-500"
                      layoutId="underline"
                    />
                  )}
                </motion.button>
              ))}
            </div>

            {/* Content Area - Updated styling */}
            <div className="rounded-b-xl shadow-lg overflow-hidden min-h-[400px]">
              {activeSection === 'friends' && <Friends />}
              {activeSection === 'matchHistory' && <MatchHistory />}
            </div>
          </motion.div>
        </motion.div>

        {/* Right Column - Game Setup - Updated styling */}
        <motion.div className="lg:w-3/5" variants={fadeIn}>
          <div className="bg-indigo-100 backdrop-blur-md rounded-xl shadow-lg border border-white/30 h-full">
            <GameSetup />
          </div>
        </motion.div>
      </motion.div>
    </div>
  );
};

export default ProfilePage;


================================================================================

Filename: src/config.js
Content:
const BACKEND_URL = import.meta.env.VITE_BACKEND_URL || 'http://localhost:8080';

export { BACKEND_URL };


================================================================================

Filename: src/contexts/AuthContext.jsx
Content:
import { createContext, useContext, useEffect, useState } from 'react';
import { auth } from '../firebase/config';
import { onAuthStateChanged } from 'firebase/auth';

const AuthContext = createContext();

// eslint-disable-next-line react/prop-types
export const AuthProvider = ({ children }) => {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        // You can choose to handle unverified emails here
        // if (!user.emailVerified) {
        //   // Option 1: Sign them out
        //   // auth.signOut();
        //   // Option 2: Let them in but show a warning in the dashboard
        // }

        setUser(user);
      } else {
        setUser(null);
      }
      setLoading(false);
    });

    return unsubscribe;
  }, []);

  const value = {
    user,
    loading,
    isEmailVerified: user?.emailVerified ?? false
  };

  return (
    <AuthContext.Provider value={value}>
      {!loading && children}
    </AuthContext.Provider>
  );
};

export const useAuth = () => {
  const context = useContext(AuthContext);
  if (!context) {
    throw new Error('useAuth must be used within an AuthProvider');
  }
  return context;
};

export default AuthContext;

================================================================================

Filename: src/firebase/config.js
Content:
import {initializeApp} from "firebase/app";
import {getAuth} from "firebase/auth";
import {getDatabase} from "firebase/database";


// Firebase configuration
const firebaseConfig = {
    apiKey: import.meta.env.VITE_FIREBASE_API_KEY,
    authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,
    projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,
    storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,
    appId: import.meta.env.VITE_FIREBASE_APP_ID,
    measurementId: import.meta.env.VITE_FIREBASE_MEASUREMENT_ID,
    databaseURL: import.meta.env.VITE_FIREBASE_DATABASE_URL
};


const app = initializeApp(firebaseConfig);
export const auth = getAuth(app);
export const database = getDatabase(app);

================================================================================

Filename: src/index.css
Content:
@import "tailwindcss";


================================================================================

Filename: src/main.jsx
Content:
import {StrictMode} from 'react'
import {createRoot} from 'react-dom/client'
import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
    <StrictMode>
        <App/>
    </StrictMode>,
)


================================================================================

Filename: src/utils/animations.js
Content:
// Framer Motion animation variants

// Fade in animation
export const fadeIn = {
    hidden: { opacity: 0 },
    visible: { opacity: 1, transition: { duration: 0.6 } }
};

// Slide up animation
export const slideUp = {
    hidden: { y: 50, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.6 } }
};

// Slide in from left
export const slideInLeft = {
    hidden: { x: -100, opacity: 0 },
    visible: { x: 0, opacity: 1, transition: { duration: 0.6 } }
};

// Slide in from right
export const slideInRight = {
    hidden: { x: 100, opacity: 0 },
    visible: { x: 0, opacity: 1, transition: { duration: 0.6 } }
};

// Scale animation for buttons
export const scaleButton = {
    tap: { scale: 0.95 },
    hover: { scale: 1.05 }
};

// Portal pulse animation
export const portalPulse = {
    pulse: {
        scale: [1, 1.1, 1],
        opacity: [0.7, 0.9, 0.7],
        transition: {
            duration: 2,
            repeat: Infinity,
            ease: "easeInOut"
        }
    }
};

// Modal animation
export const modalVariants = {
    hidden: {
        opacity: 0,
        scale: 0.9,
        y: 20
    },
    visible: {
        opacity: 1,
        scale: 1,
        y: 0,
        transition: {
            type: "spring",
            stiffness: 300,
            damping: 30
        }
    },
    exit: {
        opacity: 0,
        scale: 0.9,
        y: 20,
        transition: {
            duration: 0.2
        }
    }
};

// Stagger children animation
export const staggerContainer = {
    hidden: { opacity: 0 },
    visible: {
        opacity: 1,
        transition: {
            staggerChildren: 0.1
        }
    }
};

// Chess piece movement animation
export const chessPieceMove = {
    initial: { scale: 1 },
    animate: {
        scale: [1, 1.2, 1],
        transition: {
            duration: 0.5,
            ease: "easeInOut"
        }
    }
};

================================================================================

Filename: src/utils/profileUtils.js
Content:
import { BACKEND_URL } from "../config.js";

const fetchProfileDetails = async (uid) => {
    try {
        const accessToken = localStorage.getItem('access_token');
        if (!accessToken) {
            throw new Error('No access token found');
        }

        const response = await fetch(`${BACKEND_URL}/profiles/${uid}`, {
            method: 'GET',
            headers: {
                'accept': 'application/json',
                'Authorization': `Bearer ${accessToken}`
            }
        });

        if (!response.ok) {
            throw new Error('Failed to fetch profile details');
        }

        const profileData = await response.json();
        return profileData;
    } catch (error) {
        return null;
    }
};

export { fetchProfileDetails };

================================================================================

Filename: tailwind.config.js
Content:
module.exports = {
  // ... other config
  theme: {
    extend: {
      // ... other extensions
      animation: {
        'portal-pulse': 'portal-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',
        'portal-glow': 'portal-glow 2s ease-in-out infinite',
        'piece-movement': 'piece-movement 2s ease-in-out infinite',
      },
      keyframes: {
        'portal-pulse': {
          '0%, 100%': {
            transform: 'scale(1)',
            opacity: '1',
          },
          '50%': {
            transform: 'scale(1.1)',
            opacity: '0.8',
          },
        },
        'portal-glow': {
          '0%, 100%': {
            opacity: '0.5',
          },
          '50%': {
            opacity: '0.8',
          },
        },
        'piece-movement': {
          '0%': {
            transform: 'translate(0, 0)',
            opacity: '0',
          },
          '20%': {
            opacity: '1',
          },
          '60%': {
            transform: 'translate(100%, 100%)',
            opacity: '1',
          },
          '80%, 100%': {
            transform: 'translate(100%, 100%)',
            opacity: '0',
          },
        },
      },
    },
  },
}

================================================================================

Filename: vite.config.js
Content:
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'
// https://vite.dev/config/
export default defineConfig({
  plugins: [react(),tailwindcss()],
  build: {
    outDir: 'dist',
  }
})


================================================================================
