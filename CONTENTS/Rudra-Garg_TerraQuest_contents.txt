
Filename: .github/workflows/deploy.yml
Content:
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ] 
  workflow_dispatch:    

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
      
      - name: Create .env file
        run: |
          echo "VITE_GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" >> .env
          echo "VITE_BACKEND_URL=${{ secrets.BACKEND_URL }}" >> .env
      
      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

================================================================================

Filename: .gitignore
Content:
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
.env
.vscode
repo_contents.txt

================================================================================

Filename: README.md
Content:
[![Deploy to GitHub Pages](https://github.com/Rudra-Garg/TerraQuest/actions/workflows/deploy.yml/badge.svg)](https://github.com/Rudra-Garg/TerraQuest/actions/workflows/deploy.yml)
# TerraQuest 🌍

A modern, interactive geography guessing game built with Vue 3 and Google Street View. Test your geography knowledge by exploring locations worldwide and pinpointing them on a map.

## 🌟 Features

- **Interactive Street View Experience**: Explore real-world locations using Google Street View
- **Real-time Map Interaction**: Place your guesses on an interactive map
- **Score System**: Earn points based on the accuracy of your guesses
- **User Authentication**: Create an account to track your progress and compete with others
- **Leaderboard System**: Compare your skills with other players worldwide
- **Responsive Design**: Seamless experience across all devices

## 🚀 Getting Started

### Prerequisites

- Node.js (v14 or higher)
- npm or yarn
- Google Maps API Key

### Installation

1. Clone the repository:
```bash
git clone https://github.com/Rudra-Garg/TerraQuest.git
cd TerraQuest
 ```


2. Install dependencies:
```bash
npm install
 ```

3. Create a .env file in the root directory with your Google Maps API key:
```plaintext
VITE_GOOGLE_MAPS_API_KEY=your_api_key_here
VITE_BACKEND_URL=your_backend_url_here
 ```


4. Start the development server:
```bash
npm run dev
 ```

## 🛠️ Built With
- Vue 3 - Progressive JavaScript Framework
- Vite - Next Generation Frontend Tooling
- Pinia - State Management
- Tailwind CSS - Utility-first CSS Framework
- Leaflet - Interactive Maps
- Google Maps API - Street View Integration
## 🎮 How to Play
1. Start a Game : Click "Play Now" to begin a new game session
2. Explore : Use Street View to look around your random location
3. Make Your Guess : Click on the map to place your guess
4. Submit : Confirm your guess to see how close you were
5. Continue : Play through multiple rounds to maximize your score
## 🔧 Project Structure
```plaintext
src/
├── components/     # Reusable Vue components
├── views/          # Page components
├── stores/         # Pinia state management
├── services/       # API services
├── router/         # Vue Router configuration
└── assets/         # Static assets
 ```



## 🙏 Acknowledgments
- Google Maps Platform for Street View API
- OpenStreetMap contributors
- The Vue.js team and community


================================================================================

Filename: index.html
Content:
<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="icon" type="image/svg+xml" href="/vite.svg" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TerraQuest</title>
</head>

<body>
  <div id="app"></div>
  <script type="module" src="/src/main.js"></script>
</body>

</html>

================================================================================

Filename: package-lock.json
Content:
{
  "name": "geoguessr",
  "version": "0.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "geoguessr",
      "version": "0.0.0",
      "dependencies": {
        "@tailwindcss/vite": "^4.1.3",
        "@types/leaflet": "^1.9.17",
        "axios": "^1.8.4",
        "leaflet": "^1.9.4",
        "pinia": "^3.0.2",
        "tailwindcss": "^4.1.3",
        "vue": "^3.5.13",
        "vue-router": "^4.5.0"
      },
      "devDependencies": {
        "@vitejs/plugin-vue": "^5.2.1",
        "autoprefixer": "^10.4.21",
        "gh-pages": "^6.3.0",
        "vite": "^6.2.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
      "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.25.9",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
      "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.27.0.tgz",
      "integrity": "sha512-iaepho73/2Pz7w2eMS0Q5f83+0RKI7i4xmiYeBmDzfRVbQtTOG7Ts0S4HzJVsTMGI9keU8rNfuZr8DKfSt7Yyg==",
      "dependencies": {
        "@babel/types": "^7.27.0"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.27.0.tgz",
      "integrity": "sha512-H45s8fVLYjbhFH62dIJ3WtmJ6RSPt/3DRO0ZcT2SUiYiQyz3BLVb9ADEnLl91m74aQPS3AzzeajZHYOalWe3bg==",
      "dependencies": {
        "@babel/helper-string-parser": "^7.25.9",
        "@babel/helper-validator-identifier": "^7.25.9"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.2.tgz",
      "integrity": "sha512-wCIboOL2yXZym2cgm6mlA742s9QeJ8DjGVaL39dLN4rRwrOgOyYSnOaFPhKZGLb2ngj4EyfAFjsNJwPXZvseag==",
      "cpu": [
        "ppc64"
      ],
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.2.tgz",
      "integrity": "sha512-NQhH7jFstVY5x8CKbcfa166GoV0EFkaPkCKBQkdPJFvo5u+nGXLEH/ooniLb3QI8Fk58YAx7nsPLozUWfCBOJA==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.2.tgz",
      "integrity": "sha512-5ZAX5xOmTligeBaeNEPnPaeEuah53Id2tX4c2CVP3JaROTH+j4fnfHCkr1PjXMd78hMst+TlkfKcW/DlTq0i4w==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.2.tgz",
      "integrity": "sha512-Ffcx+nnma8Sge4jzddPHCZVRvIfQ0kMsUsCMcJRHkGJ1cDmhe4SsrYIjLUKn1xpHZybmOqCWwB0zQvsjdEHtkg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.2.tgz",
      "integrity": "sha512-MpM6LUVTXAzOvN4KbjzU/q5smzryuoNjlriAIx+06RpecwCkL9JpenNzpKd2YMzLJFOdPqBpuub6eVRP5IgiSA==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.2.tgz",
      "integrity": "sha512-5eRPrTX7wFyuWe8FqEFPG2cU0+butQQVNcT4sVipqjLYQjjh8a8+vUTfgBKM88ObB85ahsnTwF7PSIt6PG+QkA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.2.tgz",
      "integrity": "sha512-mLwm4vXKiQ2UTSX4+ImyiPdiHjiZhIaE9QvC7sw0tZ6HoNMjYAqQpGyui5VRIi5sGd+uWq940gdCbY3VLvsO1w==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.2.tgz",
      "integrity": "sha512-6qyyn6TjayJSwGpm8J9QYYGQcRgc90nmfdUb0O7pp1s4lTY+9D0H9O02v5JqGApUyiHOtkz6+1hZNvNtEhbwRQ==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.2.tgz",
      "integrity": "sha512-UHBRgJcmjJv5oeQF8EpTRZs/1knq6loLxTsjc3nxO9eXAPDLcWW55flrMVc97qFPbmZP31ta1AZVUKQzKTzb0g==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.2.tgz",
      "integrity": "sha512-gq/sjLsOyMT19I8obBISvhoYiZIAaGF8JpeXu1u8yPv8BE5HlWYobmlsfijFIZ9hIVGYkbdFhEqC0NvM4kNO0g==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.2.tgz",
      "integrity": "sha512-bBYCv9obgW2cBP+2ZWfjYTU+f5cxRoGGQ5SeDbYdFCAZpYWrfjjfYwvUpP8MlKbP0nwZ5gyOU/0aUzZ5HWPuvQ==",
      "cpu": [
        "ia32"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.2.tgz",
      "integrity": "sha512-SHNGiKtvnU2dBlM5D8CXRFdd+6etgZ9dXfaPCeJtz+37PIUlixvlIhI23L5khKXs3DIzAn9V8v+qb1TRKrgT5w==",
      "cpu": [
        "loong64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.2.tgz",
      "integrity": "sha512-hDDRlzE6rPeoj+5fsADqdUZl1OzqDYow4TB4Y/3PlKBD0ph1e6uPHzIQcv2Z65u2K0kpeByIyAjCmjn1hJgG0Q==",
      "cpu": [
        "mips64el"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.2.tgz",
      "integrity": "sha512-tsHu2RRSWzipmUi9UBDEzc0nLc4HtpZEI5Ba+Omms5456x5WaNuiG3u7xh5AO6sipnJ9r4cRWQB2tUjPyIkc6g==",
      "cpu": [
        "ppc64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.2.tgz",
      "integrity": "sha512-k4LtpgV7NJQOml/10uPU0s4SAXGnowi5qBSjaLWMojNCUICNu7TshqHLAEbkBdAszL5TabfvQ48kK84hyFzjnw==",
      "cpu": [
        "riscv64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.2.tgz",
      "integrity": "sha512-GRa4IshOdvKY7M/rDpRR3gkiTNp34M0eLTaC1a08gNrh4u488aPhuZOCpkF6+2wl3zAN7L7XIpOFBhnaE3/Q8Q==",
      "cpu": [
        "s390x"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.2.tgz",
      "integrity": "sha512-QInHERlqpTTZ4FRB0fROQWXcYRD64lAoiegezDunLpalZMjcUcld3YzZmVJ2H/Cp0wJRZ8Xtjtj0cEHhYc/uUg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.2.tgz",
      "integrity": "sha512-talAIBoY5M8vHc6EeI2WW9d/CkiO9MQJ0IOWX8hrLhxGbro/vBXJvaQXefW2cP0z0nQVTdQ/eNyGFV1GSKrxfw==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.2.tgz",
      "integrity": "sha512-voZT9Z+tpOxrvfKFyfDYPc4DO4rk06qamv1a/fkuzHpiVBMOhpjK+vBmWM8J1eiB3OLSMFYNaOaBNLXGChf5tg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.2.tgz",
      "integrity": "sha512-dcXYOC6NXOqcykeDlwId9kB6OkPUxOEqU+rkrYVqJbK2hagWOMrsTGsMr8+rW02M+d5Op5NNlgMmjzecaRf7Tg==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.2.tgz",
      "integrity": "sha512-t/TkWwahkH0Tsgoq1Ju7QfgGhArkGLkF1uYz8nQS/PPFlXbP5YgRpqQR3ARRiC2iXoLTWFxc6DJMSK10dVXluw==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.2.tgz",
      "integrity": "sha512-cfZH1co2+imVdWCjd+D1gf9NjkchVhhdpgb1q5y6Hcv9TP6Zi9ZG/beI3ig8TvwT9lH9dlxLq5MQBBgwuj4xvA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.2.tgz",
      "integrity": "sha512-7Loyjh+D/Nx/sOTzV8vfbB3GJuHdOQyrOryFdZvPHLf42Tk9ivBU5Aedi7iyX+x6rbn2Mh68T4qq1SDqJBQO5Q==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.2.tgz",
      "integrity": "sha512-WRJgsz9un0nqZJ4MfhabxaD9Ft8KioqU3JMinOTvobbX6MOSUigSBlogP8QB3uxpJDsFS6yN+3FDBdqE5lg9kg==",
      "cpu": [
        "ia32"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.2.tgz",
      "integrity": "sha512-kM3HKb16VIXZyIeVrM1ygYmZBKybX8N4p754bw390wGO3Tf2j4L2/WYL+4suWujpgf6GBYs3jv7TyUivdd05JA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ=="
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.39.0.tgz",
      "integrity": "sha512-lGVys55Qb00Wvh8DMAocp5kIcaNzEFTmGhfFd88LfaogYTRKrdxgtlO5H6S49v2Nd8R2C6wLOal0qv6/kCkOwA==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.39.0.tgz",
      "integrity": "sha512-It9+M1zE31KWfqh/0cJLrrsCPiF72PoJjIChLX+rEcujVRCb4NLQ5QzFkzIZW8Kn8FTbvGQBY5TkKBau3S8cCQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.39.0.tgz",
      "integrity": "sha512-lXQnhpFDOKDXiGxsU9/l8UEGGM65comrQuZ+lDcGUx+9YQ9dKpF3rSEGepyeR5AHZ0b5RgiligsBhWZfSSQh8Q==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.39.0.tgz",
      "integrity": "sha512-mKXpNZLvtEbgu6WCkNij7CGycdw9cJi2k9v0noMb++Vab12GZjFgUXD69ilAbBh034Zwn95c2PNSz9xM7KYEAQ==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.39.0.tgz",
      "integrity": "sha512-jivRRlh2Lod/KvDZx2zUR+I4iBfHcu2V/BA2vasUtdtTN2Uk3jfcZczLa81ESHZHPHy4ih3T/W5rPFZ/hX7RtQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.39.0.tgz",
      "integrity": "sha512-8RXIWvYIRK9nO+bhVz8DwLBepcptw633gv/QT4015CpJ0Ht8punmoHU/DuEd3iw9Hr8UwUV+t+VNNuZIWYeY7Q==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.39.0.tgz",
      "integrity": "sha512-mz5POx5Zu58f2xAG5RaRRhp3IZDK7zXGk5sdEDj4o96HeaXhlUwmLFzNlc4hCQi5sGdR12VDgEUqVSHer0lI9g==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.39.0.tgz",
      "integrity": "sha512-+YDwhM6gUAyakl0CD+bMFpdmwIoRDzZYaTWV3SDRBGkMU/VpIBYXXEvkEcTagw/7VVkL2vA29zU4UVy1mP0/Yw==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.39.0.tgz",
      "integrity": "sha512-EKf7iF7aK36eEChvlgxGnk7pdJfzfQbNvGV/+l98iiMwU23MwvmV0Ty3pJ0p5WQfm3JRHOytSIqD9LB7Bq7xdQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.39.0.tgz",
      "integrity": "sha512-vYanR6MtqC7Z2SNr8gzVnzUul09Wi1kZqJaek3KcIlI/wq5Xtq4ZPIZ0Mr/st/sv/NnaPwy/D4yXg5x0B3aUUA==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.39.0.tgz",
      "integrity": "sha512-NMRUT40+h0FBa5fb+cpxtZoGAggRem16ocVKIv5gDB5uLDgBIwrIsXlGqYbLwW8YyO3WVTk1FkFDjMETYlDqiw==",
      "cpu": [
        "loong64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.39.0.tgz",
      "integrity": "sha512-0pCNnmxgduJ3YRt+D+kJ6Ai/r+TaePu9ZLENl+ZDV/CdVczXl95CbIiwwswu4L+K7uOIGf6tMo2vm8uadRaICQ==",
      "cpu": [
        "ppc64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.39.0.tgz",
      "integrity": "sha512-t7j5Zhr7S4bBtksT73bO6c3Qa2AV/HqiGlj9+KB3gNF5upcVkx+HLgxTm8DK4OkzsOYqbdqbLKwvGMhylJCPhQ==",
      "cpu": [
        "riscv64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-musl": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.39.0.tgz",
      "integrity": "sha512-m6cwI86IvQ7M93MQ2RF5SP8tUjD39Y7rjb1qjHgYh28uAPVU8+k/xYWvxRO3/tBN2pZkSMa5RjnPuUIbrwVxeA==",
      "cpu": [
        "riscv64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.39.0.tgz",
      "integrity": "sha512-iRDJd2ebMunnk2rsSBYlsptCyuINvxUfGwOUldjv5M4tpa93K8tFMeYGpNk2+Nxl+OBJnBzy2/JCscGeO507kA==",
      "cpu": [
        "s390x"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.39.0.tgz",
      "integrity": "sha512-t9jqYw27R6Lx0XKfEFe5vUeEJ5pF3SGIM6gTfONSMb7DuG6z6wfj2yjcoZxHg129veTqU7+wOhY6GX8wmf90dA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.39.0.tgz",
      "integrity": "sha512-ThFdkrFDP55AIsIZDKSBWEt/JcWlCzydbZHinZ0F/r1h83qbGeenCt/G/wG2O0reuENDD2tawfAj2s8VK7Bugg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.39.0.tgz",
      "integrity": "sha512-jDrLm6yUtbOg2TYB3sBF3acUnAwsIksEYjLeHL+TJv9jg+TmTwdyjnDex27jqEMakNKf3RwwPahDIt7QXCSqRQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.39.0.tgz",
      "integrity": "sha512-6w9uMuza+LbLCVoNKL5FSLE7yvYkq9laSd09bwS0tMjkwXrmib/4KmoJcrKhLWHvw19mwU+33ndC69T7weNNjQ==",
      "cpu": [
        "ia32"
      ],
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.39.0.tgz",
      "integrity": "sha512-yAkUOkIKZlK5dl7u6dg897doBgLXmUHhIINM2c+sND3DZwnrdQkkSiDh7N75Ll4mM4dxSkYfXqU9fW3lLkMFug==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.3.tgz",
      "integrity": "sha512-H/6r6IPFJkCfBJZ2dKZiPJ7Ueb2wbL592+9bQEl2r73qbX6yGnmQVIfiUvDRB2YI0a3PWDrzUwkvQx1XW1bNkA==",
      "dependencies": {
        "enhanced-resolve": "^5.18.1",
        "jiti": "^2.4.2",
        "lightningcss": "1.29.2",
        "tailwindcss": "4.1.3"
      }
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.3.tgz",
      "integrity": "sha512-t16lpHCU7LBxDe/8dCj9ntyNpXaSTAgxWm1u2XQP5NiIu4KGSyrDJJRlK9hJ4U9yJxx0UKCVI67MJWFNll5mOQ==",
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.1.3",
        "@tailwindcss/oxide-darwin-arm64": "4.1.3",
        "@tailwindcss/oxide-darwin-x64": "4.1.3",
        "@tailwindcss/oxide-freebsd-x64": "4.1.3",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.3",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.3",
        "@tailwindcss/oxide-linux-arm64-musl": "4.1.3",
        "@tailwindcss/oxide-linux-x64-gnu": "4.1.3",
        "@tailwindcss/oxide-linux-x64-musl": "4.1.3",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.3",
        "@tailwindcss/oxide-win32-x64-msvc": "4.1.3"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.3.tgz",
      "integrity": "sha512-cxklKjtNLwFl3mDYw4XpEfBY+G8ssSg9ADL4Wm6//5woi3XGqlxFsnV5Zb6v07dxw1NvEX2uoqsxO/zWQsgR+g==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.3.tgz",
      "integrity": "sha512-mqkf2tLR5VCrjBvuRDwzKNShRu99gCAVMkVsaEOFvv6cCjlEKXRecPu9DEnxp6STk5z+Vlbh1M5zY3nQCXMXhw==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.3.tgz",
      "integrity": "sha512-7sGraGaWzXvCLyxrc7d+CCpUN3fYnkkcso3rCzwUmo/LteAl2ZGCDlGvDD8Y/1D3ngxT8KgDj1DSwOnNewKhmg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.3.tgz",
      "integrity": "sha512-E2+PbcbzIReaAYZe997wb9rId246yDkCwAakllAWSGqe6VTg9hHle67hfH6ExjpV2LSK/siRzBUs5wVff3RW9w==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.3.tgz",
      "integrity": "sha512-GvfbJ8wjSSjbLFFE3UYz4Eh8i4L6GiEYqCtA8j2Zd2oXriPuom/Ah/64pg/szWycQpzRnbDiJozoxFU2oJZyfg==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.3.tgz",
      "integrity": "sha512-35UkuCWQTeG9BHcBQXndDOrpsnt3Pj9NVIB4CgNiKmpG8GnCNXeMczkUpOoqcOhO6Cc/mM2W7kaQ/MTEENDDXg==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.3.tgz",
      "integrity": "sha512-dm18aQiML5QCj9DQo7wMbt1Z2tl3Giht54uVR87a84X8qRtuXxUqnKQkRDK5B4bCOmcZ580lF9YcoMkbDYTXHQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.3.tgz",
      "integrity": "sha512-LMdTmGe/NPtGOaOfV2HuO7w07jI3cflPrVq5CXl+2O93DCewADK0uW1ORNAcfu2YxDUS035eY2W38TxrsqngxA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.3.tgz",
      "integrity": "sha512-aalNWwIi54bbFEizwl1/XpmdDrOaCjRFQRgtbv9slWjmNPuJJTIKPHf5/XXDARc9CneW9FkSTqTbyvNecYAEGw==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.3.tgz",
      "integrity": "sha512-PEj7XR4OGTGoboTIAdXicKuWl4EQIjKHKuR+bFy9oYN7CFZo0eu74+70O4XuERX4yjqVZGAkCdglBODlgqcCXg==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.3.tgz",
      "integrity": "sha512-T8gfxECWDBENotpw3HR9SmNiHC9AOJdxs+woasRZ8Q/J4VHN0OMs7F+4yVNZ9EVN26Wv6mZbK0jv7eHYuLJLwA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/vite": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/@tailwindcss/vite/-/vite-4.1.3.tgz",
      "integrity": "sha512-lUI/QaDxLtlV52Lho6pu07CG9pSnRYLOPmKGIQjyHdTBagemc6HmgZxyjGAQ/5HMPrNeWBfTVIpQl0/jLXvWHQ==",
      "dependencies": {
        "@tailwindcss/node": "4.1.3",
        "@tailwindcss/oxide": "4.1.3",
        "tailwindcss": "4.1.3"
      },
      "peerDependencies": {
        "vite": "^5.2.0 || ^6"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
      "integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ=="
    },
    "node_modules/@types/geojson": {
      "version": "7946.0.16",
      "resolved": "https://registry.npmjs.org/@types/geojson/-/geojson-7946.0.16.tgz",
      "integrity": "sha512-6C8nqWur3j98U6+lXDfTUWIfgvZU+EumvpHKcYjujKH7woYyLj2sUmff0tRhrqM7BohUw7Pz3ZB1jj2gW9Fvmg=="
    },
    "node_modules/@types/leaflet": {
      "version": "1.9.17",
      "resolved": "https://registry.npmjs.org/@types/leaflet/-/leaflet-1.9.17.tgz",
      "integrity": "sha512-IJ4K6t7I3Fh5qXbQ1uwL3CFVbCi6haW9+53oLWgdKlLP7EaS21byWFJxxqOx9y8I0AP0actXSJLVMbyvxhkUTA==",
      "dependencies": {
        "@types/geojson": "*"
      }
    },
    "node_modules/@vitejs/plugin-vue": {
      "version": "5.2.3",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-vue/-/plugin-vue-5.2.3.tgz",
      "integrity": "sha512-IYSLEQj4LgZZuoVpdSUCw3dIynTWQgPlaRP6iAvMle4My0HdYwr5g5wQAfwOeHQBmYwEkqF70nRpSilr6PoUDg==",
      "dev": true,
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "peerDependencies": {
        "vite": "^5.0.0 || ^6.0.0",
        "vue": "^3.2.25"
      }
    },
    "node_modules/@vue/compiler-core": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/compiler-core/-/compiler-core-3.5.13.tgz",
      "integrity": "sha512-oOdAkwqUfW1WqpwSYJce06wvt6HljgY3fGeM9NcVA1HaYOij3mZG9Rkysn0OHuyUAGMbEbARIpsG+LPVlBJ5/Q==",
      "dependencies": {
        "@babel/parser": "^7.25.3",
        "@vue/shared": "3.5.13",
        "entities": "^4.5.0",
        "estree-walker": "^2.0.2",
        "source-map-js": "^1.2.0"
      }
    },
    "node_modules/@vue/compiler-dom": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/compiler-dom/-/compiler-dom-3.5.13.tgz",
      "integrity": "sha512-ZOJ46sMOKUjO3e94wPdCzQ6P1Lx/vhp2RSvfaab88Ajexs0AHeV0uasYhi99WPaogmBlRHNRuly8xV75cNTMDA==",
      "dependencies": {
        "@vue/compiler-core": "3.5.13",
        "@vue/shared": "3.5.13"
      }
    },
    "node_modules/@vue/compiler-sfc": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/compiler-sfc/-/compiler-sfc-3.5.13.tgz",
      "integrity": "sha512-6VdaljMpD82w6c2749Zhf5T9u5uLBWKnVue6XWxprDobftnletJ8+oel7sexFfM3qIxNmVE7LSFGTpv6obNyaQ==",
      "dependencies": {
        "@babel/parser": "^7.25.3",
        "@vue/compiler-core": "3.5.13",
        "@vue/compiler-dom": "3.5.13",
        "@vue/compiler-ssr": "3.5.13",
        "@vue/shared": "3.5.13",
        "estree-walker": "^2.0.2",
        "magic-string": "^0.30.11",
        "postcss": "^8.4.48",
        "source-map-js": "^1.2.0"
      }
    },
    "node_modules/@vue/compiler-ssr": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/compiler-ssr/-/compiler-ssr-3.5.13.tgz",
      "integrity": "sha512-wMH6vrYHxQl/IybKJagqbquvxpWCuVYpoUJfCqFZwa/JY1GdATAQ+TgVtgrwwMZ0D07QhA99rs/EAAWfvG6KpA==",
      "dependencies": {
        "@vue/compiler-dom": "3.5.13",
        "@vue/shared": "3.5.13"
      }
    },
    "node_modules/@vue/devtools-api": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/@vue/devtools-api/-/devtools-api-7.7.2.tgz",
      "integrity": "sha512-1syn558KhyN+chO5SjlZIwJ8bV/bQ1nOVTG66t2RbG66ZGekyiYNmRO7X9BJCXQqPsFHlnksqvPhce2qpzxFnA==",
      "dependencies": {
        "@vue/devtools-kit": "^7.7.2"
      }
    },
    "node_modules/@vue/devtools-kit": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/@vue/devtools-kit/-/devtools-kit-7.7.2.tgz",
      "integrity": "sha512-CY0I1JH3Z8PECbn6k3TqM1Bk9ASWxeMtTCvZr7vb+CHi+X/QwQm5F1/fPagraamKMAHVfuuCbdcnNg1A4CYVWQ==",
      "dependencies": {
        "@vue/devtools-shared": "^7.7.2",
        "birpc": "^0.2.19",
        "hookable": "^5.5.3",
        "mitt": "^3.0.1",
        "perfect-debounce": "^1.0.0",
        "speakingurl": "^14.0.1",
        "superjson": "^2.2.1"
      }
    },
    "node_modules/@vue/devtools-shared": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/@vue/devtools-shared/-/devtools-shared-7.7.2.tgz",
      "integrity": "sha512-uBFxnp8gwW2vD6FrJB8JZLUzVb6PNRG0B0jBnHsOH8uKyva2qINY8PTF5Te4QlTbMDqU5K6qtJDr6cNsKWhbOA==",
      "dependencies": {
        "rfdc": "^1.4.1"
      }
    },
    "node_modules/@vue/reactivity": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/reactivity/-/reactivity-3.5.13.tgz",
      "integrity": "sha512-NaCwtw8o48B9I6L1zl2p41OHo/2Z4wqYGGIK1Khu5T7yxrn+ATOixn/Udn2m+6kZKB/J7cuT9DbWWhRxqixACg==",
      "dependencies": {
        "@vue/shared": "3.5.13"
      }
    },
    "node_modules/@vue/runtime-core": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/runtime-core/-/runtime-core-3.5.13.tgz",
      "integrity": "sha512-Fj4YRQ3Az0WTZw1sFe+QDb0aXCerigEpw418pw1HBUKFtnQHWzwojaukAs2X/c9DQz4MQ4bsXTGlcpGxU/RCIw==",
      "dependencies": {
        "@vue/reactivity": "3.5.13",
        "@vue/shared": "3.5.13"
      }
    },
    "node_modules/@vue/runtime-dom": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/runtime-dom/-/runtime-dom-3.5.13.tgz",
      "integrity": "sha512-dLaj94s93NYLqjLiyFzVs9X6dWhTdAlEAciC3Moq7gzAc13VJUdCnjjRurNM6uTLFATRHexHCTu/Xp3eW6yoog==",
      "dependencies": {
        "@vue/reactivity": "3.5.13",
        "@vue/runtime-core": "3.5.13",
        "@vue/shared": "3.5.13",
        "csstype": "^3.1.3"
      }
    },
    "node_modules/@vue/server-renderer": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.5.13.tgz",
      "integrity": "sha512-wAi4IRJV/2SAW3htkTlB+dHeRmpTiVIK1OGLWV1yeStVSebSQQOwGwIq0D3ZIoBj2C2qpgz5+vX9iEBkTdk5YA==",
      "dependencies": {
        "@vue/compiler-ssr": "3.5.13",
        "@vue/shared": "3.5.13"
      },
      "peerDependencies": {
        "vue": "3.5.13"
      }
    },
    "node_modules/@vue/shared": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/@vue/shared/-/shared-3.5.13.tgz",
      "integrity": "sha512-/hnE/qP5ZoGpol0a5mDi45bOd7t3tjYJBjsgCsivow7D48cJeV5l05RD82lPqi7gRiphZM37rnhW1l6ZoCNNnQ=="
    },
    "node_modules/array-union": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/async": {
      "version": "3.2.6",
      "resolved": "https://registry.npmjs.org/async/-/async-3.2.6.tgz",
      "integrity": "sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q=="
    },
    "node_modules/autoprefixer": {
      "version": "10.4.21",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "browserslist": "^4.24.4",
        "caniuse-lite": "^1.0.30001702",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.1.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/axios": {
      "version": "1.8.4",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.8.4.tgz",
      "integrity": "sha512-eBSYY4Y68NNlHbHBMdeDmKNtDgXWhQsJcGqzO3iLUM0GraQFSS9cVgPX5I9b3lbdFKyYoAEGAZF1DwhTaljNAw==",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.0",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/birpc": {
      "version": "0.2.19",
      "resolved": "https://registry.npmjs.org/birpc/-/birpc-0.2.19.tgz",
      "integrity": "sha512-5WeXXAvTmitV1RqJFppT5QtUiz2p1mRSYU000Jkft5ZUCLJIk4uQriYNO50HknxKwM6jd8utNc66K1qGIwwWBQ==",
      "funding": {
        "url": "https://github.com/sponsors/antfu"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.4.tgz",
      "integrity": "sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "caniuse-lite": "^1.0.30001688",
        "electron-to-chromium": "^1.5.73",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.1"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001712",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001712.tgz",
      "integrity": "sha512-MBqPpGYYdQ7/hfKiet9SCI+nmN5/hp4ZzveOJubl5DTAMa5oggjAuoi0Z4onBpKPFI2ePGnQuQIzF3VxDjDJig==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ]
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/commander": {
      "version": "13.1.0",
      "resolved": "https://registry.npmjs.org/commander/-/commander-13.1.0.tgz",
      "integrity": "sha512-/rFeCpNJQbhSZjGVwO9RFV3xPqbnERS8MmIQzCtD/zl6gpJuV/bMLuN92oG3F7d8oDEHHRrujSXNUr8fpjntKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/copy-anything": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/copy-anything/-/copy-anything-3.0.5.tgz",
      "integrity": "sha512-yCEafptTtb4bk7GLEQoM8KVJpxAfdBJYaXyzQEgQQQgYrZiDp8SJmGKlYza6CYjEDNstAdNdKA3UuoULlEbS6w==",
      "dependencies": {
        "is-what": "^4.1.8"
      },
      "engines": {
        "node": ">=12.13"
      },
      "funding": {
        "url": "https://github.com/sponsors/mesqueeb"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw=="
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.3.tgz",
      "integrity": "sha512-bwy0MGW55bG41VqxxypOsdSdGqLwXPI/focwgTYCFMbdUiBAxLg9CFzG08sz2aqzknwiX7Hkl0bQENjg8iLByw==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dir-glob": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-type": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.134",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.134.tgz",
      "integrity": "sha512-zSwzrLg3jNP3bwsLqWHmS5z2nIOQ5ngMnfMZOWWtXnqqQkPVyOipxK98w+1beLw1TB+EImPNcG8wVP/cLVs2Og==",
      "dev": true
    },
    "node_modules/email-addresses": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/email-addresses/-/email-addresses-5.0.0.tgz",
      "integrity": "sha512-4OIPYlA6JXqtVn8zpHpGiI7vE6EQOAg16aGnDMIAlZVinnoZ8208tW1hAbjWydgN/4PLTT9q+O1K6AH/vALJGw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.1",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.1.tgz",
      "integrity": "sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/entities": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-4.5.0.tgz",
      "integrity": "sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/esbuild": {
      "version": "0.25.2",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.2.tgz",
      "integrity": "sha512-16854zccKPnC+toMywC+uKNeYSv+/eXkevRAfwRD/G9Cleq66m8XFIrigkbvauLLlCfDL45Q2cWegSg53gGBnQ==",
      "hasInstallScript": true,
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.2",
        "@esbuild/android-arm": "0.25.2",
        "@esbuild/android-arm64": "0.25.2",
        "@esbuild/android-x64": "0.25.2",
        "@esbuild/darwin-arm64": "0.25.2",
        "@esbuild/darwin-x64": "0.25.2",
        "@esbuild/freebsd-arm64": "0.25.2",
        "@esbuild/freebsd-x64": "0.25.2",
        "@esbuild/linux-arm": "0.25.2",
        "@esbuild/linux-arm64": "0.25.2",
        "@esbuild/linux-ia32": "0.25.2",
        "@esbuild/linux-loong64": "0.25.2",
        "@esbuild/linux-mips64el": "0.25.2",
        "@esbuild/linux-ppc64": "0.25.2",
        "@esbuild/linux-riscv64": "0.25.2",
        "@esbuild/linux-s390x": "0.25.2",
        "@esbuild/linux-x64": "0.25.2",
        "@esbuild/netbsd-arm64": "0.25.2",
        "@esbuild/netbsd-x64": "0.25.2",
        "@esbuild/openbsd-arm64": "0.25.2",
        "@esbuild/openbsd-x64": "0.25.2",
        "@esbuild/sunos-x64": "0.25.2",
        "@esbuild/win32-arm64": "0.25.2",
        "@esbuild/win32-ia32": "0.25.2",
        "@esbuild/win32-x64": "0.25.2"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w=="
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/filename-reserved-regex": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/filename-reserved-regex/-/filename-reserved-regex-2.0.0.tgz",
      "integrity": "sha512-lc1bnsSr4L4Bdif8Xb/qrtokGbq5zlsms/CYH8PP+WtCkGNF65DPiQY8vG3SakEdRn8Dlnm+gW/qWKKjS5sZzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/filenamify": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/filenamify/-/filenamify-4.3.0.tgz",
      "integrity": "sha512-hcFKyUG57yWGAzu1CMt/dPzYZuv+jAJUT85bL8mrXvNe6hWj6yEHEc4EdcgiA6Z3oi1/9wXJdZPXF2dZNgwgOg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "filename-reserved-regex": "^2.0.0",
        "strip-outer": "^1.0.1",
        "trim-repeated": "^1.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-cache-dir": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.2.tgz",
      "integrity": "sha512-wXZV5emFEjrridIgED11OoUKLxiYjAcqot/NJdAkOhlJ+vGzwhOAfcG5OX1jP+S0PcjEn8bdMJv+g2jwQ3Onig==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "commondir": "^1.0.1",
        "make-dir": "^3.0.2",
        "pkg-dir": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/avajs/find-cache-dir?sponsor=1"
      }
    },
    "node_modules/find-up": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^5.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/follow-redirects": {
      "version": "1.15.9",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz",
      "integrity": "sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/form-data": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.2.tgz",
      "integrity": "sha512-hGfm/slu0ZabnNt4oaRZ6uREyfCj6P4fT/n6A1rGV+Z0VdGXjfOhVUpkn6qVQONHGIFwmveGXyDs75+nr6FM8w==",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/fs-extra": {
      "version": "11.3.0",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-11.3.0.tgz",
      "integrity": "sha512-Z4XaCL6dUDHfP/jT25jJKMmtxvuwbkrD1vNSMFlo9lNLY2c5FHYSQgHPRZUjAB26TpDEoW9HCOgplrdbaPV/ew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.0",
        "jsonfile": "^6.0.1",
        "universalify": "^2.0.0"
      },
      "engines": {
        "node": ">=14.14"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/gh-pages": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/gh-pages/-/gh-pages-6.3.0.tgz",
      "integrity": "sha512-Ot5lU6jK0Eb+sszG8pciXdjMXdBJ5wODvgjR+imihTqsUWF2K6dJ9HST55lgqcs8wWcw6o6wAsUzfcYRhJPXbA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "async": "^3.2.4",
        "commander": "^13.0.0",
        "email-addresses": "^5.0.0",
        "filenamify": "^4.3.0",
        "find-cache-dir": "^3.3.1",
        "fs-extra": "^11.1.1",
        "globby": "^11.1.0"
      },
      "bin": {
        "gh-pages": "bin/gh-pages.js",
        "gh-pages-clean": "bin/gh-pages-clean.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/globby": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
      "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-union": "^2.1.0",
        "dir-glob": "^3.0.1",
        "fast-glob": "^3.2.9",
        "ignore": "^5.2.0",
        "merge2": "^1.4.1",
        "slash": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ=="
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hookable": {
      "version": "5.5.3",
      "resolved": "https://registry.npmjs.org/hookable/-/hookable-5.5.3.tgz",
      "integrity": "sha512-Yc+BQe8SvoXH1643Qez1zqLRmbA5rCL+sSmk6TVos0LWVfNIB7PGncdlId77WzLGSIB5KaWgTaNTs2lNVEI6VQ=="
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-what": {
      "version": "4.1.16",
      "resolved": "https://registry.npmjs.org/is-what/-/is-what-4.1.16.tgz",
      "integrity": "sha512-ZhMwEosbFJkA0YhFnNDgTM4ZxDRsS6HqTo7qsZM08fehyRYIYa0yHu5R6mgo1n/8MgaPBXiPimPD77baVFYg+A==",
      "engines": {
        "node": ">=12.13"
      },
      "funding": {
        "url": "https://github.com/sponsors/mesqueeb"
      }
    },
    "node_modules/jiti": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
      "integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/jsonfile": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "universalify": "^2.0.0"
      },
      "optionalDependencies": {
        "graceful-fs": "^4.1.6"
      }
    },
    "node_modules/leaflet": {
      "version": "1.9.4",
      "resolved": "https://registry.npmjs.org/leaflet/-/leaflet-1.9.4.tgz",
      "integrity": "sha512-nxS1ynzJOmOlHp+iL3FyWqK89GtNL8U8rvlMOsQdTTssxZwCXh8N2NB3GDQOL+YR3XnWyZAxwQixURb+FA74PA=="
    },
    "node_modules/lightningcss": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.29.2.tgz",
      "integrity": "sha512-6b6gd/RUXKaw5keVdSEtqFVdzWnU5jMxTUjA2bVcMNPLwSQ08Sv/UodBVtETLCn7k4S1Ibxwh7k68IwLZPgKaA==",
      "dependencies": {
        "detect-libc": "^2.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.29.2",
        "lightningcss-darwin-x64": "1.29.2",
        "lightningcss-freebsd-x64": "1.29.2",
        "lightningcss-linux-arm-gnueabihf": "1.29.2",
        "lightningcss-linux-arm64-gnu": "1.29.2",
        "lightningcss-linux-arm64-musl": "1.29.2",
        "lightningcss-linux-x64-gnu": "1.29.2",
        "lightningcss-linux-x64-musl": "1.29.2",
        "lightningcss-win32-arm64-msvc": "1.29.2",
        "lightningcss-win32-x64-msvc": "1.29.2"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.29.2.tgz",
      "integrity": "sha512-cK/eMabSViKn/PG8U/a7aCorpeKLMlK0bQeNHmdb7qUnBkNPnL+oV5DjJUo0kqWsJUapZsM4jCfYItbqBDvlcA==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.29.2.tgz",
      "integrity": "sha512-j5qYxamyQw4kDXX5hnnCKMf3mLlHvG44f24Qyi2965/Ycz829MYqjrVg2H8BidybHBp9kom4D7DR5VqCKDXS0w==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.29.2.tgz",
      "integrity": "sha512-wDk7M2tM78Ii8ek9YjnY8MjV5f5JN2qNVO+/0BAGZRvXKtQrBC4/cn4ssQIpKIPP44YXw6gFdpUF+Ps+RGsCwg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.29.2.tgz",
      "integrity": "sha512-IRUrOrAF2Z+KExdExe3Rz7NSTuuJ2HvCGlMKoquK5pjvo2JY4Rybr+NrKnq0U0hZnx5AnGsuFHjGnNT14w26sg==",
      "cpu": [
        "arm"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.29.2.tgz",
      "integrity": "sha512-KKCpOlmhdjvUTX/mBuaKemp0oeDIBBLFiU5Fnqxh1/DZ4JPZi4evEH7TKoSBFOSOV3J7iEmmBaw/8dpiUvRKlQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.29.2.tgz",
      "integrity": "sha512-Q64eM1bPlOOUgxFmoPUefqzY1yV3ctFPE6d/Vt7WzLW4rKTv7MyYNky+FWxRpLkNASTnKQUaiMJ87zNODIrrKQ==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.29.2.tgz",
      "integrity": "sha512-0v6idDCPG6epLXtBH/RPkHvYx74CVziHo6TMYga8O2EiQApnUPZsbR9nFNrg2cgBzk1AYqEd95TlrsL7nYABQg==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.29.2.tgz",
      "integrity": "sha512-rMpz2yawkgGT8RULc5S4WiZopVMOFWjiItBT7aSfDX4NQav6M44rhn5hjtkKzB+wMTRlLLqxkeYEtQ3dd9696w==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.29.2.tgz",
      "integrity": "sha512-nL7zRW6evGQqYVu/bKGK+zShyz8OVzsCotFgc7judbt6wnB2KbiKKJwBE4SGoDBQ1O94RjW4asrCjQL4i8Fhbw==",
      "cpu": [
        "arm64"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.29.2",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.29.2.tgz",
      "integrity": "sha512-EdIUW3B2vLuHmv7urfzMI/h2fmlnOQBk1xlsDxkN1tCWKjNFjfLhGxYk8C8mzpSfr+A6jFFIi8fU6LbQGsRWjA==",
      "cpu": [
        "x64"
      ],
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/locate-path": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^4.1.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.17",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
      "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0"
      }
    },
    "node_modules/make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "semver": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mitt": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz",
      "integrity": "sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw=="
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/p-limit": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-try": "^2.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^2.2.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-type": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/perfect-debounce": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/perfect-debounce/-/perfect-debounce-1.0.0.tgz",
      "integrity": "sha512-xCy9V055GLEqoFaHoC1SoLIaLmWctgCUaBaWxDZ7/Zx4CTyX7cJQLJOok/orfjZAh9kEYpjJa4d0KcJmCbctZA=="
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pinia": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/pinia/-/pinia-3.0.2.tgz",
      "integrity": "sha512-sH2JK3wNY809JOeiiURUR0wehJ9/gd9qFN2Y828jCbxEzKEmEt0pzCXwqiSTfuRsK9vQsOflSdnbdBOGrhtn+g==",
      "dependencies": {
        "@vue/devtools-api": "^7.7.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/posva"
      },
      "peerDependencies": {
        "typescript": ">=4.4.4",
        "vue": "^2.7.0 || ^3.5.11"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/pkg-dir": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
      "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "find-up": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.3",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.3.tgz",
      "integrity": "sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "nanoid": "^3.3.8",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "dev": true
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rfdc": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/rfdc/-/rfdc-1.4.1.tgz",
      "integrity": "sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA=="
    },
    "node_modules/rollup": {
      "version": "4.39.0",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.39.0.tgz",
      "integrity": "sha512-thI8kNc02yNvnmJp8dr3fNWJ9tCONDhp6TV35X6HkKGGs9E6q7YWCHbe5vKiTa7TAiNcFEmXKj3X/pG2b3ci0g==",
      "dependencies": {
        "@types/estree": "1.0.7"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.39.0",
        "@rollup/rollup-android-arm64": "4.39.0",
        "@rollup/rollup-darwin-arm64": "4.39.0",
        "@rollup/rollup-darwin-x64": "4.39.0",
        "@rollup/rollup-freebsd-arm64": "4.39.0",
        "@rollup/rollup-freebsd-x64": "4.39.0",
        "@rollup/rollup-linux-arm-gnueabihf": "4.39.0",
        "@rollup/rollup-linux-arm-musleabihf": "4.39.0",
        "@rollup/rollup-linux-arm64-gnu": "4.39.0",
        "@rollup/rollup-linux-arm64-musl": "4.39.0",
        "@rollup/rollup-linux-loongarch64-gnu": "4.39.0",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.39.0",
        "@rollup/rollup-linux-riscv64-gnu": "4.39.0",
        "@rollup/rollup-linux-riscv64-musl": "4.39.0",
        "@rollup/rollup-linux-s390x-gnu": "4.39.0",
        "@rollup/rollup-linux-x64-gnu": "4.39.0",
        "@rollup/rollup-linux-x64-musl": "4.39.0",
        "@rollup/rollup-win32-arm64-msvc": "4.39.0",
        "@rollup/rollup-win32-ia32-msvc": "4.39.0",
        "@rollup/rollup-win32-x64-msvc": "4.39.0",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/slash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/speakingurl": {
      "version": "14.0.1",
      "resolved": "https://registry.npmjs.org/speakingurl/-/speakingurl-14.0.1.tgz",
      "integrity": "sha512-1POYv7uv2gXoyGFpBCmpDVSNV74IfsWlDW216UPjbWufNf+bSU6GdbDsxdcxtfwb4xlI3yxzOTKClUosxARYrQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-outer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/strip-outer/-/strip-outer-1.0.1.tgz",
      "integrity": "sha512-k55yxKHwaXnpYGsOzg4Vl8+tDrWylxDEpknGjhTiZB8dFRU5rTo9CAzeycivxV3s+zlTKwrs6WxMxR95n26kwg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "escape-string-regexp": "^1.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/superjson": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/superjson/-/superjson-2.2.2.tgz",
      "integrity": "sha512-5JRxVqC8I8NuOUjzBbvVJAKNM8qoVuH0O77h4WInc/qC2q5IreqKxYwgkga3PfA22OayK2ikceb/B26dztPl+Q==",
      "dependencies": {
        "copy-anything": "^3.0.2"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/tailwindcss": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.3.tgz",
      "integrity": "sha512-2Q+rw9vy1WFXu5cIxlvsabCwhU2qUwodGq03ODhLJ0jW4ek5BUtoCsnLB0qG+m8AHgEsSJcJGDSDe06FXlP74g=="
    },
    "node_modules/tapable": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.1.tgz",
      "integrity": "sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/trim-repeated": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/trim-repeated/-/trim-repeated-1.0.0.tgz",
      "integrity": "sha512-pkonvlKk8/ZuR0D5tLW8ljt5I8kmxp2XKymhepUeOdCEfKpZaktSArkLHZt76OB1ZvO9bssUsDty4SWhLvZpLg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "escape-string-regexp": "^1.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/universalify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 10.0.0"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/vite": {
      "version": "6.2.5",
      "resolved": "https://registry.npmjs.org/vite/-/vite-6.2.5.tgz",
      "integrity": "sha512-j023J/hCAa4pRIUH6J9HemwYfjB5llR2Ps0CWeikOtdR8+pAURAk0DoJC5/mm9kd+UgdnIy7d6HE4EAvlYhPhA==",
      "dependencies": {
        "esbuild": "^0.25.0",
        "postcss": "^8.5.3",
        "rollup": "^4.30.1"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
        "jiti": ">=1.21.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.16.0",
        "tsx": "^4.8.1",
        "yaml": "^2.4.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "jiti": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "tsx": {
          "optional": true
        },
        "yaml": {
          "optional": true
        }
      }
    },
    "node_modules/vue": {
      "version": "3.5.13",
      "resolved": "https://registry.npmjs.org/vue/-/vue-3.5.13.tgz",
      "integrity": "sha512-wmeiSMxkZCSc+PM2w2VRsOYAZC8GdipNFRTsLSfodVqI9mbejKeXEGr8SckuLnrQPGe3oJN5c3K0vpoU9q/wCQ==",
      "dependencies": {
        "@vue/compiler-dom": "3.5.13",
        "@vue/compiler-sfc": "3.5.13",
        "@vue/runtime-dom": "3.5.13",
        "@vue/server-renderer": "3.5.13",
        "@vue/shared": "3.5.13"
      },
      "peerDependencies": {
        "typescript": "*"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/vue-router": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/vue-router/-/vue-router-4.5.0.tgz",
      "integrity": "sha512-HDuk+PuH5monfNuY+ct49mNmkCRK4xJAV9Ts4z9UFc4rzdDnxQLyCMGGc8pKhZhHTVzfanpNwB/lwqevcBwI4w==",
      "dependencies": {
        "@vue/devtools-api": "^6.6.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/posva"
      },
      "peerDependencies": {
        "vue": "^3.2.0"
      }
    },
    "node_modules/vue-router/node_modules/@vue/devtools-api": {
      "version": "6.6.4",
      "resolved": "https://registry.npmjs.org/@vue/devtools-api/-/devtools-api-6.6.4.tgz",
      "integrity": "sha512-sGhTPMuXqZ1rVOk32RylztWkfXTRhuS7vgAKv0zjqk8gbsHkJ7xfFf+jbySxt7tWObEJwyKaHMikV/WGDiQm8g=="
    }
  }
}


================================================================================

Filename: package.json
Content:
{
  "name": "geoguessr",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/vite": "^4.1.3",
    "@types/leaflet": "^1.9.17",
    "axios": "^1.8.4",
    "leaflet": "^1.9.4",
    "pinia": "^3.0.2",
    "tailwindcss": "^4.1.3",
    "vue": "^3.5.13",
    "vue-router": "^4.5.0"
  },
  "devDependencies": {
    "@vitejs/plugin-vue": "^5.2.1",
    "autoprefixer": "^10.4.21",
    "gh-pages": "^6.3.0",
    "vite": "^6.2.0"
  }
}


================================================================================

Filename: public/vite.svg
Content:
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>

================================================================================

Filename: src/App.vue
Content:
<template>
  <div id="app-container" class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <nav class="bg-gradient-to-r from-blue-700 to-indigo-800 p-4 text-white shadow-lg z-30 relative">
      <div class="container mx-auto flex justify-between items-center">
        <router-link to="/"
          class="text-xl font-bold text-white hover:text-yellow-300 transition-colors flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd"
              d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"
              clip-rule="evenodd" />
          </svg>
          TerraQuest
        </router-link>
        <div class="flex items-center">
          <router-link to="/"
            class="mx-3 text-sm lg:text-base hover:text-yellow-300 transition-colors font-medium">Home</router-link>
          <router-link to="/game"
            class="mx-3 text-sm lg:text-base hover:text-yellow-300 transition-colors font-medium">New Game</router-link>
          <!-- Add Leaderboard Link Later -->
          <!-- <router-link to="/leaderboard" class="mx-3 text-sm lg:text-base hover:text-yellow-300 transition-colors font-medium">Leaderboard</router-link> -->

          <!-- Conditional Auth Links -->
          <div class="ml-4 flex items-center">
            <template v-if="!authStore.isAuthenticated">
              <router-link to="/login"
                class="mr-4 text-sm lg:text-base hover:text-yellow-300 transition-colors">Login</router-link>
              <router-link to="/register"
                class="bg-yellow-500 hover:bg-yellow-400 text-gray-900 px-4 py-2 rounded-md shadow-md hover:shadow-lg transition-all text-sm font-semibold">
                Sign Up
              </router-link>
            </template>
            <template v-else>
              <div class="relative group">
                <button class="mr-4 flex items-center text-sm lg:text-base hover:text-yellow-300 focus:outline-none">
                  <span class="mr-1">{{ authStore.userProfile?.username || 'User' }}</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </button>
                <div
                  class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 invisible group-hover:visible opacity-0 group-hover:opacity-100 transition-all duration-300 ease-in-out"
                  onmouseleave="setTimeout(() => this.classList.remove('visible'), 200)">
                  <router-link to="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Your
                    Profile</router-link>
                  <button @click="handleLogout"
                    class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-100">
                    Sign out
                  </button>
                </div>
              </div>
            </template>
          </div>
        </div>
      </div>
    </nav>

    <main class="container mx-auto px-4 py-6">
      <router-view />
    </main>

    <footer class="bg-gray-800 text-white mt-auto py-6">
      <div class="container mx-auto px-4 text-center">
        <p class="text-sm">© 2025 TerraQuest - Test your geography knowledge!</p>
      </div>
    </footer>
  </div>
</template>

<script setup>
import { onMounted } from 'vue';
import { useGameStore } from './stores/GameStore'; // Import the store
import { useAuthStore } from './stores/AuthStore'; // Import the auth store
import { useRouter } from 'vue-router';

const gameStore = useGameStore(); // Get store instance
const authStore = useAuthStore(); // Get auth store instance
const router = useRouter();

// Function to load the Google Maps script
const loadGoogleMapsScript = () => {
  const apiKey = import.meta.env.VITE_GOOGLE_MAPS_API_KEY;
  if (!apiKey) {
    console.error("VITE_GOOGLE_MAPS_API_KEY not found.");
    gameStore.setMapsApiReady(false); // Explicitly set to false on error
    return;
  }

  // Define the global callback function
  window.initMap = () => {
    console.log("Google Maps API loaded via dynamic script (Callback executed).");
    gameStore.setMapsApiReady(true); // <<< UPDATE STORE STATE
    // delete window.initMap; // Optional cleanup
  };

  // Check if script already exists
  if (document.getElementById('google-maps-script')) {
    // If script tag exists, check if API object is also ready
    if (window.google && window.google.maps) {
      if (!gameStore.isMapsApiReady) { // Update store if somehow missed callback
        gameStore.setMapsApiReady(true);
      }
    }
    return; // Don't add script again
  }

  const script = document.createElement('script');
  script.id = 'google-maps-script';
  // Use loading=async if supported, or just async/defer
  script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap&loading=async`;
  script.async = true;
  script.defer = true;
  script.onerror = () => {
    console.error("Failed to load Google Maps script.");
    gameStore.setMapsApiReady(false); // Set to false on load error
  };
  document.head.appendChild(script);
};

onMounted(() => {
  // Ensure store state reflects reality on mount, in case of hot reload etc.
  if (window.google && window.google.maps) {
    gameStore.setMapsApiReady(true);
  } else {
    loadGoogleMapsScript();
  }
});

const handleLogout = () => {
  authStore.logout();
  router.push('/login'); // Redirect after logout
};

onMounted(() => {
  // Initialize auth state (check localStorage)
  authStore.initializeAuth(); // <<< Initialize auth

  // Load Maps API
  if (window.google && window.google.maps) {
    gameStore.setMapsApiReady(true);
  } else {
    loadGoogleMapsScript();
  }
});
</script>

<style>
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

:root {
  --primary-color: #3B82F6;
  --secondary-color: #6366F1;
  --accent-color: #EAB308;
  --text-color: #1F2937;
  --bg-color: #F9FAFB;
}

body {
  font-family: 'Poppins', sans-serif;
  color: var(--text-color);
  background-color: var(--bg-color);
}

#app-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

main {
  flex: 1;
}

/* Smooth transitions */
.page-enter-active,
.page-leave-active {
  transition: opacity 0.3s ease;
}

.page-enter-from,
.page-leave-to {
  opacity: 0;
}

/* Button styling */
button.btn {
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-weight: 500;
  transition: all 0.2s;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

button.btn:hover {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

button.btn-primary {
  background-color: #2563EB;
  color: white;
}

button.btn-primary:hover {
  background-color: #1D4ED8;
}

button.btn-secondary {
  background-color: #4F46E5;
  color: white;
}

button.btn-secondary:hover {
  background-color: #4338CA;
}

button.btn-accent {
  background-color: #EAB308;
  color: #1F2937;
}

button.btn-accent:hover {
  background-color: #FACC15;
}

button.btn-danger {
  background-color: #DC2626;
  color: white;
}

button.btn-danger:hover {
  background-color: #B91C1C;
}

/* Form styling */
.form-input {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border-radius: 0.375rem;
  border: 1px solid #D1D5DB;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

.form-input:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
  border-color: transparent;
}

.form-label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  color: #374151;
  margin-bottom: 0.25rem;
}
</style>

================================================================================

Filename: src/assets/vue.svg
Content:
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="37.07" height="36" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 198"><path fill="#41B883" d="M204.8 0H256L128 220.8L0 0h97.92L128 51.2L157.44 0h47.36Z"></path><path fill="#41B883" d="m0 0l128 220.8L256 0h-51.2L128 132.48L50.56 0H0Z"></path><path fill="#35495E" d="M50.56 0L128 133.12L204.8 0h-47.36L128 51.2L97.92 0H50.56Z"></path></svg>

================================================================================

Filename: src/components/MapDisplay.vue
Content:
<!-- src/components/MapDisplay.vue -->
<template>
    <div ref="mapContainerRef" class="w-full h-full z-0 bg-gray-200">
        <!-- Map renders here -->
    </div>
</template>

<script setup>
import { ref, onMounted, onBeforeUnmount, watch } from 'vue';
import L from 'leaflet';

const props = defineProps({
    roundActive: { // Is guessing currently allowed?
        type: Boolean,
        required: true,
    },
    submitted: { // Has the guess for the *current* round been submitted?
        type: Boolean,
        required: true,
    },
    actualLocation: { // { lat, lng } - Provided ONLY after submission
        type: Object,
        default: null,
    },
    guessLocation: { // { lat, lng } - Provided ONLY after submission
        type: Object,
        default: null,
    }
});

const emit = defineEmits(['guess-made']);

const mapContainerRef = ref(null);
let map = null;
let guessMarker = null;
let actualMarker = null;
let resultLine = null;

function initializeMap() {
    if (!mapContainerRef.value || map) return; // Prevent re-init

    map = L.map(mapContainerRef.value, {
        // Prefer loading state over default view for cleaner look
    }).setView([20, 0], 2);

    L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
        subdomains: 'abcd',
        maxZoom: 10,
        minZoom: 1
    }).addTo(map);

    // Click listener (only active when round is active)
    map.on('click', handleMapClick);
}

function handleMapClick(e) {
    // Only allow placing/moving marker if round is active and not yet submitted
    if (props.roundActive && !props.submitted) {
        const coordinates = e.latlng;
        updateGuessMarker(coordinates);
        emit('guess-made', { lat: coordinates.lat, lng: coordinates.lng });
    }
}

function updateGuessMarker(coordinates) {
    if (!map) return;
    if (!guessMarker) {
        // Use a different color/icon for guess marker?
        guessMarker = L.marker(coordinates, { draggable: false }).addTo(map)
            .bindPopup("Your Guess");
    } else {
        guessMarker.setLatLng(coordinates);
    }
    guessMarker.openPopup();
    // Optional: Pan map to marker
    // map.panTo(coordinates);
}

function showResults() {
    if (!map || !props.actualLocation || !props.guessLocation) return;

    // console.log("MapDisplay: Showing results", props.guessLocation, props.actualLocation);

    // Ensure guess marker is at the final guess location
    updateGuessMarker(props.guessLocation);
    if (guessMarker) guessMarker.closePopup(); // Close popup initially

    // Add actual location marker (different style)
    if (!actualMarker) {
        const actualIcon = L.icon({ // Example custom icon
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        actualMarker = L.marker([props.actualLocation.lat, props.actualLocation.lng], { icon: actualIcon }).addTo(map)
            .bindPopup("Actual Location");
    } else {
        actualMarker.setLatLng([props.actualLocation.lat, props.actualLocation.lng]);
    }
    actualMarker.openPopup();

    // Draw line between guess and actual
    if (!resultLine) {
        resultLine = L.polyline([
            [props.guessLocation.lat, props.guessLocation.lng],
            [props.actualLocation.lat, props.actualLocation.lng]
        ], { color: 'red', weight: 3 }).addTo(map);
    } else {
        resultLine.setLatLngs([
            [props.guessLocation.lat, props.guessLocation.lng],
            [props.actualLocation.lat, props.actualLocation.lng]
        ]);
    }

    // Fit map view to show both markers with adequate padding and animation
    map.flyToBounds(L.latLngBounds([
        [props.guessLocation.lat, props.guessLocation.lng],
        [props.actualLocation.lat, props.actualLocation.lng]
    ]), {
        padding: [100, 100],  // More padding for fullscreen view
        duration: 1,          // Animation duration in seconds
        easeLinearity: 0.5    // Smoother animation
    });

    // Force a map resize after a short delay to ensure it fills its container
    setTimeout(() => {
        if (map) {
            map.invalidateSize();
        }
    }, 300);
}

function clearMapFeatures() {
    // console.log("MapDisplay: Clearing markers and lines.");
    if (!map) return;
    if (guessMarker) {
        map.removeLayer(guessMarker);
        guessMarker = null;
    }
    if (actualMarker) {
        map.removeLayer(actualMarker);
        actualMarker = null;
    }
    if (resultLine) {
        map.removeLayer(resultLine);
        resultLine = null;
    }
}

function resetMapState() {
    clearMapFeatures();
    if (map) map.flyTo([20, 0], 2); // Reset view gently
}

// Expose the reset function so parent can call it before next round
defineExpose({ resetMapState });

function handleResize() {
    if (map) {
        map.invalidateSize();

        // If results are showing, refit bounds
        if (props.submitted && props.actualLocation && props.guessLocation) {
            map.fitBounds(L.latLngBounds([
                [props.guessLocation.lat, props.guessLocation.lng],
                [props.actualLocation.lat, props.actualLocation.lng]
            ]), { padding: [100, 100] });
        }
    }
}

// --- Watchers ---
watch(() => props.submitted, (isSubmitted) => {
    if (isSubmitted && props.actualLocation && props.guessLocation) {
        showResults();
    }
});

// Watch for round becoming active again (implies a new round)
// This might be redundant if parent calls resetMapState explicitly
// watch(() => props.roundActive, (isActive) => {
//     if (isActive) {
//         // If becomes active, assume it's a new round, reset the visuals
//         // Ensure this doesn't clear a marker placed in the *same* active round
//         // Explicit resetMapState call from parent is likely safer
//     }
// });


// --- Lifecycle ---
onMounted(() => {
    // Delay initialization slightly to ensure container is ready
    // requestAnimationFrame or setTimeout can help sometimes
    setTimeout(() => {
        initializeMap();
        // If component mounts into an already submitted state (e.g. page refresh mid-game)
        if (props.submitted && props.actualLocation && props.guessLocation) {
            showResults();
        }

        // Add resize event listener to ensure map fills container after size changes
        window.addEventListener('resize', handleResize);
    }, 50); // Short delay
});

onBeforeUnmount(() => {
    window.removeEventListener('resize', handleResize);
    if (map) {
        map.remove();
        map = null;
    }
});

</script>

<style>
/* Ensure Leaflet's CSS is loaded */
/* @import 'leaflet/dist/leaflet.css'; */

.leaflet-container {
    height: 100%;
    width: 100%;
    background-color: #e5e7eb;
    /* Tailwind gray-200 */
}

.leaflet-control-attribution a {
    /* Improve readability */
    color: #374151;
    /* Tailwind gray-700 */
}
</style>

================================================================================

Filename: src/components/MultiplayerResults.vue
Content:
<template>
  <div class="bg-white dark:bg-gray-700 rounded-lg shadow-md p-6">
    <h2 class="text-2xl font-bold text-center mb-6 text-gray-800 dark:text-white">Game Results</h2>
    
    <!-- Final Standings -->
    <div class="mb-8">
      <h3 class="text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200">Final Standings</h3>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-600">
          <thead class="bg-gray-50 dark:bg-gray-800">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Rank</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Player</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Total Score</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Best Round</th>
            </tr>
          </thead>
          <tbody class="bg-white dark:bg-gray-700 divide-y divide-gray-200 dark:divide-gray-600">
            <tr v-for="(player, index) in sortedPlayers" :key="player.userId" 
              :class="{'bg-yellow-50 dark:bg-yellow-900/20': isCurrentUser(player.userId)}">
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                {{ index + 1 }}
                <span v-if="index === 0" class="ml-1">🏆</span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-200">
                <div class="flex items-center">
                  <div class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center text-white font-bold">
                    {{ player.username.charAt(0).toUpperCase() }}
                  </div>
                  <span class="ml-2">{{ player.username }}</span>
                  <span v-if="isCurrentUser(player.userId)" class="ml-2 text-xs text-blue-600 dark:text-blue-400">(You)</span>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
                {{ getPlayerTotalScore(player.userId) }}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
                {{ getBestRoundScore(player.userId) }}
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    
    <!-- Round by Round -->
    <div>
      <h3 class="text-xl font-semibold mb-4 text-gray-700 dark:text-gray-200">Round by Round</h3>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-600">
          <thead class="bg-gray-50 dark:bg-gray-800">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Player</th>
              <th v-for="round in roundNumbers" :key="round" scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                Round {{ round }}
              </th>
            </tr>
          </thead>
          <tbody class="bg-white dark:bg-gray-700 divide-y divide-gray-200 dark:divide-gray-600">
            <tr v-for="player in sortedPlayers" :key="player.userId" 
              :class="{'bg-yellow-50 dark:bg-yellow-900/20': isCurrentUser(player.userId)}">
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                {{ player.username }}
              </td>
              <td v-for="round in roundNumbers" :key="round" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
                {{ getRoundScore(player.userId, round - 1) }}
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
    
    <!-- Action Buttons -->
    <div class="mt-8 flex justify-center space-x-4">
      <button @click="playAgain" class="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-md">
        Play Again
      </button>
      <button @click="returnHome" class="px-6 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg shadow-md">
        Return to Home
      </button>
    </div>
  </div>
</template>

<script setup>
import { computed } from 'vue';
import { useRouter } from 'vue-router';
import { useMultiplayerStore } from '../stores/MultiplayerStore';
import { useGameStore } from '../stores/GameStore';
import { useAuthStore } from '../stores/AuthStore';

const router = useRouter();
const multiplayerStore = useMultiplayerStore();
const gameStore = useGameStore();
const authStore = useAuthStore();

// Get round numbers (1-based)
const roundNumbers = computed(() => {
  const rounds = [];
  for (let i = 1; i <= gameStore.MAX_ROUNDS; i++) {
    rounds.push(i);
  }
  return rounds;
});

// Sort players by total score (descending)
const sortedPlayers = computed(() => {
  return [...multiplayerStore.players].sort((a, b) => {
    return getPlayerTotalScore(b.userId) - getPlayerTotalScore(a.userId);
  });
});

// Check if player is the current user
function isCurrentUser(userId) {
  return userId === authStore.userProfile?.id;
}

// Get player's score for a specific round (0-based round index)
function getRoundScore(userId, roundIndex) {
  const results = multiplayerStore.playerResults[userId];
  if (!results || !results[roundIndex]) return '-';
  return results[roundIndex].score || 0;
}

// Get player's total score
function getPlayerTotalScore(userId) {
  const results = multiplayerStore.playerResults[userId];
  if (!results) return 0;
  
  let total = 0;
  for (const round of results) {
    if (round && round.score) {
      total += round.score;
    }
  }
  return total;
}

// Get player's best round score
function getBestRoundScore(userId) {
  const results = multiplayerStore.playerResults[userId];
  if (!results) return 0;
  
  let best = 0;
  for (const round of results) {
    if (round && round.score && round.score > best) {
      best = round.score;
    }
  }
  return best;
}

// Play again handler
function playAgain() {
  // Return to lobby
  router.push('/multiplayer/lobby');
}

// Return to home handler
function returnHome() {
  multiplayerStore.leaveGame();
  router.push('/');
}
</script> 

================================================================================

Filename: src/components/RoundResult.vue
Content:
<template>
  <div class="round-result">
    <h3 class="text-xl font-bold mb-4">Round {{ result?.roundNumber || currentRound }} Results</h3>
    
    <div class="stats grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
      <div class="stat bg-white dark:bg-gray-700 p-4 rounded-lg shadow">
        <div class="stat-title text-sm text-gray-500 dark:text-gray-400">Distance</div>
        <div class="stat-value text-xl">{{ formatDistance(result?.distanceKm || 0) }}</div>
      </div>
      
      <div class="stat bg-white dark:bg-gray-700 p-4 rounded-lg shadow">
        <div class="stat-title text-sm text-gray-500 dark:text-gray-400">Score</div>
        <div class="stat-value text-xl">{{ result?.score || 0 }} points</div>
      </div>
    </div>
    
    <div class="mb-6">
      <div class="flex items-center mb-2">
        <div class="w-3 h-3 rounded-full bg-red-500 mr-2"></div>
        <span class="text-sm">Your guess</span>
      </div>
      <div class="flex items-center">
        <div class="w-3 h-3 rounded-full bg-green-500 mr-2"></div>
        <span class="text-sm">Actual location</span>
      </div>
    </div>
    
    <div class="result-map h-72 bg-gray-200 dark:bg-gray-600 rounded-lg mb-6 flex items-center justify-center">
      <p class="text-gray-500 dark:text-gray-400 text-sm">Map preview would go here</p>
    </div>
    
    <div class="text-center" v-if="showNextButton">
      <button 
        @click="$emit('next-round')" 
        class="px-6 py-2 bg-blue-600 text-white rounded-md shadow-md hover:bg-blue-700"
      >
        Next Round
      </button>
    </div>
  </div>
</template>

<script setup>
import { computed } from 'vue';

// Define props
const props = defineProps({
  result: {
    type: Object,
    default: () => ({
      roundNumber: 1,
      distanceKm: 0,
      score: 0,
      guessLat: 0,
      guessLng: 0,
      actualLat: 0,
      actualLng: 0
    })
  },
  currentRound: {
    type: Number,
    default: 1
  },
  showNextButton: {
    type: Boolean,
    default: false
  }
});

// Define emits
defineEmits(['next-round']);

// Format distance to be more readable
const formatDistance = (km) => {
  if (km < 1) {
    return `${(km * 1000).toFixed(0)} m`;
  }
  return `${km.toFixed(1)} km`;
};
</script>

<style scoped>
.round-result {
  padding: 1rem;
  background-color: #f8f9fa;
  border-radius: 0.5rem;
}

.dark .round-result {
  background-color: #374151;
  color: #e5e7eb;
}
</style> 

================================================================================

Filename: src/components/StreetViewDisplay.vue
Content:
<!-- src/components/StreetViewDisplay.vue -->
<template>
  <!-- REMOVED h-[50vh] class here, parent controls size -->
  <div ref="panoRef" class="w-full h-full bg-gray-300">
    <!-- Added loading/error state placeholder -->
    <div v-if="isLoading" class="flex items-center justify-center h-full text-gray-500">Initializing Street View...</div>
     <div v-if="loadError" class="flex items-center justify-center h-full text-red-500 p-4 text-center">Street View not available for this location.</div>
  </div>
</template>

<script setup>
import { ref, onMounted, onUnmounted, watch, nextTick } from 'vue'; // Added nextTick

const props = defineProps({
  location: { // Expect an object like { lat: Number, lng: Number } or null
    type: Object,
    default: null,
    // Make required false if it can be null initially before game starts
    // required: true
  }
});

const panoRef = ref(null);
let panorama = null; // The StreetViewPanorama instance
let service = null;  // The StreetViewService instance
const isLoading = ref(false);
const loadError = ref(false);
let observer = null; // ResizeObserver
let initAttempts = 0;
const MAX_INIT_ATTEMPTS = 3;

// --- Core Initialization/Update Logic ---
async function setupStreetView() {
    // 0. Reset state
    isLoading.value = true;
    loadError.value = false;
    initAttempts = 0;
    // console.log("StreetView: Attempting setup for", props.location);

    // 1. Wait for DOM element and valid location prop
    if (!panoRef.value || !props.location || typeof props.location.lat !== 'number') {
        // console.warn("StreetView: Setup aborted - Container or location invalid.", { el: !!panoRef.value, loc: props.location });
        isLoading.value = false;
        // Don't set loadError yet, might just be waiting for props
        return;
    }

    // 2. Wait for Google Maps API (with retry)
    if (!(await ensureMapsApiReady(100))) { // Wait up to 100ms initially
        // console.error("StreetView: Google Maps API did not become ready.");
        isLoading.value = false;
        loadError.value = true; // Set error if API never loads
        return;
    }

    // 3. Initialize Service if needed
    if (!service) {
        service = new google.maps.StreetViewService();
    }

    // 4. Check Panorama Availability
    service.getPanorama(
        { location: props.location, radius: 50, source: google.maps.StreetViewSource.OUTDOOR },
        handlePanoramaCheckResult
    );
}

function handlePanoramaCheckResult(data, status) {
    if (status === google.maps.StreetViewStatus.OK) {
        // // console.log("StreetView: Panorama found via Service. Proceeding to display.");
        displayPanorama(data.location.pano); // Pass Pano ID
    } else {
        console.error(`StreetView: Panorama check failed for location ${JSON.stringify(props.location)} - Status: ${status}`);
        isLoading.value = false;
        loadError.value = true;
        if (panorama) panorama.setVisible(false);
        // Optional: Trigger something in parent to get a new location?
    }
}

function displayPanorama(panoId) {
     if (!panoRef.value || !window.google || !window.google.maps) {
         console.error("StreetView: Cannot display panorama, context lost.");
         isLoading.value = false;
         loadError.value = true;
         return;
     }

     if (!panorama) {
        // Create panorama instance ONLY if it doesn't exist
        // console.log("StreetView: Creating new Panorama instance.");
        panorama = new google.maps.StreetViewPanorama(
            panoRef.value, {
                pov: { heading: 34, pitch: 10 }, // Default starting view
                zoom: 0, // Start slightly zoomed out

                addressControl: false,      // <<< HIDE address text
                linksControl: true,         // <<< HIDE navigation arrows
                panControl: true,           // Keep pan control (mouse drag)
                zoomControl: false,         // <<< HIDE zoom buttons
                scrollwheel: true,         // Allow zooming with scroll
                clickToGo: true,           // <<< DISABLE double-click to move

                enableCloseButton: false,    // Should already be false
                fullscreenControl: false,   // <<< HIDE fullscreen button
                motionTracking: false,       // Usually off for desktop
                motionTrackingControl: false,
                showRoadLabels: false
            }
        );
        setupResizeObserver(); // Set up observer when instance is created
     }

    // Set the specific panorama
    // console.log(`StreetView: Setting pano ID: ${panoId}`);
    panorama.setPano(panoId);
    // Set POV *after* setting pano might be more reliable
    panorama.setPov({ heading: 34, pitch: 10 });
    panorama.setVisible(true);

    isLoading.value = false;
    loadError.value = false;
}


// --- Helper Functions ---
async function ensureMapsApiReady(initialDelay = 0, retryDelay = 50, maxRetries = 5) {
    if (window.google && window.google.maps) return true;

    if (initialDelay > 0) {
        await new Promise(resolve => setTimeout(resolve, initialDelay));
        if (window.google && window.google.maps) return true;
    }

    for (let i = 0; i < maxRetries; i++) {
        console.warn(`StreetView: Maps API not ready, retrying (${i+1}/${maxRetries})...`);
        await new Promise(resolve => setTimeout(resolve, retryDelay));
        if (window.google && window.google.maps) return true;
    }
    return false;
}

function setupResizeObserver() {
    if (!panoRef.value || observer) return; // Don't setup if no element or already observing
    observer = new ResizeObserver(() => {
        if (panorama && window.google && window.google.maps) {
            // Use nextTick to ensure DOM updates are flushed before triggering resize
            nextTick(() => {
                google.maps.event.trigger(panorama, 'resize');
                 // console.log("StreetView: Triggered resize."); // Debug logging
            });
        }
    });
    observer.observe(panoRef.value);
    // console.log("StreetView: Resize observer attached.");
}

function disconnectObserver() {
     if (observer && panoRef.value) {
        observer.unobserve(panoRef.value);
        // console.log("StreetView: Resize observer detached.");
     }
     observer = null;
}

// --- Lifecycle Hooks ---
onMounted(async () => {
  // console.log("StreetView: Mounted.");
  // Wait briefly for component to settle and API script loading (started in App.vue) to potentially complete
  await nextTick(); // Wait for Vue's next DOM update cycle
  // Don't initialize immediately, wait for the location prop watch to trigger the first setup
  // setupStreetView(); // Let the watcher handle the first valid location
});

onUnmounted(() => {
  // console.log("StreetView: Unmounted.");
  disconnectObserver();
  // Clean up panorama instance? Should be garbage collected, but can be explicit:
  if (panorama && panorama.setVisible) {
      panorama.setVisible(false);
  }
  panorama = null;
  service = null;
});

// --- Watchers ---
watch(() => props.location, async (newLocation, oldLocation) => {
    // Use nextTick to ensure the DOM (panoRef) is definitely ready after prop change causes re-render
    await nextTick();

    if (newLocation && (!oldLocation || newLocation.lat !== oldLocation.lat || newLocation.lng !== oldLocation.lng)) {
        // console.log("StreetView: Location prop changed.", { new: newLocation });
        // Always attempt a fresh setup when location fundamentally changes
        await setupStreetView();

    } else if (!newLocation && panorama) {
        // If location becomes null, hide the panorama
        // console.log("StreetView: Location became null, hiding panorama.");
        isLoading.value = false;
        loadError.value = false;
        panorama.setVisible(false);
    }
}, { deep: true, immediate: true }); // Use immediate: true to run watcher on mount if prop starts non-null

</script>

<style scoped>
/* Parent controls size via flex */
</style>

================================================================================

Filename: src/main.js
Content:
// src/main.js (updated)
import { createApp } from 'vue'
import { createPinia } from 'pinia'
import router from './router' // Import the router
import './style.css'
import App from './App.vue'

const pinia = createPinia()
const app = createApp(App)

app.use(pinia)
app.use(router) // Use the router

app.mount('#app')

================================================================================

Filename: src/router/index.js
Content:
// src/router/index.js
import { createRouter, createWebHistory } from 'vue-router'
import HomeView from '../views/HomeView.vue'
import GameView from '../views/GameView.vue'
import LoginView from '../views/LoginView.vue';     // <<< Import LoginView
import RegisterView from '../views/RegisterView.vue';
import ProfileView from '../views/ProfileView.vue'
import { useAuthStore } from '../stores/AuthStore';

// Import multiplayer views
import MultiplayerLobby from '../views/MultiplayerLobby.vue'
import CreateMultiplayerGame from '../views/CreateMultiplayerGame.vue'
import JoinGame from '../views/JoinGame.vue'
import MultiplayerGame from '../views/MultiplayerGame.vue'

const routes = [
  { path: '/', name: 'Home', component: HomeView },
  { path: '/game', name: 'Game', component: GameView, meta: { requiresAuth: true } }, // <<< Mark as requiresAuth
  { path: '/login', name: 'Login', component: LoginView, meta: { guestOnly: true } },     // <<< Add Login route
  { path: '/register', name: 'Register', component: RegisterView, meta: { guestOnly: true } }, // <<< Add Register route
  { path: '/profile', name: 'Profile', component: ProfileView, meta: { requiresAuth: true } },
  // Add routes for Leaderboard later (likely require auth)
  // { path: '/leaderboard', name: 'Leaderboard', component: LeaderboardView },
  
  // Multiplayer routes
  { 
    path: '/multiplayer/create', 
    name: 'CreateMultiplayerGame', 
    component: CreateMultiplayerGame, 
    meta: { requiresAuth: true } 
  },
  { 
    path: '/multiplayer/join', 
    name: 'JoinGame', 
    component: JoinGame, 
    meta: { requiresAuth: true } 
  },
  { 
    path: '/multiplayer/lobby', 
    name: 'MultiplayerLobby', 
    component: MultiplayerLobby, 
    meta: { requiresAuth: true } 
  },
  { 
    path: '/multiplayer/game', 
    name: 'MultiplayerGame', 
    component: MultiplayerGame, 
    meta: { requiresAuth: true } 
  }
];

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes
});

// --- Navigation Guards ---
// Setup guards *after* router is created and *before* it's exported
// IMPORTANT: Accessing store here can be tricky if app hasn't fully mounted.
// A common pattern is to initialize the store check inside beforeEach.
router.beforeEach((to, from, next) => {
  // Ensure store is accessible - this assumes main.js runs before routing kicks in fully
  // It's generally better to initialize auth state (check localStorage) in App.vue or main.js
  // and then trust the store's `isAuthenticated` getter here.
  const authStore = useAuthStore(); // Get store instance inside guard
  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);
  const guestOnly = to.matched.some(record => record.meta.guestOnly);
  const isAuthenticated = authStore.isAuthenticated; // Read current state

  // console.log(`Routing to: ${to.path}, RequiresAuth: ${requiresAuth}, GuestOnly: ${guestOnly}, IsAuthenticated: ${isAuthenticated}`); // Debug log

  if (requiresAuth && !isAuthenticated) {
    // Redirect to login if trying to access protected route without auth
    console.log('Redirecting to /login (auth required)');
    next({ name: 'Login' });
  } else if (guestOnly && isAuthenticated) {
    // Redirect away from login/register if already logged in
    console.log('Redirecting to / (already authenticated)');
    next({ name: 'Home' }); // Or '/game'
  } else {
    // Allow navigation
    next();
  }
});

export default router;

================================================================================

Filename: src/services/authService.js
Content:
// src/services/authService.js
import axios from 'axios';

const baseUrl = `${import.meta.env.VITE_BACKEND_URL}`;

const apiClient = axios.create({
    baseURL: `${baseUrl}/api/v1/auth`,
    headers: {
        'Content-Type': 'application/json',
    },
    // Add CORS configuration
    withCredentials: true,
    credentials: 'include'
});

// Optional: Add interceptors similar to gameService if needed (e.g., for logging)
apiClient.interceptors.response.use(
    (response) => response,
    (error) => {
        console.error('Auth API Error:', error.response?.status, error.response?.data || error.message);
        // Return a structured error or just re-throw
        return Promise.reject(error.response?.data || { error: error.message }); // Return backend error message if available
    }
);


export default {
    /**
     * Registers a new user.
     * @param {object} userData - { username, email, password }
     * @returns {Promise<object>} - Promise resolving with backend response data on success.
     */
    async register(userData) {
        // try/catch is handled by the interceptor or the calling action
        const response = await apiClient.post('/register', userData);
        return response.data; // contains { message, user: { id, username, email } }
    },

    /**
     * Logs in a user.
     * @param {object} credentials - { email, password }
     * @returns {Promise<object>} - Promise resolving with backend response data on success.
     */
    async login(credentials) {
        // try/catch is handled by the interceptor or the calling action
        const response = await apiClient.post('/login', credentials);
        return response.data; // contains { message, token, user: { id, username, email } }
    },

    // Optional: Add a function to validate token/get profile later
    // async getProfile(token) { ... }
};

================================================================================

Filename: src/services/gameService.js
Content:
import axios from 'axios';
import { useAuthStore } from '../stores/AuthStore';

const baseUrl = `${import.meta.env.VITE_BACKEND_URL}`;

const apiClient = axios.create({
  baseURL: `${baseUrl}/api/v1`,
  headers: {
    'Content-Type': 'application/json',
  },
  // Add CORS configuration
  withCredentials: true,
  credentials: 'include'
});

// Interceptors (Optional but useful for centralized logging/error handling)
apiClient.interceptors.request.use(
  (config) => {
    // --- Add Auth Token ---
    const authStore = useAuthStore(); // Get store instance
    const token = authStore.authToken; // Use getter
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
      console.log('Attaching Auth Token to request');
    }
    // ----------------------
    console.log('Starting API Request:', config.method.toUpperCase(), config.url, config.params || '');
    return config;
  },
  (error) => {
    console.error('API Request Error:', error);
    return Promise.reject(error);
  }
);

apiClient.interceptors.response.use(
  (response) => {
    console.log('API Response Status:', response.status, response.config.url);
    return response; // Pass through successful responses
  },
  (error) => {
    console.error('API Response Error:', error.response?.status, error.response?.data || error.message);
    // Handle common errors centrally if needed (e.g., 401 Unauthorized -> redirect to login)
    return Promise.reject(error); // Pass through errors
  }
);


// Define API functions
export default {
  /**
   * Starts a new game by fetching random locations from the backend.
   * @param {number} [rounds=5] - Optional number of rounds to request.
   * @returns {Promise<object>} - Promise resolving with { gameId: string, locations: Array<{id: number, lat: number, lng: number}> }
   */
  async startGame(rounds = 5) {
    try {
      const response = await apiClient.get('/game/start', {
        params: { rounds } // Send 'rounds' as a query parameter
      });
      // Axios automatically parses JSON, response.data contains the body
      return response.data;
    } catch (error) {
      // Logged by interceptor, re-throw to be handled by caller (Pinia store)
      console.error('Error in gameService.startGame:', error);
      throw error; // Re-throw the error so the calling action knows it failed
    }
  },

  // Add other game-related API calls here later
  // async submitGuess(gameId, roundData) { ... }
  // async getGameResults(gameId) { ... }
};

================================================================================

Filename: src/stores/AuthStore.js
Content:
// src/stores/authStore.js
import { defineStore } from 'pinia';
import { ref, computed } from 'vue';
import authService from '../services/authService'; // Adjust path if needed

export const useAuthStore = defineStore('auth', () => {
    // --- State ---
    const token = ref(localStorage.getItem('authToken') || null); // Load token from storage on init
    const user = ref(JSON.parse(localStorage.getItem('authUser') || 'null')); // Load user info
    const authError = ref(null);
    const isLoading = ref(false);

    // --- Getters ---
    const isAuthenticated = computed(() => !!token.value && !!user.value); // Simple check
    const userProfile = computed(() => user.value);
    const authToken = computed(() => token.value); // Getter for the token

    // --- Actions ---
    function setToken(newToken) {
        token.value = newToken;
        if (newToken) {
            localStorage.setItem('authToken', newToken);
        } else {
            localStorage.removeItem('authToken');
        }
    }

    function setUser(newUser) {
        user.value = newUser;
        if (newUser) {
            localStorage.setItem('authUser', JSON.stringify(newUser));
        } else {
            localStorage.removeItem('authUser');
        }
    }

    function setError(errorMessage) {
        authError.value = errorMessage;
    }

    function clearError() {
        authError.value = null;
    }

    async function register(userData) {
        isLoading.value = true;
        clearError();
        try {
            const response = await authService.register(userData);
            console.log('Registration Response:', response);
            // Registration successful, but don't log in automatically here
            // Let the user log in manually for now
            isLoading.value = false;
            return true; // Indicate success
        } catch (error) {
            console.error('Registration failed:', error);
            setError(error?.error || 'Registration failed. Please try again.'); // Use error from backend if available
            isLoading.value = false;
            return false; // Indicate failure
        }
    }

    async function login(credentials) {
        isLoading.value = true;
        clearError();
        try {
            const response = await authService.login(credentials);
            // console.log('Login Response:', response);
            if (!response.token || !response.user) {
                throw new Error("Invalid response from server during login.");
            }
            setToken(response.token);
            setUser(response.user); // Store basic user info returned from login
            isLoading.value = false;
            return true; // Indicate success
        } catch (error) {
            console.error('Login failed:', error);
            setError(error?.error || 'Login failed. Please check your credentials.'); // Use error from backend if available
            setToken(null); // Clear any stale token/user
            setUser(null);
            isLoading.value = false;
            return false; // Indicate failure
        }
    }

    function logout() {
        console.log('Logging out...');
        setToken(null);
        setUser(null);
        clearError();
        // Optionally redirect using router instance if needed, or handle in component
        // router.push('/login');
    }

    // Optional: Action to potentially refresh user data if token exists on app load
    async function initializeAuth() {
        if (token.value && !user.value) {
            console.log("Token exists but no user data, consider fetching profile...");
            // Here you might add an API call to fetch the user profile using the token
            // e.g., const profile = await userService.getProfile(); setUser(profile);
            // For now, we rely on the data stored during login.
        } else if (!token.value) {
            // Clear user data if token is missing
            setUser(null);
        }
    }


    return {
        // State
        token,
        user,
        authError,
        isLoading,
        // Getters
        isAuthenticated,
        userProfile,
        authToken,
        // Actions
        register,
        login,
        logout,
        setError, // Expose setError for direct use in components if needed
        clearError,
        initializeAuth,
    };
});

================================================================================

Filename: src/stores/GameStore.js
Content:
// src/stores/gameStore.js
import { defineStore } from 'pinia';
import { ref, computed } from 'vue';
import gameService from '../services/gameService';

// Helper function (can be moved to a utils file later)
function calculateDistance(lat1, lon1, lat2, lon2) {
    const R = 6371; // Radius of the Earth in km
    const dLat = deg2rad(lat2 - lat1);
    const dLon = deg2rad(lon2 - lon1);
    const a =
        Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
        Math.sin(dLon / 2) * Math.sin(dLon / 2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    return R * c; // Distance in km
}

function deg2rad(deg) {
    return deg * (Math.PI / 180);
}

function calculateScore(distanceKm) {
    const maxScore = 5000;
    const score = Math.round(maxScore * Math.exp(-distanceKm / 2000));
    return Math.max(0, score);
}


export const useGameStore = defineStore('game', () => {
    // --- State ---
    const isMapsApiReady = ref(false);
    const gameId = ref(null);
    const currentRound = ref(0);
    const totalScore = ref(0);
    const locations = ref([]); // Will hold locations from backend { id, lat, lng }
    const currentGuess = ref(null);
    const roundResults = ref([]);
    const isRoundActive = ref(false);
    const isGameOver = ref(false);
    const isLoading = ref(false);
    const gameError = ref(null); 
    const MAX_ROUNDS = 5; // Set a default number of rounds
    const currentRoundNumber = computed(() => currentRound.value);
    const getCurrentLocation = computed(() => {
        if (currentRound.value > 0 && currentRound.value <= locations.value.length) {
            const loc = locations.value[currentRound.value - 1];
            // Return copy, ensure required fields exist
            return { id: loc.id, lat: loc.lat, lng: loc.lng };
        }
        return null;
    });

    // --- Getters (Computed) ---

    const getCurrentRoundResult = computed(() => {
        if (currentRound.value > 0 && currentRound.value <= roundResults.value.length) {
            return roundResults.value[currentRound.value - 1];
        }
        return null;
    });
    const hasSubmittedGuessForCurrentRound = computed(() => {
        // Check if there's a result for the current round number
        return roundResults.value.length >= currentRound.value && currentRound.value > 0;
    });


    // --- Actions ---
    function setMapsApiReady(value) {
        console.log(`Store: Setting Maps API Ready to ${value}`);
        isMapsApiReady.value = value;
    }

    function clearGameError() { // Helper to clear error state
        gameError.value = null;
    }

    async function startGame() {
        if (!isMapsApiReady.value) {
            console.error("Attempted to start game before Maps API is ready!");
            gameError.value = "Maps API is still loading. Please wait.";
            return;
        }

        console.log("Store: Attempting to start game via API...");
        isLoading.value = true;
        isGameOver.value = false;
        gameError.value = null; // Clear previous errors
        currentRound.value = 0;
        totalScore.value = 0;
        roundResults.value = [];
        currentGuess.value = null;
        locations.value = []; // Clear previous locations
        gameId.value = null;

        try {
            // --- Call Backend API ---
            const gameData = await gameService.startGame(MAX_ROUNDS);
            // ------------------------

            // --- Process Response ---
            if (!gameData || !gameData.locations || gameData.locations.length === 0) {
                throw new Error("Received invalid game data from server.");
            }

            gameId.value = gameData.gameId; // Use gameId from backend (even if placeholder)
            locations.value = gameData.locations; // Store fetched locations

            console.log(`Store: Game ${gameId.value} started, ${locations.value.length} locations loaded from backend.`);
            await nextRound(); // Start the first round

        } catch (error) {
            console.error("Store: Error starting game:", error.message);
            gameError.value = "Failed to start new game. Please try again later."; // Set user-friendly error
            isGameOver.value = true; // Set to game over state on error
            locations.value = []; // Ensure locations are empty on error
            gameId.value = null;
        } finally {
            isLoading.value = false;
        }
    }

    async function nextRound() {
        if (isGameOver.value) return;
        if (currentRound.value >= locations.value.length) { // Check against actual loaded locations count
            console.log("Game Over! Final Score:", totalScore.value);
            isGameOver.value = true;
            isRoundActive.value = false;
            return;
        }

        isLoading.value = true; // Indicate loading next round/location
        currentRound.value++;
        currentGuess.value = null;
        isRoundActive.value = true; // Make round playable
        console.log(`Store: Loading round ${currentRound.value}`);

        // Simulate loading delay or API fetch time for a specific location if needed
        // For now, location data is already loaded in startGame
        await new Promise(resolve => setTimeout(resolve, 100)); // Small delay

        isLoading.value = false;
    }

    function recordGuess(guessCoords) {
        // Update the state with the coordinates selected on the map
        if (isRoundActive.value && !hasSubmittedGuessForCurrentRound.value) {
            currentGuess.value = guessCoords;
            console.log("Store: Guess recorded", currentGuess.value);
        }
    }

    async function submitGuess() {
        if (!currentGuess.value || !isRoundActive.value || hasSubmittedGuessForCurrentRound.value) {
            console.warn("Submit guess called in invalid state.");
            return;
        }

        const actualLocation = getCurrentLocation.value;
        if (!actualLocation) {
            console.error("Cannot submit guess, actual location not found for round.");
            return;
        }

        console.log("Store: Submitting guess", currentGuess.value, "for actual", actualLocation);
        isRoundActive.value = false; // Round is finished, waiting for next
        isLoading.value = true; // Show loading while calculating/saving

        const distance = calculateDistance(
            actualLocation.lat, actualLocation.lng,
            currentGuess.value.lat, currentGuess.value.lng
        );
        const score = calculateScore(distance);

        const result = {
            round: currentRound.value,
            guess: { ...currentGuess.value },
            actual: { lat: actualLocation.lat, lng: actualLocation.lng },
            distanceKm: distance,
            score: score
        };

        roundResults.value.push(result);
        totalScore.value += score;

        console.log("Store: Round result", result);

        // TODO: Send result to backend API
        // try {
        //   await gameService.submitRoundResult({
        //      gameId: gameId.value,
        //      round: currentRound.value,
        //      locationId: actualLocation.id,
        //      guessLat: currentGuess.value.lat,
        //      guessLng: currentGuess.value.lng,
        //      score: score
        //   });
        // } catch (error) {
        //    console.error("Failed to submit round result:", error);
        //    // Handle submission error? Maybe retry later?
        // }

        await new Promise(resolve => setTimeout(resolve, 100)); // Simulate API save delay
        isLoading.value = false;

        // The UI will now show the result and the "Next Round" button based on computed properties
    }

    // --- Return state, getters, and actions ---
    return {
        // State
        gameId,
        currentRound,
        totalScore,
        locations,
        currentGuess,
        roundResults,
        isRoundActive,
        isGameOver,
        isLoading,
        MAX_ROUNDS,
        isMapsApiReady,
        gameError,
        clearGameError,
        // Getters
        currentRoundNumber,
        getCurrentLocation,
        getCurrentRoundResult,
        hasSubmittedGuessForCurrentRound,

        // Actions
        startGame,
        nextRound,
        recordGuess,
        submitGuess,
        setMapsApiReady,
        // Helper functions
        calculateDistance,
        calculateScore,
    };
});

================================================================================

Filename: src/stores/MultiplayerStore.js
Content:
import { defineStore } from 'pinia';
import { ref, computed } from 'vue';
import { useAuthStore } from './AuthStore';
import { useGameStore } from './GameStore';

export const useMultiplayerStore = defineStore('multiplayer', () => {
    const gameStore = useGameStore();
    const authStore = useAuthStore();
    
    // --- State ---
    const isHost = ref(false);
    const gameCode = ref('');
    const gameId = ref(null);
    const players = ref([]);
    const isConnected = ref(false);
    const socket = ref(null);
    const chatMessages = ref([]);
    const isEveryoneReady = ref(false);
    const waitingForOtherPlayers = ref(false);
    const playerResults = ref({}); // Map of userID -> round results
    const error = ref(null);
    
    // --- WebSocket handling ---
    function connectToGame(code) {
        if (socket.value) {
            socket.value.close();
            socket.value = null;
        }
        
        // Reset state when connecting
        players.value = [];
        isEveryoneReady.value = false;
        waitingForOtherPlayers.value = false;
        chatMessages.value = [];
        error.value = null;
        
        gameCode.value = code;
        const wsProtocol = window.location.protocol === 'https:' ? 'wss' : 'ws';
        const baseUrl = import.meta.env.VITE_BACKEND_URL || 'http://localhost:8080';
        // Remove trailing slash if present
        const cleanBaseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;
        // Extract hostname from URL
        let wsHost = cleanBaseUrl.replace(/^https?:\/\//, '');
        // Include auth token in the URL
        const token = authStore.token;
        const wsUrl = `${wsProtocol}://${wsHost}/api/v1/multiplayer/ws?gameCode=${code}&token=${token}`;
        
        console.log('Connecting to WebSocket URL:', wsUrl);
        
        try {
            socket.value = new WebSocket(wsUrl);
            
            socket.value.onopen = () => {
                isConnected.value = true;
                error.value = null; // Clear any previous errors
                console.log('Connected to game server');
                
                // Prepare player join data
                const playerData = {
                    username: authStore.userProfile?.username || 'Guest',
                    userId: authStore.userProfile?.id,
                    isHost: isHost.value
                };
                
                console.log('Sending player_join message:', playerData);
                
                // Send join message
                sendMessage('player_join', playerData);
            };
            
            socket.value.onmessage = (event) => {
                try {
                    const message = JSON.parse(event.data);
                    console.log('Received WebSocket message:', message);
                    handleIncomingMessage(message);
                } catch (err) {
                    console.error('Error parsing WebSocket message:', err);
                }
            };
            
            socket.value.onclose = (event) => {
                isConnected.value = false;
                console.log('WebSocket connection closed:', event.code, event.reason);
                
                // Only set error if not a normal closure and not already set
                if (event.code !== 1000 && !error.value) {
                    error.value = 'Connection to game server lost. Please try again.';
                }
                
                // Attempt to reconnect if not a normal closure
                if (event.code !== 1000) {
                    setTimeout(() => {
                        if (!isConnected.value) {
                            console.log('Attempting to reconnect...');
                            connectToGame(code);
                        }
                    }, 3000); // Try to reconnect after 3 seconds
                }
            };
            
            socket.value.onerror = (event) => {
                console.error('WebSocket error:', event);
                isConnected.value = false;
                error.value = 'Error connecting to game server. Please check your connection.';
            };
        } catch (err) {
            console.error('Failed to create WebSocket connection:', err);
            error.value = 'Failed to connect to game server. Please try again.';
        }
    }
    
    function sendMessage(type, payload) {
        if (!socket.value || socket.value.readyState !== WebSocket.OPEN) {
            console.error('Socket not connected');
            return;
        }
        
        const message = {
            type,
            payload,
            gameId: gameId.value ? String(gameId.value) : null,
            userId: authStore.userProfile?.id
        };
        
        socket.value.send(JSON.stringify(message));
    }
    
    function handleIncomingMessage(message) {
        console.log('Received message:', message);
        
        switch (message.type) {
            case 'player_list_update':
                // Ensure message.payload is an array
                if (!Array.isArray(message.payload)) {
                    console.error('Invalid player list received:', message.payload);
                    return;
                }
                
                // Replace the entire player list with the received list
                players.value = message.payload;
                console.log('Updated players list from server:', players.value);
                
                // Update host status if needed
                const currentUser = players.value.find(p => p.userId === authStore.userProfile?.id);
                if (currentUser) {
                    isHost.value = currentUser.isHost;
                    console.log('Updated host status:', isHost.value);
                }
                
                // Re-check if everyone is ready based on the new list
                isEveryoneReady.value = players.value.length > 1 && 
                                       players.value.every(p => p.isReady);
                console.log('Everyone ready check:', isEveryoneReady.value);
                break;

            case 'player_join':
                // A single player joined, update the list
                const newPlayer = message.payload;
                console.log('Processing player join:', newPlayer);
                
                // Remove the player if they already exist (to avoid duplicates)
                players.value = players.value.filter(p => p.userId !== newPlayer.userId);
                
                // Add the new player
                players.value.push(newPlayer);
                console.log('Updated players after join:', players.value);
                
                // Update host status if needed
                if (newPlayer.userId === authStore.userProfile?.id) {
                    isHost.value = newPlayer.isHost;
                    console.log('Updated host status:', isHost.value);
                }
                break;
                
            case 'player_leave':
                // A single player left, update the list
                const leavingPlayerId = message.payload.userId;
                players.value = players.value.filter(p => p.userId !== leavingPlayerId);
                console.log('Player left:', leavingPlayerId, 'Updated players:', players.value);
                
                // Re-check if everyone is ready based on the new list
                isEveryoneReady.value = players.value.length > 1 && 
                                       players.value.every(p => p.isReady);
                break;
                
            case 'player_ready':
                // A single player's ready status changed
                const readyData = message.payload;
                const readyPlayer = players.value.find(p => p.userId === readyData.userId);
                if (readyPlayer) {
                    readyPlayer.isReady = readyData.isReady;
                    console.log(`Player ${readyPlayer.username} ready status updated: ${readyData.isReady}`);
                    
                    // Re-check if everyone is ready
                    isEveryoneReady.value = players.value.length > 1 && 
                                           players.value.every(p => p.isReady);
                    console.log('Everyone ready check:', isEveryoneReady.value);
                }
                break;
                
            case 'game_start':
                console.log('Game start message received:', message);
                
                // Extract locations from the payload
                if (!message.payload || !message.payload.locations) {
                    console.error('Game start message missing locations data', message);
                    error.value = 'Failed to start game: Missing location data';
                    return;
                }
                
                // Process locations from server
                const locations = message.payload.locations.map(loc => ({
                    id: loc.id,
                    lat: loc.lat,
                    lng: loc.lng
                }));
                
                console.log('Starting game with locations:', locations);
                
                // Reset game state in GameStore
                gameStore.$patch({
                    isLoading: true,
                    isGameOver: false,
                    gameError: null,
                    currentRound: 0,
                    totalScore: 0,
                    roundResults: [],
                    currentGuess: null,
                    locations: locations,
                    gameId: message.gameId
                });
                
                // Start first round
                gameStore.nextRound();
                gameStore.$patch({ isLoading: false });
                
                // Reset multiplayer state
                waitingForOtherPlayers.value = false;
                playerResults.value = {};
                break;
                
            case 'guess_submit':
                // Record other player's guess
                const { userId, roundNumber, guess, score, distanceKm } = message.payload;
                if (!playerResults.value[userId]) {
                    playerResults.value[userId] = [];
                }
                
                // Store the guess result
                playerResults.value[userId][roundNumber - 1] = {
                    guess: { lat: guess.lat, lng: guess.lng },
                    score: score,
                    distanceKm: distanceKm
                };
                
                // Check if all players have submitted for this round
                const allSubmitted = players.value.every(player => 
                    playerResults.value[player.userId] && 
                    playerResults.value[player.userId][gameStore.currentRound.value - 1]
                );
                
                if (allSubmitted) {
                    waitingForOtherPlayers.value = false;
                    // If this is the last player to submit, show results
                    if (gameStore.isRoundActive.value) {
                        gameStore.isRoundActive.value = false;
                    }
                }
                break;
                
            case 'chat_message':
                // Add message to chat
                chatMessages.value.push(message.payload);
                break;

            default:
                console.warn('Received unknown message type:', message.type);
        }
    }
    
    // --- Actions ---
    async function createGame(options = { maxPlayers: 4, roundsTotal: 5 }) {
        try {
            error.value = null;
            const baseUrl = import.meta.env.VITE_BACKEND_URL || 'http://localhost:8080';
            // Remove trailing slash if present
            const cleanBaseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;
            
            console.log('Creating game at URL:', `${cleanBaseUrl}/api/v1/multiplayer/create`);
            
            const response = await fetch(`${cleanBaseUrl}/api/v1/multiplayer/create`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authStore.token}`
                },
                body: JSON.stringify(options)
            });
            
            if (!response.ok) {
                let errorMessage = 'Failed to create game';
                try {
                    const errorData = await response.json();
                    errorMessage = errorData.error || errorMessage;
                } catch (e) {
                    // If response is not valid JSON, use text content
                    errorMessage = await response.text();
                }
                throw new Error(errorMessage);
            }
            
            const data = await response.json();
            gameCode.value = data.gameCode;
            gameId.value = data.gameId;
            isHost.value = true;
            
            // Connect to WebSocket
            connectToGame(data.gameCode);
            
            return data;
        } catch (err) {
            console.error('Error creating multiplayer game:', err);
            error.value = err.message;
            throw err;
        }
    }
    
    async function joinGame(code) {
        try {
            error.value = null;
            const baseUrl = import.meta.env.VITE_BACKEND_URL || 'http://localhost:8080';
            // Remove trailing slash if present
            const cleanBaseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;
            
            const response = await fetch(`${cleanBaseUrl}/api/v1/multiplayer/join/${code}`, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${authStore.token}`
                }
            });
            
            if (!response.ok) {
                let errorMessage = 'Failed to join game';
                try {
                    const errorData = await response.json();
                    errorMessage = errorData.error || errorMessage;
                } catch (e) {
                    // If response is not valid JSON, use text content
                    errorMessage = await response.text();
                }
                throw new Error(errorMessage);
            }
            
            const data = await response.json();
            gameId.value = data.gameId;
            gameCode.value = code;
            isHost.value = false;
            
            // Connect to WebSocket
            connectToGame(code);
            
            return data;
        } catch (err) {
            console.error('Error joining multiplayer game:', err);
            error.value = err.message;
            throw err;
        }
    }
    
    function setReady(ready = true) {
        if (!socket.value || socket.value.readyState !== WebSocket.OPEN) {
            console.error('Socket not connected');
            return;
        }
        
        console.log('Setting ready status to:', ready);
        sendMessage('player_ready', { isReady: ready });
    }
    
    function startGame() {
        if (!isHost.value) {
            console.error('Only the host can start the game');
            return;
        }
        
        if (!isEveryoneReady.value) {
            console.error('Cannot start game until everyone is ready');
            return;
        }
        
        console.log('Host starting game...');
        sendMessage('game_start', {});
    }
    
    function submitGuess() {
        if (!gameStore.currentGuess.value || !gameStore.isRoundActive.value) {
            console.warn("Cannot submit guess: no guess recorded or round not active");
            return;
        }

        const actualLocation = gameStore.getCurrentLocation.value;
        if (!actualLocation) {
            console.error("Cannot submit guess: actual location not found for round");
            return;
        }

        // Calculate distance and score
        const distance = gameStore.calculateDistance(
            actualLocation.lat, actualLocation.lng,
            gameStore.currentGuess.value.lat, gameStore.currentGuess.value.lng
        );
        const score = gameStore.calculateScore(distance);

        // Create the guess result
        const result = {
            round: gameStore.currentRound.value,
            guess: { ...gameStore.currentGuess.value },
            actual: { lat: actualLocation.lat, lng: actualLocation.lng },
            distanceKm: distance,
            score: score
        };

        // Store result locally
        gameStore.roundResults.value.push(result);
        gameStore.totalScore.value += score;

        // Send guess to other players
        sendMessage('guess_submit', {
            roundNumber: gameStore.currentRound.value,
            guess: gameStore.currentGuess.value,
            score: score,
            distanceKm: distance
        });

        // Set waiting state
        waitingForOtherPlayers.value = true;
        gameStore.isRoundActive.value = false;
    }
    
    function sendChatMessage(content) {
        sendMessage('chat_message', {
            content,
            username: authStore.userProfile?.username,
            timestamp: new Date().toISOString()
        });
    }
    
    function leaveGame() {
        if (socket.value) {
            sendMessage('player_leave', {
                userId: authStore.userProfile?.id
            });
            socket.value.close();
        }
        
        // Reset state
        isHost.value = false;
        gameCode.value = '';
        gameId.value = null;
        players.value = [];
        isConnected.value = false;
        socket.value = null;
        chatMessages.value = [];
        isEveryoneReady.value = false;
        waitingForOtherPlayers.value = false;
        playerResults.value = {};
        error.value = null;
    }
    
    // --- Getters ---
    const isCurrentPlayerReady = computed(() => {
        const currentPlayerId = authStore.userProfile?.id;
        const player = players.value.find(p => p.userId === currentPlayerId);
        return player?.isReady || false;
    });
    
    // --- Return state, getters, and actions ---
    return {
        // State
        isHost,
        gameCode,
        gameId,
        players,
        isConnected,
        chatMessages,
        isEveryoneReady,
        waitingForOtherPlayers,
        playerResults,
        error,
        
        // Getters
        isCurrentPlayerReady,
        
        // Actions
        createGame,
        joinGame,
        leaveGame,
        setReady,
        startGame,
        submitGuess,
        sendChatMessage
    };
}); 

================================================================================

Filename: src/style.css
Content:
/* src/style.css */

/* Import external CSS first (like Leaflet) */
@import 'leaflet/dist/leaflet.css';

/* Import Tailwind CSS - this replaces @tailwind base/components/utilities */
@import 'tailwindcss';

/* Add any custom base styles or @layer overrides below */
body {
  font-family: sans-serif; /* Example */
  /* You can still use @apply here if needed, but prefer utility classes in templates */
  /* @apply bg-gray-100 text-gray-900; */
}

/* Example of adding custom utility */
@layer utilities {
  .custom-utility-example {
    @apply text-blue-500 font-bold;
  }
}

================================================================================

Filename: src/views/CreateMultiplayerGame.vue
Content:
<template>
  <div class="max-w-md mx-auto bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
    <h1 class="text-2xl font-bold text-center mb-6 text-gray-900 dark:text-white">Create Multiplayer Game</h1>
    
    <form @submit.prevent="createGame" class="space-y-6">
      <div>
        <label for="maxPlayers" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
          Max Players
        </label>
        <select
          v-model="maxPlayers"
          id="maxPlayers"
          class="w-full px-4 py-2 border rounded-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
        >
          <option value="2">2 Players</option>
          <option value="3">3 Players</option>
          <option value="4">4 Players</option>
          <option value="5">5 Players</option>
          <option value="6">6 Players</option>
          <option value="8">8 Players</option>
        </select>
      </div>
      
      <div>
        <label for="roundsTotal" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
          Number of Rounds
        </label>
        <select
          v-model="roundsTotal"
          id="roundsTotal"
          class="w-full px-4 py-2 border rounded-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
        >
          <option value="3">3 Rounds</option>
          <option value="5">5 Rounds</option>
          <option value="7">7 Rounds</option>
          <option value="10">10 Rounds</option>
        </select>
      </div>
      
      <div v-if="multiplayerStore.error" class="text-red-500 text-sm">{{ multiplayerStore.error }}</div>
      
      <button
        type="submit"
        :disabled="isLoading"
        class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 disabled:opacity-50"
      >
        <span v-if="isLoading">Creating...</span>
        <span v-else>Create Game</span>
      </button>
    </form>
    
    <div class="mt-4 text-center">
      <router-link to="/" class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
        Back to Home
      </router-link>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';
import { useMultiplayerStore } from '../stores/MultiplayerStore';

const router = useRouter();
const multiplayerStore = useMultiplayerStore();
const maxPlayers = ref(4);
const roundsTotal = ref(5);
const isLoading = ref(false);

async function createGame() {
  isLoading.value = true;
  
  try {
    await multiplayerStore.createGame({
      maxPlayers: parseInt(maxPlayers.value),
      roundsTotal: parseInt(roundsTotal.value)
    });
    
    router.push('/multiplayer/lobby');
  } catch (err) {
    // Error is already stored in multiplayerStore.error
  } finally {
    isLoading.value = false;
  }
}
</script> 

================================================================================

Filename: src/views/GameView.vue
Content:
<template>
  <div class="relative w-screen h-screen overflow-hidden bg-black">

    <!-- 1. Street View Background -->
    <div class="absolute inset-0 z-0">
      <StreetViewDisplay :location="GameStore.getCurrentLocation"
        v-if="GameStore.gameId && !GameStore.isGameOver && GameStore.getCurrentLocation" class="w-full h-full" />

      <div v-else-if="GameStore.gameId && !GameStore.isGameOver"
        class="w-full h-full bg-gray-800 flex items-center justify-center">
        <div class="flex flex-col items-center">
          <svg class="animate-spin h-12 w-12 text-blue-500 mb-4" xmlns="http://www.w3.org/2000/svg" fill="none"
            viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
            </path>
          </svg>
          <p class="text-gray-300 text-lg">Preparing your location...</p>
        </div>
      </div>
    </div>

    <!-- 2. Game Overlay UI (Static Elements) -->
    <div v-if="GameStore.gameId && !GameStore.isGameOver && !isMapFullscreen"
      class="absolute top-0 left-0 right-0 z-10 pointer-events-none">
      <!-- Top Bar with Game Info -->
      <div class="flex justify-between items-center p-4 bg-gradient-to-b from-black/90 to-transparent">
        <div class="bg-black/70 backdrop-blur-sm px-4 py-2 rounded-lg shadow-lg pointer-events-auto">
          <div class="text-yellow-400 text-sm font-medium">TOTAL SCORE</div>
          <div class="text-white text-xl font-bold">{{ GameStore.totalScore }}</div>
        </div>

        <div class="flex space-x-2 items-center">
          <!-- Round Indicator -->
          <div class="flex space-x-1">
            <div v-for="round in GameStore.MAX_ROUNDS" :key="round" :class="[
              'w-6 h-6 rounded-full flex items-center justify-center border-2',
              round < GameStore.currentRoundNumber ? 'bg-green-500 border-green-400' :
                round === GameStore.currentRoundNumber ? 'bg-blue-600 border-blue-500 animate-pulse' :
                  'bg-gray-700/70 border-gray-600'
            ]">
              <span class="text-xs font-bold text-white">{{ round }}</span>
            </div>
          </div>

          <!-- Time (could be implemented later) -->
          <div class="bg-black/70 backdrop-blur-sm px-3 py-1 rounded-lg text-white font-mono text-lg">
            <!-- 02:45 -->
          </div>
        </div>

        <!-- Game Settings Button -->
        <button class="bg-black/70 p-2 rounded-lg hover:bg-black/90 transition-colors pointer-events-auto">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24"
            stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
        </button>
      </div>
    </div>

    <!-- 3. Map Overlay (Bottom Right - Expandable) -->
    <div v-if="GameStore.gameId && !GameStore.isGameOver"
      class="map-container group absolute transition-all duration-300 ease-in-out border-2 overflow-hidden" :class="{
        'inset-0 z-40 border-none': isMapFullscreen || GameStore.hasSubmittedGuessForCurrentRound,
        'bottom-5 right-5 w-48 h-36 md:w-56 md:h-44 lg:w-64 lg:h-48 z-20 border-white/50 rounded-lg shadow-lg hover:w-[40vw] hover:h-[40vh] hover:border-white': !isMapFullscreen && !GameStore.hasSubmittedGuessForCurrentRound
      }">
      <MapDisplay @guess-made="handleMapGuess" ref="mapDisplayRef" :round-active="GameStore.isRoundActive"
        :submitted="GameStore.hasSubmittedGuessForCurrentRound"
        :actual-location="GameStore.hasSubmittedGuessForCurrentRound ? GameStore.getCurrentLocation : null"
        :guess-location="GameStore.hasSubmittedGuessForCurrentRound ? GameStore.getCurrentRoundResult?.guess : null"
        class="w-full h-full cursor-pointer" />

      <!-- Show hint only when map is NOT enlarged and not yet submitted -->
      <div v-if="!isMapFullscreen && !GameStore.hasSubmittedGuessForCurrentRound"
        class="absolute inset-0 bg-black/30 flex items-center justify-center text-white text-xs opacity-0 group-hover:opacity-0 transition-opacity duration-300 pointer-events-none group-focus-within:opacity-0">
        <span class="bg-black/80 px-2 py-1 rounded">Hover to enlarge</span>
      </div>

      <!-- Result overlay visible only after guess submission -->
      <div v-if="GameStore.hasSubmittedGuessForCurrentRound && GameStore.getCurrentRoundResult"
        class="absolute top-4 left-4 bg-black/80 backdrop-blur-sm text-white p-4 rounded-lg text-sm max-w-xs shadow-lg">
        <div class="flex items-center mb-3">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-yellow-400 mr-2" fill="none" viewBox="0 0 24 24"
            stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
          <h3 class="font-bold text-lg">Round {{ GameStore.currentRoundNumber }} Result</h3>
        </div>

        <div class="space-y-3">
          <div>
            <p class="text-gray-300 text-xs uppercase tracking-wide font-medium mb-1">Distance</p>
            <p class="font-semibold text-yellow-300 text-2xl">{{ GameStore.getCurrentRoundResult.distanceKm.toFixed(1)
            }} <span class="text-sm">km</span></p>
          </div>

          <div>
            <p class="text-gray-300 text-xs uppercase tracking-wide font-medium mb-1">Score</p>
            <p class="font-semibold text-green-300 text-2xl">{{ GameStore.getCurrentRoundResult.score }} <span
                class="text-sm">pts</span></p>
          </div>
        </div>

        <!-- Total score -->
        <div class="pt-3 mt-3 border-t border-gray-700">
          <p class="text-xs uppercase tracking-wide font-medium text-gray-300 mb-1">Total Score</p>
          <p class="font-bold text-2xl text-white">{{ GameStore.totalScore }} <span class="text-sm">pts</span></p>
        </div>
      </div>

      <!-- Fullscreen navigation controls after submission -->
      <div v-if="GameStore.hasSubmittedGuessForCurrentRound"
        class="absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-4">
        <!-- Next round button -->
        <button v-if="GameStore.currentRoundNumber < GameStore.MAX_ROUNDS" @click="nextRoundHandler"
          class="px-6 py-3 bg-blue-600 text-white text-lg font-medium rounded-lg shadow-lg hover:bg-blue-700 transition-all flex items-center">
          Next Round
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24"
            stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
          </svg>
        </button>
        <!-- Finish game button -->
        <button v-else @click="viewResultsHandler"
          class="px-6 py-3 bg-purple-600 text-white text-lg font-medium rounded-lg shadow-lg hover:bg-purple-700 transition-all flex items-center">
          Finish Game
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24"
            stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
          </svg>
        </button>
      </div>

      <!-- Close map button when expanded -->
      <button v-if="GameStore.hasSubmittedGuessForCurrentRound" @click="isMapFullscreen = false"
        class="absolute top-4 right-4 bg-gray-800/80 hover:bg-gray-700 text-white p-2 rounded-full shadow-lg transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

    <!-- 4. Controls & Info (Bottom Center) -->
    <div
      v-if="GameStore.gameId && !GameStore.isGameOver && !(GameStore.hasSubmittedGuessForCurrentRound && isMapFullscreen)"
      class="controls-container absolute bottom-5 left-1/2 -translate-x-1/2 z-20 p-3 md:p-4 bg-black/80 backdrop-blur-md rounded-xl shadow-lg flex flex-col items-center space-y-2 border border-gray-700">
      <p v-if="GameStore.currentGuess && !GameStore.hasSubmittedGuessForCurrentRound" class="text-xs text-gray-300">
        Selected: {{ GameStore.currentGuess.lat.toFixed(3) }}°, {{ GameStore.currentGuess.lng.toFixed(3) }}°
      </p>

      <div class="flex justify-center space-x-3">
        <button @click="submitGuessHandler"
          :disabled="!GameStore.currentGuess || !GameStore.isRoundActive || GameStore.hasSubmittedGuessForCurrentRound"
          class="px-6 py-2.5 bg-gradient-to-r from-green-600 to-green-500 text-white rounded-lg shadow-lg hover:from-green-700 hover:to-green-600 disabled:from-gray-500 disabled:to-gray-400 disabled:cursor-not-allowed disabled:opacity-70 transition-all duration-150 ease-in-out font-medium flex items-center">
          <svg v-if="!GameStore.currentGuess" xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none"
            viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M12 11c0 3.517-1.009 6.799-2.753 9.571m-3.44-2.04l.054-.09A13.916 13.916 0 008 11a4 4 0 118 0c0 1.017-.07 2.019-.203 3m-2.118 6.844A21.88 21.88 0 0015.171 17m3.839 1.132c.645-2.266.99-4.659.99-7.132A8 8 0 008 4.07M3 15.364c.64-1.319 1-2.8 1-4.364 0-1.457.39-2.823 1.07-4" />
          </svg>
          <svg v-else xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24"
            stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7" />
          </svg>
          {{ GameStore.hasSubmittedGuessForCurrentRound ? "Guessed" : (GameStore.currentGuess ? "Submit Guess" : "Select a Location") }}
        </button>
      </div>
    </div>

    <!-- Error Message -->
    <div v-if="GameStore.gameError"
      class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-50 bg-red-100 border-l-4 border-red-500 text-red-700 px-6 py-4 rounded-lg shadow-xl text-center max-w-md">
      <div class="flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-red-500" fill="none" viewBox="0 0 24 24"
          stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <div>
          <p class="font-bold mb-1">Oops! Something went wrong</p>
          <p>{{ GameStore.gameError }}</p>
        </div>
      </div>
      <button @click="GameStore.clearGameError()"
        class="mt-4 px-4 py-2 bg-red-600 text-white rounded-lg text-sm hover:bg-red-700 transition-colors">
        Dismiss
      </button>
    </div>

    <!-- 5. Loading Overlay -->
    <div v-if="GameStore.isLoading && !GameStore.isGameOver"
      class="absolute inset-0 bg-black/70 backdrop-blur-md flex flex-col items-center justify-center z-50">
      <svg class="animate-spin h-16 w-16 text-blue-500 mb-4" xmlns="http://www.w3.org/2000/svg" fill="none"
        viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor"
          d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
        </path>
      </svg>
      <p class="text-xl font-medium text-white">Preparing your adventure...</p>
      <p class="text-blue-300 mt-2 max-w-sm text-center">We're finding an interesting location for you to explore</p>
    </div>

    <!-- 6. Start Game Screen (Before Game Starts) -->
    <div v-if="!GameStore.gameId && !GameStore.isGameOver"
      class="absolute inset-0 bg-gradient-to-br from-blue-900 via-indigo-900 to-purple-900 flex flex-col items-center justify-center z-40 bg-[url('/path/to/world-map-bg.png')] bg-cover bg-center">
      <div class="bg-black/50 backdrop-blur-sm p-8 rounded-2xl text-center max-w-lg shadow-2xl border border-white/20">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-yellow-400 mx-auto mb-6" fill="none"
          viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h2 class="text-4xl font-bold text-white mb-3">TerraQuest Challenge</h2>
        <p class="text-lg text-blue-100 mb-8">Get ready to test your geography knowledge with 5 challenging locations
          from around the world!</p>
        <button @click="startGameHandler" :disabled="!GameStore.isMapsApiReady || GameStore.isLoading"
          class="px-8 py-4 bg-gradient-to-r from-yellow-500 to-yellow-400 text-gray-900 rounded-lg shadow-lg hover:from-yellow-400 hover:to-yellow-300 text-xl font-semibold transition-all duration-300 ease-in-out disabled:from-gray-500 disabled:to-gray-400 disabled:cursor-not-allowed transform hover:scale-105 flex items-center justify-center w-full">
          <svg v-if="!GameStore.isMapsApiReady || GameStore.isLoading"
            class="animate-spin -ml-1 mr-3 h-5 w-5 text-gray-800" xmlns="http://www.w3.org/2000/svg" fill="none"
            viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor"
              d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
            </path>
          </svg>
          {{ !GameStore.isMapsApiReady ? "Initializing Maps..." : (GameStore.isLoading ? "Starting Game..." : "Start Adventure") }}
        </button>
        <div class="flex items-center justify-center mt-6">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-300 mr-2" fill="none" viewBox="0 0 24 24"
            stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <p class="text-sm text-blue-300">You'll have 5 rounds to guess different locations</p>
        </div>
        <p v-if="gameError && !GameStore.gameId" class="mt-4 text-red-300 bg-red-900/30 p-2 rounded">{{ gameError }}</p>
      </div>
    </div>

    <!-- 7. Game Over Screen -->
    <div v-if="GameStore.isGameOver && GameStore.gameId"
      class="absolute inset-0 bg-gradient-to-br from-green-800 via-blue-900 to-indigo-900 flex flex-col items-center justify-center text-center p-6 z-40">
      <div class="bg-black/30 backdrop-blur-sm p-8 rounded-2xl max-w-xl w-full border border-white/20 shadow-2xl">
        <div class="flex justify-center mb-6">
          <div class="relative">
            <div class="w-24 h-24 rounded-full bg-yellow-500 flex items-center justify-center animate-pulse">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-yellow-900" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
            </div>
            <div class="absolute -bottom-2 -right-2 bg-blue-600 rounded-full p-2 border-4 border-indigo-900">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
              </svg>
            </div>
          </div>
        </div>

        <h2 class="text-5xl font-bold text-white mb-4 drop-shadow-lg">Challenge Complete!</h2>
        <p class="text-xl text-blue-200 mb-6">Well played! Here's how you did:</p>

        <div class="bg-white/10 backdrop-blur rounded-lg p-5 mb-8">
          <div class="flex justify-center mb-3">
            <div class="px-6 py-3 bg-yellow-400/20 rounded-full">
              <p class="text-yellow-300 font-bold">FINAL SCORE</p>
              <p class="text-6xl font-bold text-white">{{ GameStore.totalScore }}</p>
            </div>
          </div>

          <!-- Round Results Summary (could be expanded) -->
          <div class="grid grid-cols-5 gap-2 mt-6">
            <div v-for="round in GameStore.MAX_ROUNDS" :key="round"
              class="flex flex-col items-center bg-white/10 p-2 rounded">
              <span class="text-xs text-white/70">Round {{ round }}</span>
              <span class="text-sm font-semibold text-white" v-if="GameStore.roundResults[round - 1]">
                {{ GameStore.roundResults[round - 1].score }}
              </span>
              <span v-else class="text-sm text-white/50">-</span>
            </div>
          </div>
        </div>

        <div class="flex gap-4 justify-center">
          <button @click="startGameHandler"
            class="px-6 py-3 bg-gradient-to-r from-green-600 to-green-500 text-white rounded-lg shadow-lg hover:from-green-700 hover:to-green-600 font-semibold transition-all duration-300 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24"
              stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
            Play Again
          </button>
          <button @click="shareResults"
            class="px-6 py-3 bg-blue-600 text-white rounded-lg shadow-lg hover:bg-blue-700 font-semibold transition-all duration-300 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24"
              stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
            </svg>
            Share Results
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted, watch } from 'vue';
import { useRouter } from 'vue-router';
import StreetViewDisplay from '../components/StreetViewDisplay.vue';
import MapDisplay from '../components/MapDisplay.vue';
import { useGameStore } from '../stores/GameStore';

const GameStore = useGameStore();
const router = useRouter();
const mapDisplayRef = ref(null);
const isMapFullscreen = ref(false); // Renamed for clarity
const gameError = ref(null);

function startGameHandler() {
  isMapFullscreen.value = false; // Reset map fullscreen state
  if (mapDisplayRef.value) {
    mapDisplayRef.value.resetMapState(); // Reset map markers and zoom
  }
  GameStore.startGame();
}

function handleMapGuess(coordinates) {
  GameStore.recordGuess(coordinates);
}

function submitGuessHandler() {
  GameStore.submitGuess();
  // Automatically enlarge the map when submitting a guess
  isMapFullscreen.value = true;
}

function nextRoundHandler() {
  mapDisplayRef.value?.resetMapState(); // Ensure map clears markers/lines/zoom
  isMapFullscreen.value = false; // Reset map size for next round
  GameStore.nextRound();
}

function viewResultsHandler() {
  // For now, just shows the game over screen in place
  GameStore.isGameOver = true;
  console.log("Game finished. Final Score:", GameStore.totalScore);
}

function shareResults() {
  // Future implementation for sharing results
  alert("Share feature coming soon!");
}

watch(() => GameStore.currentRoundNumber, (newRound, oldRound) => {
  // Any special round transition animations could be triggered here
});

watch(() => GameStore.getCurrentLocation, (newLocation) => {
  // Any location-specific handling can be done here
});

onMounted(() => {
  console.log("GameView mounted (Full Screen Layout). Current store state:", {
    gameId: GameStore.gameId,
    round: GameStore.currentRoundNumber,
    isOver: GameStore.isGameOver
  });
});
</script>

<style scoped>
/* Ensure MapDisplay's internal map fills its container */
.map-container :deep(.leaflet-container) {
  width: 100%;
  height: 100%;
}

/* Optional: Add a subtle indicator for the map container */
.map-container::before {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: 0.6rem;
  border: 2px dashed transparent;
  transition: border-color 0.3s ease-in-out;
  pointer-events: none;
}

.map-container:hover::before {
  border-color: rgba(255, 255, 255, 0.5);
}

/* Ensure StreetView fills its absolute container */
/* StreetViewDisplay.vue should have w-full h-full on its root */

/* Animation for the pulse effect */
@keyframes pulse-ring {
  0% {
    transform: scale(0.8);
    opacity: 0.8;
  }

  80%,
  100% {
    transform: scale(1.3);
    opacity: 0;
  }
}

.animate-pulse-ring::before {
  content: '';
  position: absolute;
  inset: -5px;
  border-radius: 50%;
  border: 2px solid currentColor;
  animation: pulse-ring 2s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite;
}
</style>

================================================================================

Filename: src/views/HomeView.vue
Content:
<template>
  <div class="min-h-screen">
    <!-- Hero Section -->
    <section class="relative py-20 overflow-hidden bg-gradient-to-br from-blue-900 via-indigo-900 to-purple-900">
      <!-- Background Pattern -->
      <div class="absolute inset-0 opacity-10">
        <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
          <defs>
            <pattern id="grid" width="50" height="50" patternUnits="userSpaceOnUse">
              <rect width="50" height="50" fill="none" stroke="currentColor" stroke-width="0.5" />
              <circle cx="25" cy="25" r="1" fill="currentColor" />
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#grid)" />
        </svg>
      </div>

      <div class="container mx-auto px-4 relative z-10">
        <div class="flex flex-col lg:flex-row items-center">
          <div class="w-full lg:w-1/2 mb-12 lg:mb-0">
            <h1 class="text-4xl md:text-5xl xl:text-6xl font-bold text-white leading-tight mb-6">
              Explore the World <br>
              <span class="text-yellow-400">Test Your Geography Skills</span>
            </h1>
            <p class="text-lg text-blue-100 mb-8 max-w-lg">
              Drop into random locations around the globe and guess where you are! Challenge your geography knowledge
              and compete with others in this addictive geo-guessing game.
            </p>
            <div class="flex flex-wrap gap-4">
              <router-link to="/game"
                class="px-8 py-4 bg-yellow-500 hover:bg-yellow-400 text-gray-900 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 font-bold text-lg transform hover:scale-105">
                Play Now
              </router-link>
              <a href="#how-to-play"
                class="px-8 py-4 bg-transparent border-2 border-white text-white hover:bg-white/10 rounded-lg transition-all duration-300 font-medium text-lg">
                How to Play
              </a>
            </div>
          </div>

          <div class="w-full lg:w-1/2 flex justify-center">
            <div class="relative w-full max-w-lg">
              <!-- Globe Illustration -->
              <div class="w-full h-64 md:h-80 lg:h-96 relative">
                <div class="absolute inset-0 bg-blue-600 rounded-full opacity-20 animate-pulse"></div>
                <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg" class="absolute inset-0 w-full h-full">
                  <path fill="#FFFFFF"
                    d="M46,-78.3C60.2,-71.6,72.7,-61,81.1,-47.4C89.4,-33.9,93.6,-16.9,93.1,-0.3C92.6,16.4,87.5,32.8,78.1,45.7C68.7,58.6,55,68,40.3,73.4C25.5,78.9,9.7,80.4,-6.3,79.3C-22.3,78.3,-38.4,74.6,-51.6,66.1C-64.8,57.6,-75,44.2,-80.1,29.3C-85.2,14.4,-85.2,-2,-79.6,-15.6C-74,-29.1,-63,-39.7,-50.8,-47.7C-38.6,-55.7,-25.2,-61,-10.7,-67.7C3.8,-74.4,17.7,-82.5,31.8,-85.1C45.9,-87.7,60.3,-84.8,75.3,-76.2"
                    transform="translate(100 100)" class="text-white fill-current" />
                </svg>
                <svg class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-4/5 h-4/5"
                  viewBox="0 0 100 100" fill="none">
                  <g stroke-width="0.8" stroke-linecap="round" stroke="currentColor" class="text-blue-200">
                    <!-- Latitude lines -->
                    <ellipse cx="50" cy="50" rx="45" ry="15" transform="rotate(0)" />
                    <ellipse cx="50" cy="50" rx="45" ry="25" transform="rotate(0)" />
                    <ellipse cx="50" cy="50" rx="45" ry="35" transform="rotate(0)" />
                    <!-- Longitude lines -->
                    <path d="M50,5 C50,35 50,65 50,95" />
                    <path d="M5,50 C15,50 85,50 95,50" />
                    <path d="M13,26 C26,36 74,64 87,74" />
                    <path d="M13,74 C26,64 74,36 87,26" />
                  </g>
                  <!-- Location marker -->
                  <circle cx="65" cy="40" r="3" fill="#EF4444" />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- How to Play Section -->
    <section id="how-to-play" class="py-20 bg-white">
      <div class="container mx-auto px-4">
        <h2 class="text-3xl md:text-4xl font-bold text-center mb-16">How to Play TerraQuest</h2>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <!-- Step 1 -->
          <div
            class="bg-gray-50 rounded-xl p-6 shadow-lg border border-gray-100 hover:shadow-xl transition-shadow duration-300">
            <div
              class="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center text-white text-2xl font-bold mb-4">
              1</div>
            <h3 class="text-xl font-semibold mb-3">Explore Street View</h3>
            <p class="text-gray-600">You'll be dropped into a random location using Google Street View. Look around for
              clues about your location.</p>
          </div>

          <!-- Step 2 -->
          <div
            class="bg-gray-50 rounded-xl p-6 shadow-lg border border-gray-100 hover:shadow-xl transition-shadow duration-300">
            <div
              class="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center text-white text-2xl font-bold mb-4">
              2</div>
            <h3 class="text-xl font-semibold mb-3">Make Your Guess</h3>
            <p class="text-gray-600">When you're ready, click on the world map to place your guess for where you think
              you are.</p>
          </div>

          <!-- Step 3 -->
          <div
            class="bg-gray-50 rounded-xl p-6 shadow-lg border border-gray-100 hover:shadow-xl transition-shadow duration-300">
            <div
              class="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center text-white text-2xl font-bold mb-4">
              3</div>
            <h3 class="text-xl font-semibold mb-3">Score Points</h3>
            <p class="text-gray-600">Score is based on how close your guess is to the actual location. The closer you
              are, the more points you earn!</p>
          </div>
        </div>

        <div class="text-center mt-16">
          <div class="flex flex-col md:flex-row justify-center gap-4">
            <router-link to="/game"
              class="px-8 py-4 bg-blue-600 hover:bg-blue-700 text-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 font-bold text-lg inline-block">
              Play Single Player
            </router-link>
            <router-link to="/multiplayer/create"
              class="px-8 py-4 bg-purple-600 hover:bg-purple-700 text-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 font-bold text-lg inline-block">
              Create Multiplayer Game
            </router-link>
            <router-link to="/multiplayer/join"
              class="px-8 py-4 bg-green-600 hover:bg-green-700 text-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 font-bold text-lg inline-block">
              Join Multiplayer Game
            </router-link>
          </div>
        </div>
      </div>
    </section>

    <!-- Features Section -->
    <section class="py-20 bg-gray-50">
      <div class="container mx-auto px-4">
        <h2 class="text-3xl md:text-4xl font-bold text-center mb-16">Game Features</h2>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          <!-- Feature 1 -->
          <div class="text-center">
            <div class="inline-block p-4 bg-blue-100 rounded-full mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-2">Global Locations</h3>
            <p class="text-gray-600">Challenge yourself with locations from all around the world</p>
          </div>

          <!-- Feature 2 -->
          <div class="text-center">
            <div class="inline-block p-4 bg-yellow-100 rounded-full mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-yellow-600" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-2">Multiplayer</h3>
            <p class="text-gray-600">Compete with friends and players worldwide</p>
          </div>

          <!-- Feature 3 -->
          <div class="text-center">
            <div class="inline-block p-4 bg-green-100 rounded-full mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-2">Leaderboards</h3>
            <p class="text-gray-600">Track your progress and compare with others</p>
          </div>

          <!-- Feature 4 -->
          <div class="text-center">
            <div class="inline-block p-4 bg-purple-100 rounded-full mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-purple-600" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-2">Achievement System</h3>
            <p class="text-gray-600">Earn badges and unlock new challenges</p>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-16 bg-gradient-to-r from-indigo-600 to-blue-500 text-white">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-6">Ready to Test Your Geography Knowledge?</h2>
        <p class="text-xl text-blue-100 mb-8 max-w-2xl mx-auto">Join thousands of players from around the world in the
          ultimate geography challenge!</p>

        <div class="flex flex-wrap justify-center gap-4">
          <router-link to="/register"
            class="px-8 py-4 bg-yellow-500 hover:bg-yellow-400 text-gray-900 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 font-bold text-lg">
            Sign Up Free
          </router-link>
          <router-link to="/multiplayer/join"
            class="px-8 py-4 bg-purple-500 hover:bg-purple-400 text-white rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 font-bold text-lg">
            Join Multiplayer
          </router-link>
          <router-link to="/game"
            class="px-8 py-4 bg-transparent border-2 border-white hover:bg-white/10 text-white rounded-lg transition-all duration-300 font-medium text-lg">
            Play as Guest
          </router-link>
        </div>
      </div>
    </section>
  </div>
</template>

<script setup>
// No additional script needed for this static page
</script>

================================================================================

Filename: src/views/JoinGame.vue
Content:
<template>
  <div class="max-w-md mx-auto bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
    <h1 class="text-2xl font-bold text-center mb-6 text-gray-900 dark:text-white">Join Multiplayer Game</h1>
    
    <form @submit.prevent="joinGame" class="space-y-4">
      <div>
        <label for="gameCode" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Game Code</label>
        <input
          v-model="gameCode"
          id="gameCode"
          type="text"
          placeholder="Enter game code"
          class="w-full px-4 py-2 border rounded-md focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          required
        />
      </div>
      
      <div v-if="multiplayerStore.error" class="text-red-500 text-sm">{{ multiplayerStore.error }}</div>
      
      <button
        type="submit"
        :disabled="isLoading"
        class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 disabled:opacity-50"
      >
        <span v-if="isLoading">Joining...</span>
        <span v-else>Join Game</span>
      </button>
    </form>
    
    <div class="mt-4 text-center">
      <router-link to="/" class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
        Back to Home
      </router-link>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';
import { useMultiplayerStore } from '../stores/MultiplayerStore';

const router = useRouter();
const multiplayerStore = useMultiplayerStore();
const gameCode = ref('');
const isLoading = ref(false);

async function joinGame() {
  if (!gameCode.value) return;
  
  isLoading.value = true;
  
  try {
    await multiplayerStore.joinGame(gameCode.value);
    router.push('/multiplayer/lobby');
  } catch (err) {
    // Error is already stored in multiplayerStore.error
  } finally {
    isLoading.value = false;
  }
}
</script> 

================================================================================

Filename: src/views/LeaderboardView.vue
Content:
<script setup>
import { ref, computed, onMounted, watch } from 'vue';
import { useAuthStore } from '../stores/authStore';

const authStore = useAuthStore();
const currentUserId = computed(() => authStore.userProfile?.id);

// Pagination & filtering state
const currentPage = ref(1);
const pageSize = 10;
const activeTab = ref('all-time');
const isLoading = ref(true);

// Mock leaderboard data
const mockLeaderboard = [
    {
        id: 1,
        username: 'GeoMaster',
        gamesPlayed: 245,
        avgScore: '4,721',
        bestScore: '24,950',
        totalPoints: 1157645,
        joinDate: '2024-01-15'
    },
    {
        id: 2,
        username: 'WorldExplorer',
        gamesPlayed: 183,
        avgScore: '4,532',
        bestScore: '24,800',
        totalPoints: 829356,
        joinDate: '2024-02-03'
    },
    {
        id: 3,
        username: 'MapWizard',
        gamesPlayed: 201,
        avgScore: '4,120',
        bestScore: '24,100',
        totalPoints: 828120,
        joinDate: '2024-01-20'
    },
    {
        id: 4,
        username: 'TravellerPro',
        gamesPlayed: 142,
        avgScore: '3,950',
        bestScore: '23,400',
        totalPoints: 560900,
        joinDate: '2024-03-05'
    },
    {
        id: 5,
        username: 'GeographyNerd',
        gamesPlayed: 121,
        avgScore: '3,840',
        bestScore: '23,100',
        totalPoints: 464640,
        joinDate: '2024-03-12'
    },
    {
        id: 6,
        username: 'AtlasHero',
        gamesPlayed: 98,
        avgScore: '3,760',
        bestScore: '22,800',
        totalPoints: 368480,
        joinDate: '2024-03-18'
    },
    {
        id: 7,
        username: 'CurrentUser', // This would be your logged-in user
        gamesPlayed: 78,
        avgScore: '3,480',
        bestScore: '22,100',
        totalPoints: 271440,
        isCurrentUser: true,
        joinDate: '2024-03-20'
    },
    {
        id: 8,
        username: 'GlobeTrotter',
        gamesPlayed: 65,
        avgScore: '3,350',
        bestScore: '21,500',
        totalPoints: 217750,
        joinDate: '2024-03-22'
    },
    {
        id: 9,
        username: 'LandmarksExpert',
        gamesPlayed: 52,
        avgScore: '3,240',
        bestScore: '20,800',
        totalPoints: 168480,
        joinDate: '2024-03-25'
    },
    {
        id: 10,
        username: 'ContinentCrusher',
        gamesPlayed: 37,
        avgScore: '3,120',
        bestScore: '19,950',
        totalPoints: 115440,
        joinDate: '2024-04-01'
    },
    {
        id: 11,
        username: 'MapManiac',
        gamesPlayed: 25,
        avgScore: '2,980',
        bestScore: '18,300',
        totalPoints: 74500,
        joinDate: '2024-04-05'
    },
    {
        id: 12,
        username: 'BorderCrosser',
        gamesPlayed: 18,
        avgScore: '2,750',
        bestScore: '17,100',
        totalPoints: 49500,
        joinDate: '2024-04-08'
    }
];

// Computed properties
const players = computed(() => {
    // In a real implementation, you would fetch from API based on activeTab
    return mockLeaderboard;
});

const topPlayers = computed(() => {
    return players.value.slice(0, 3);
});

const otherPlayers = computed(() => {
    return players.value.slice(3);
});

const totalPages = computed(() => {
    return Math.ceil(players.value.length / pageSize);
});

// Format date helper function
function formatDate(dateString) {
    const date = new Date(dateString);
    return new Intl.DateTimeFormat('en-US', {
        month: 'short',
        day: 'numeric',
        year: 'numeric'
    }).format(date);
}

// Fetch leaderboard data 
async function fetchLeaderboard() {
    isLoading.value = true;

    try {
        // In a real implementation, this would be an API call:
        // const response = await leaderboardService.getLeaderboard(activeTab.value, currentPage.value, pageSize);
        // Process API response...

        // Simulate API delay with mock data
        await new Promise(resolve => setTimeout(resolve, 1000));

        // This would be set with API data
        // leaderboardData.value = response.data;

    } catch (error) {
        console.error('Error fetching leaderboard data:', error);
    } finally {
        isLoading.value = false;
    }
}

// Watch for tab changes to refetch data
watch(activeTab, () => {
    currentPage.value = 1; // Reset to first page when changing tabs
    fetchLeaderboard();
});

// Watch for page changes
watch(currentPage, () => {
    fetchLeaderboard();
});

// Initial data load
onMounted(() => {
    fetchLeaderboard();
});
</script>

<template>
    <div class="py-12">
        <div class="container mx-auto px-4">
            <div class="text-center mb-12">
                <h1 class="text-4xl font-bold text-gray-800 mb-4">Global Leaderboard</h1>
                <p class="text-lg text-gray-600 max-w-2xl mx-auto">
                    See how you rank against the world's best geography enthusiasts. Can you make it to the top?
                </p>
            </div>

            <!-- Leaderboard Tabs -->
            <div class="mb-8 flex justify-center">
                <div class="inline-flex rounded-md shadow-sm" role="group">
                    <button type="button" @click="activeTab = 'all-time'" :class="[
                        'px-5 py-2.5 text-sm font-medium rounded-l-lg',
                        activeTab === 'all-time' ?
                            'bg-blue-600 text-white hover:bg-blue-700' :
                            'bg-white text-gray-700 hover:bg-gray-100 border border-gray-300'
                    ]">
                        All-Time
                    </button>
                    <button type="button" @click="activeTab = 'monthly'" :class="[
                        'px-5 py-2.5 text-sm font-medium',
                        activeTab === 'monthly' ?
                            'bg-blue-600 text-white hover:bg-blue-700' :
                            'bg-white text-gray-700 hover:bg-gray-100 border-y border-gray-300'
                    ]">
                        Monthly
                    </button>
                    <button type="button" @click="activeTab = 'weekly'" :class="[
                        'px-5 py-2.5 text-sm font-medium rounded-r-lg',
                        activeTab === 'weekly' ?
                            'bg-blue-600 text-white hover:bg-blue-700' :
                            'bg-white text-gray-700 hover:bg-gray-100 border border-gray-300'
                    ]">
                        Weekly
                    </button>
                </div>
            </div>

            <!-- Leaderboard Table -->
            <div class="bg-white shadow-xl rounded-lg overflow-hidden mb-8 relative">
                <!-- Loading Overlay -->
                <div v-if="isLoading" class="absolute inset-0 bg-white/80 flex items-center justify-center z-20">
                    <div class="flex flex-col items-center">
                        <svg class="animate-spin h-10 w-10 text-blue-600 mb-4" xmlns="http://www.w3.org/2000/svg"
                            fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4">
                            </circle>
                            <path class="opacity-75" fill="currentColor"
                                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                            </path>
                        </svg>
                        <p class="text-gray-600">Loading leaderboard...</p>
                    </div>
                </div>

                <table class="w-full table-auto">
                    <thead class="bg-gradient-to-r from-blue-600 to-indigo-600 text-white">
                        <tr>
                            <th class="px-4 py-4 text-left w-14">#</th>
                            <th class="px-4 py-4 text-left">Player</th>
                            <th class="px-4 py-4 text-center">Games Played</th>
                            <th class="px-4 py-4 text-center">Avg. Score</th>
                            <th class="px-4 py-4 text-center">Best Score</th>
                            <th class="px-4 py-4 text-center">Total Points</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Top 3 Players (Gold, Silver, Bronze) -->
                        <tr v-for="(player, index) in topPlayers" :key="player.id"
                            class="border-b hover:bg-gray-50 transition-colors duration-150">
                            <td class="px-4 py-4">
                                <div class="flex justify-center items-center w-8 h-8 rounded-full" :class="[
                                    index === 0 ? 'bg-yellow-400' :
                                        index === 1 ? 'bg-gray-300' :
                                            index === 2 ? 'bg-amber-700' : ''
                                ]">
                                    <span class="font-bold text-gray-900">{{ index + 1 }}</span>
                                </div>
                            </td>
                            <td class="px-4 py-4">
                                <div class="flex items-center">
                                    <div
                                        class="w-10 h-10 mr-3 flex items-center justify-center bg-blue-100 text-blue-800 rounded-full font-bold">
                                        {{ player.username.substring(0, 2).toUpperCase() }}
                                    </div>
                                    <div>
                                        <div class="font-semibold text-gray-900">{{ player.username }}</div>
                                        <div class="text-xs text-gray-500">Joined {{ formatDate(player.joinDate) }}
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-4 py-4 text-center">{{ player.gamesPlayed }}</td>
                            <td class="px-4 py-4 text-center">{{ player.avgScore }}</td>
                            <td class="px-4 py-4 text-center">{{ player.bestScore }}</td>
                            <td class="px-4 py-4 text-center">
                                <span class="font-bold">{{ player.totalPoints.toLocaleString() }}</span>
                            </td>
                        </tr>

                        <!-- Other Players -->
                        <tr v-for="(player, index) in otherPlayers" :key="player.id"
                            class="border-b hover:bg-gray-50 transition-colors duration-150"
                            :class="{ 'bg-blue-50': player.isCurrentUser }">
                            <td class="px-4 py-4 text-center">{{ index + 4 }}</td>
                            <td class="px-4 py-4">
                                <div class="flex items-center">
                                    <div
                                        class="w-10 h-10 mr-3 flex items-center justify-center bg-gray-100 text-gray-800 rounded-full font-bold">
                                        {{ player.username.substring(0, 2).toUpperCase() }}
                                    </div>
                                    <div>
                                        <div class="font-semibold text-gray-900">
                                            {{ player.username }}
                                            <span v-if="player.isCurrentUser"
                                                class="ml-2 bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">You</span>
                                        </div>
                                        <div class="text-xs text-gray-500">Joined {{ formatDate(player.joinDate) }}
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-4 py-4 text-center">{{ player.gamesPlayed }}</td>
                            <td class="px-4 py-4 text-center">{{ player.avgScore }}</td>
                            <td class="px-4 py-4 text-center">{{ player.bestScore }}</td>
                            <td class="px-4 py-4 text-center">{{ player.totalPoints.toLocaleString() }}</td>
                        </tr>

                        <!-- No Data State -->
                        <tr v-if="!isLoading && players.length === 0">
                            <td colspan="6" class="px-4 py-12 text-center text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto mb-4 text-gray-400"
                                    fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                <p class="text-lg font-medium mb-1">No leaderboard data available yet</p>
                                <p>Be the first to play and set some records!</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="flex justify-center">
                <nav aria-label="Page navigation">
                    <ul class="inline-flex -space-x-px">
                        <li>
                            <button @click="currentPage = Math.max(1, currentPage - 1)" :disabled="currentPage === 1"
                                class="px-3 py-2 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed">
                                Previous
                            </button>
                        </li>
                        <li v-for="page in totalPages" :key="page">
                            <button @click="currentPage = page" :class="[
                                'px-3 py-2 leading-tight border border-gray-300',
                                currentPage === page ?
                                    'text-blue-600 bg-blue-50 hover:bg-blue-100 border-blue-300' :
                                    'text-gray-500 bg-white hover:bg-gray-100'
                            ]">
                                {{ page }}
                            </button>
                        </li>
                        <li>
                            <button @click="currentPage = Math.min(totalPages, currentPage + 1)"
                                :disabled="currentPage === totalPages"
                                class="px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed">
                                Next
                            </button>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</template>

<style scoped>
/* Add any additional scoped styles here if needed */
</style>

================================================================================

Filename: src/views/LoginView.vue
Content:
<template>
    <div class="flex items-center justify-center min-h-[calc(100vh-200px)] py-12 px-4 sm:px-6 lg:px-8">
        <div class="w-full max-w-md bg-white rounded-xl shadow-2xl overflow-hidden">
            <div class="bg-gradient-to-r from-blue-600 to-indigo-700 px-6 py-8 text-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-white mx-auto mb-4" fill="none"
                    viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z" />
                </svg>
                <h2 class="text-2xl font-bold text-white">Sign in to TerraQuest</h2>
                <p class="mt-2 text-sm text-blue-200">
                    Continue your geography adventure
                </p>
            </div>

            <div class="px-6 py-8">
                <form @submit.prevent="handleLogin" class="space-y-5">
                    <!-- Email Field -->
                    <div class="mt-4 relative rounded-md shadow-sm">
                        <!-- Icon -->
                        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5
               a2.5 2.5 0 005 0V12a9 9 0 10-9 9
               m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                            </svg>
                        </div>
                        <!-- Vertical Divider -->
                        <div class="absolute inset-y-0 left-10 flex items-center pointer-events-none">
                            <div class="h-6 w-px bg-gray-300"></div>
                        </div>
                        <!-- Input -->
                        <input v-model="email" id="email" name="email" type="email" required
                            placeholder="you@example.com" class="block w-full pl-14 pr-3 py-2 border border-gray-300 rounded-md shadow-sm 
                placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 
                sm:text-sm" />
                    </div>

                    <!-- Password Field -->
                    <div class="mt-4 relative rounded-md shadow-sm">
                        <!-- Icon -->
                        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6
               a2 2 0 00-2-2H6a2 2 0 00-2 2v6
               a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                            </svg>
                        </div>
                        <!-- Vertical Divider -->
                        <div class="absolute inset-y-0 left-10 flex items-center pointer-events-none">
                            <div class="h-6 w-px bg-gray-300"></div>
                        </div>
                        <!-- Input -->
                        <input v-model="password" id="password" name="password" type="password" required
                            placeholder="Enter your password" class="block w-full pl-14 pr-3 py-2 border border-gray-300 rounded-md shadow-sm 
                placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 
                sm:text-sm" />
                    </div>

                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <input v-model="rememberMe" id="remember-me" name="remember-me" type="checkbox"
                                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                            <label for="remember-me" class="ml-2 block text-sm text-gray-600">
                                Remember me
                            </label>
                        </div>

                        <div class="text-sm">
                            <a href="#" class="font-medium text-blue-600 hover:text-blue-500">
                                Forgot password?
                            </a>
                        </div>
                    </div>

                    <!-- Error Message Display -->
                    <div v-if="authError" class="bg-red-50 border-l-4 border-red-400 p-4 my-4">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                                    fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd"
                                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                                        clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-red-700">{{ authError }}</p>
                            </div>
                        </div>
                    </div>

                    <div>
                        <button type="submit" :disabled="isLoading"
                            class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200">
                            <span v-if="isLoading" class="flex items-center">
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white"
                                    xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor"
                                        stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor"
                                        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                                    </path>
                                </svg>
                                Signing in...
                            </span>
                            <span v-else>Sign in</span>
                        </button>
                    </div>

                    <div class="text-center mt-6">
                        <p class="text-sm text-gray-600">
                            Don't have an account?
                            <router-link to="/register" class="font-medium text-blue-600 hover:text-blue-500 ml-1">
                                Create an account
                            </router-link>
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</template>

<script setup>
import { ref, computed } from 'vue';
import { useAuthStore } from '../stores/AuthStore';
import { useRouter } from 'vue-router';

const authStore = useAuthStore();
const router = useRouter();

// Form data
const email = ref('');
const password = ref('');
const rememberMe = ref(false);

// Computed state from store
const isLoading = computed(() => authStore.isLoading);
const authError = computed(() => authStore.authError);

// Handle login form submission
const handleLogin = async () => {
    // Basic form validation
    if (!email.value || !password.value) {
        authStore.setError("Please enter both email and password.");
        return;
    }

    // Clear any previous errors
    authStore.clearError();

    // Attempt login
    const success = await authStore.login({
        email: email.value,
        password: password.value,
        // Remember me could be used for token expiration settings
        // or other persistence features on the backend
        remember: rememberMe.value
    });

    if (success) {
        // Redirect to home or previous page
        router.push('/');
    }
    // Error handling is done in the store and displayed via the authError computed property
};
</script>

================================================================================

Filename: src/views/MultiplayerGame.vue
Content:
<template>
  <div>
    <!-- Game view extends the existing game components with multiplayer-specific elements -->
    <div
      v-if="gameStore.isLoading"
      class="flex justify-center items-center h-96"
    >
      <div class="text-center">
        <svg
          class="animate-spin h-12 w-12 mx-auto text-blue-500"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
        >
          <circle
            class="opacity-25"
            cx="12"
            cy="12"
            r="10"
            stroke="currentColor"
            stroke-width="4"
          ></circle>
          <path
            class="opacity-75"
            fill="currentColor"
            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
          ></path>
        </svg>
        <p class="mt-3 text-lg font-medium text-gray-700 dark:text-gray-300">
          Loading game...
        </p>
      </div>
    </div>

    <div v-else>
      <!-- Player indicator bar at top -->
      <div class="bg-gray-50 dark:bg-gray-800 p-3 rounded-lg mb-4 shadow-md">
        <div class="flex flex-wrap items-center justify-between">
          <div class="text-lg font-semibold text-gray-800 dark:text-white">
            Round {{ gameStore.currentRound }} of {{ gameStore.MAX_ROUNDS }}
          </div>

          <div class="flex space-x-3">
            <div
              v-for="player in multiplayerStore.players"
              :key="player.userId"
              class="flex items-center bg-white dark:bg-gray-700 px-3 py-1 rounded-md shadow-sm"
            >
              <div
                class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center text-white font-bold text-sm"
              >
                {{ player.username && player.username.charAt(0).toUpperCase() }}
              </div>
              <div class="ml-2">
                <span
                  class="font-medium text-sm text-gray-800 dark:text-white"
                  >{{ player.username }}</span
                >
                <div class="text-xs">
                  <span
                    v-if="hasPlayerSubmittedGuess(player.userId)"
                    class="text-green-500"
                    >Guessed</span
                  >
                  <span v-else class="text-yellow-500">Thinking...</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Original game view - reuse existing components -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
        <!-- Map component from original game -->
        <div
          class="relative rounded-lg overflow-hidden h-[400px] lg:h-[600px] bg-gray-100 dark:bg-gray-700"
        >
          <!-- Replace with your actual map component -->
          <StreetViewDisplay v-if="gameStore.isRoundActive" />
          <div
            v-else-if="gameStore.isGameOver"
            class="p-4 bg-gray-50 dark:bg-gray-800 rounded-lg"
          >
            <h2 class="text-xl font-bold text-center mb-4">Game Over!</h2>
            <div class="max-w-3xl mx-auto">
              <MultiplayerResults />
            </div>
          </div>
          <div
            v-else-if="multiplayerStore.waitingForOtherPlayers"
            class="p-4 text-center"
          >
            <p class="text-lg font-medium mb-2">
              Waiting for other players to submit their guesses...
            </p>
            <svg
              class="animate-spin h-8 w-8 mx-auto text-blue-500"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"
              ></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
          </div>
          <div v-else-if="gameStore.getCurrentRoundResult" class="p-4">
            <RoundResult
              :result="gameStore.getCurrentRoundResult"
              :showNextButton="true"
              @next-round="nextRound"
            />
          </div>
        </div>

        <!-- Guess map component from original game -->
        <div
          v-if="gameStore.isRoundActive"
          class="rounded-lg overflow-hidden h-[400px] lg:h-[600px] bg-gray-100 dark:bg-gray-700"
        >
          <MapDisplay 
            :roundActive="gameStore.isRoundActive"
            :submitted="gameStore.hasSubmittedGuessForCurrentRound"
            :actualLocation="gameStore.hasSubmittedGuessForCurrentRound ? gameStore.getCurrentRoundResult?.actual : null"
            :guessLocation="gameStore.hasSubmittedGuessForCurrentRound ? gameStore.getCurrentRoundResult?.guess : null"
            @guess-selected="handleGuess" />

          <!-- Submit controls -->
          <div class="flex justify-center mt-4">
            <button
              @click="submitMultiplayerGuess"
              :disabled="!gameStore.currentGuess"
              class="px-6 py-2 bg-blue-600 text-white rounded-md shadow-md hover:bg-blue-700 disabled:opacity-50"
            >
              Submit Guess
            </button>
          </div>
        </div>
      </div>

      <!-- Chat/sidebar for multiplayer -->
      <div
        v-if="!gameStore.isGameOver"
        class="mt-4 bg-gray-50 dark:bg-gray-800 p-3 rounded-lg"
      >
        <h3 class="text-lg font-semibold mb-2 text-gray-800 dark:text-white">
          Game Chat
        </h3>
        <div
          class="h-32 overflow-y-auto mb-2 bg-white dark:bg-gray-700 rounded-md p-2"
        >
          <div
            v-for="(message, index) in multiplayerStore.chatMessages"
            :key="index"
            class="mb-1"
          >
            <span class="font-semibold text-sm text-gray-700 dark:text-gray-300"
              >{{ message.username }}:</span
            >
            <span class="text-sm text-gray-800 dark:text-white ml-1">{{
              message.content
            }}</span>
          </div>
          <div
            v-if="multiplayerStore.chatMessages.length === 0"
            class="text-gray-400 text-center text-sm italic"
          >
            No messages yet
          </div>
        </div>
        <div class="flex">
          <input
            v-model="chatMessage"
            type="text"
            placeholder="Send a message..."
            class="flex-grow px-2 py-1 text-sm border rounded-l-md dark:bg-gray-600 dark:border-gray-500 dark:text-white"
            @keyup.enter="sendChatMessage"
          />
          <button
            @click="sendChatMessage"
            class="bg-blue-600 hover:bg-blue-700 text-white text-sm px-3 rounded-r-md"
          >
            Send
          </button>
        </div>
      </div>

      <!-- Leave game button -->
      <div class="mt-4 text-center">
        <button
          @click="leaveGame"
          class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-md"
        >
          Leave Game
        </button>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted, computed } from 'vue';
import { useRouter } from 'vue-router';
import { useGameStore } from '../stores/GameStore';
import { useMultiplayerStore } from '../stores/MultiplayerStore';

// Import components with correct names
import StreetViewDisplay from '../components/StreetViewDisplay.vue';
import MapDisplay from '../components/MapDisplay.vue';
import RoundResult from '../components/RoundResult.vue';
import MultiplayerResults from '../components/MultiplayerResults.vue';

const router = useRouter();
const gameStore = useGameStore();
const multiplayerStore = useMultiplayerStore();
const chatMessage = ref('');

// Check if player has submitted a guess for the current round
function hasPlayerSubmittedGuess(userId) {
  return multiplayerStore.playerResults[userId] && 
         multiplayerStore.playerResults[userId][gameStore.currentRound - 1];
}

// Handle guess selection
function handleGuess(coords) {
  gameStore.recordGuess(coords);
}

// Submit guess and notify other players
function submitMultiplayerGuess() {
  multiplayerStore.submitGuess();
}

// Next round handler
function nextRound() {
  gameStore.nextRound();
}

// Send chat message
function sendChatMessage() {
  if (chatMessage.value.trim()) {
    multiplayerStore.sendChatMessage(chatMessage.value);
    chatMessage.value = '';
  }
}

// Leave game and return to home
function leaveGame() {
  multiplayerStore.leaveGame();
  router.push('/');
}

// Initialize game on component mount
onMounted(() => {
  // If no game ID is set, redirect to lobby
  if (!multiplayerStore.gameId) {
    router.push('/multiplayer/lobby');
  }
  
  // Start game if it's not already active
  if (!gameStore.isRoundActive && !gameStore.isGameOver) {
    gameStore.startGame();
  }
});
</script>


================================================================================

Filename: src/views/MultiplayerLobby.vue
Content:
<template>
  <div class="max-w-4xl mx-auto bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-8">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Multiplayer Lobby</h1>
      <div class="bg-blue-100 dark:bg-blue-900 px-4 py-2 rounded-lg">
        <span class="text-sm text-gray-700 dark:text-gray-300">Game Code:</span>
        <span class="ml-2 font-mono font-bold text-blue-600 dark:text-blue-400">{{ multiplayerStore.gameCode }}</span>
        <button @click="copyGameCode" class="ml-2 text-blue-600 dark:text-blue-400 hover:text-blue-800">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
          </svg>
        </button>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Players List -->
      <div class="md:col-span-2">
        <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
          <h2 class="text-lg font-semibold mb-3 text-gray-800 dark:text-white">Players ({{ multiplayerStore.players.length }})</h2>
          <div class="space-y-3">
            <div v-for="player in multiplayerStore.players" :key="player.userId" 
              class="flex items-center justify-between bg-white dark:bg-gray-600 p-3 rounded-md shadow-sm">
              <div class="flex items-center">
                <div class="w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center text-white font-bold">
                  {{ player.username && player.username.charAt(0).toUpperCase() }}
                </div>
                <div class="ml-3">
                  <span class="font-medium text-gray-800 dark:text-white">{{ player.username }}</span>
                  <span v-if="player.isHost" class="ml-2 px-2 py-0.5 text-xs bg-yellow-100 text-yellow-800 rounded-full">Host</span>
                </div>
              </div>
              <div class="flex items-center">
                <span v-if="player.isReady" class="text-green-500 flex items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                  </svg>
                  Ready
                </span>
                <span v-else class="text-gray-400 dark:text-gray-300">Not Ready</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Chat and Controls -->
      <div class="flex flex-col">
        <!-- Chat -->
        <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4 mb-4 flex-grow">
          <h2 class="text-lg font-semibold mb-3 text-gray-800 dark:text-white">Chat</h2>
          <div class="h-64 overflow-y-auto mb-3 bg-white dark:bg-gray-600 rounded-md p-3">
            <div v-for="(message, index) in multiplayerStore.chatMessages" :key="index" class="mb-2">
              <div class="font-semibold text-sm text-gray-700 dark:text-gray-300">{{ message.username }}</div>
              <div class="text-gray-800 dark:text-white break-words">{{ message.content }}</div>
            </div>
            <div v-if="multiplayerStore.chatMessages.length === 0" class="text-gray-400 dark:text-gray-300 text-center italic">
              No messages yet
            </div>
          </div>
          <div class="flex">
            <input v-model="chatMessage" type="text" placeholder="Type a message..." 
              class="flex-grow px-3 py-2 rounded-l-md border dark:bg-gray-600 dark:border-gray-500 dark:text-white" 
              @keyup.enter="sendChatMessage" />
            <button @click="sendChatMessage" 
              class="bg-blue-600 hover:bg-blue-700 text-white px-4 rounded-r-md">
              Send
            </button>
          </div>
        </div>

        <!-- Controls -->
        <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
          <div class="flex flex-col space-y-3">
            <button v-if="!multiplayerStore.isCurrentPlayerReady" @click="setReady" 
              class="w-full bg-green-600 hover:bg-green-700 text-white py-2 rounded-md font-medium">
              Ready Up
            </button>
            <button v-else @click="setNotReady" 
              class="w-full bg-yellow-500 hover:bg-yellow-600 text-white py-2 rounded-md font-medium">
              Cancel Ready
            </button>
            
            <button v-if="multiplayerStore.isHost && multiplayerStore.isEveryoneReady" 
              @click="startGame" 
              class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-md font-medium">
              Start Game
            </button>
            
            <button @click="leaveGame" 
              class="w-full bg-red-600 hover:bg-red-700 text-white py-2 rounded-md font-medium">
              Leave Game
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, onUnmounted } from 'vue';
import { useRouter } from 'vue-router';
import { useMultiplayerStore } from '../stores/MultiplayerStore';
import { useAuthStore } from '../stores/AuthStore';

const router = useRouter();
const multiplayerStore = useMultiplayerStore();
const authStore = useAuthStore();
const chatMessage = ref('');

// Methods
function copyGameCode() {
  navigator.clipboard.writeText(multiplayerStore.gameCode);
  // Could add a toast notification here
}

function setReady() {
  multiplayerStore.setReady(true);
}

function setNotReady() {
  multiplayerStore.setReady(false);
}

function startGame() {
  multiplayerStore.startGame();
  router.push('/multiplayer/game');
}

function leaveGame() {
  multiplayerStore.leaveGame();
  router.push('/');
}

function sendChatMessage() {
  if (chatMessage.value.trim()) {
    multiplayerStore.sendChatMessage(chatMessage.value);
    chatMessage.value = '';
  }
}

// Cleanup on unmount
onUnmounted(() => {
  // Don't automatically leave the game when navigating to the game page
  // multiplayerStore.leaveGame();
});
</script> 

================================================================================

Filename: src/views/ProfileView.vue
Content:
<template>
  <div class="profile-container">
    <h1>Profile</h1>
    <div v-if="userProfile" class="profile-content">
      <div class="profile-header">
        <h2>{{ userProfile.username }}</h2>
        <p>Member since {{ formatDate(userProfile.createdAt) }}</p>
      </div>
      
      <div class="profile-stats">
        <div class="stat-card">
          <h3>Games Played</h3>
          <p>{{ userProfile.gamesPlayed || 0 }}</p>
        </div>
        <div class="stat-card">
          <h3>Average Score</h3>
          <p>{{ userProfile.averageScore || 0 }}</p>
        </div>
        <div class="stat-card">
          <h3>Best Score</h3>
          <p>{{ userProfile.bestScore || 0 }}</p>
        </div>
      </div>

      <div class="profile-actions">
        <button @click="logout" class="logout-button">Logout</button>
      </div>
    </div>
    <div v-else class="loading">
      Loading profile...
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted } from 'vue';
import { useAuthStore } from '../stores/AuthStore';
import { useRouter } from 'vue-router';

const authStore = useAuthStore();
const router = useRouter();
const userProfile = ref(null);

const formatDate = (dateString) => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

const logout = async () => {
  try {
    await authStore.logout();
    router.push('/login');
  } catch (error) {
    console.error('Logout failed:', error);
  }
};

onMounted(async () => {
  try {
    userProfile.value = authStore.userProfile;
  } catch (error) {
    console.error('Failed to load profile:', error);
  }
});
</script>

<style scoped>
.profile-container {
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem;
}

.profile-content {
  background: white;
  border-radius: 8px;
  padding: 2rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.profile-header {
  text-align: center;
  margin-bottom: 2rem;
}

.profile-header h2 {
  font-size: 2rem;
  color: #333;
  margin-bottom: 0.5rem;
}

.profile-stats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 2rem;
}

.stat-card {
  background: #f8f9fa;
  padding: 1rem;
  border-radius: 8px;
  text-align: center;
}

.stat-card h3 {
  color: #666;
  font-size: 1rem;
  margin-bottom: 0.5rem;
}

.stat-card p {
  font-size: 1.5rem;
  font-weight: bold;
  color: #333;
}

.profile-actions {
  text-align: center;
}

.logout-button {
  background-color: #dc3545;
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.2s;
}

.logout-button:hover {
  background-color: #c82333;
}

.loading {
  text-align: center;
  padding: 2rem;
  color: #666;
}
</style>


================================================================================

Filename: src/views/RegisterView.vue
Content:
<template>
    <div class="flex items-center justify-center min-h-[calc(100vh-200px)] py-12 px-4 sm:px-6 lg:px-8">
        <div class="w-full max-w-md bg-white rounded-xl shadow-2xl overflow-hidden">
            <div class="bg-gradient-to-r from-green-600 to-teal-700 px-6 py-8 text-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-white mx-auto mb-4" fill="none"
                    viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                </svg>
                <h2 class="text-2xl font-bold text-white">Create your TerraQuest Account</h2>
                <p class="mt-2 text-sm text-green-200">
                    Join the global geography challenge
                </p>
            </div>

            <div class="px-6 py-8">
                <form @submit.prevent="handleRegister" class="space-y-5">
                    <!-- Username Field -->
                    <div>
                        <label for="username" class="block text-sm font-medium text-gray-700">Username</label>
                        <div class="mt-1 relative rounded-md shadow-sm">
                            <!-- Icon Container with fixed width -->
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none w-10">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none"
                                    viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                            </div>
                            <input v-model="username" id="username" name="username" type="text" required minlength="3"
                                class="block w-full pl-14 pr-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm"
                                placeholder="Choose a username" />
                        </div>
                    </div>

                    <!-- Email Field -->
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700">Email address</label>
                        <div class="mt-1 relative rounded-md shadow-sm">
                            <!-- Icon Container with fixed width -->
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none w-10">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none"
                                    viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                                </svg>
                            </div>
                            <input v-model="email" id="email" name="email" type="email" required
                                class="block w-full pl-14 pr-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm"
                                placeholder="you@example.com" />
                        </div>
                    </div>

                    <!-- Password Field -->
                    <div>
                        <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                        <div class="mt-1 relative rounded-md shadow-sm">
                            <!-- Icon Container with fixed width -->
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none w-10">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none"
                                    viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                </svg>
                            </div>
                            <input v-model="password" id="password" name="password" type="password" required
                                minlength="6"
                                class="block w-full pl-14 pr-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm"
                                placeholder="Create a password (min 6 characters)" />
                        </div>
                        <p class="mt-1 text-xs text-gray-500">Must be at least 6 characters</p>
                    </div>

                    <!-- Error Message Display -->
                    <div v-if="authError" class="bg-red-50 border-l-4 border-red-400 p-4 my-4">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                                    fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd"
                                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                                        clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-red-700">{{ authError }}</p>
                            </div>
                        </div>
                    </div>

                    <div class="mt-6">
                        <button type="submit" :disabled="isLoading"
                            class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200">
                            <span v-if="isLoading" class="flex items-center">
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white"
                                    xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor"
                                        stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor"
                                        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" />
                                </svg>
                                Creating account...
                            </span>
                            <span v-else>Create Account</span>
                        </button>
                    </div>

                    <div class="text-center mt-6">
                        <p class="text-sm text-gray-600">
                            Already have an account?
                            <router-link to="/login" class="font-medium text-green-600 hover:text-green-500 ml-1">
                                Sign in
                            </router-link>
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</template>

<script setup>
import { ref, computed } from 'vue';
import { useAuthStore } from '../stores/AuthStore';
import { useRouter } from 'vue-router';

const authStore = useAuthStore();
const router = useRouter();

const username = ref('');
const email = ref('');
const password = ref('');

const isLoading = computed(() => authStore.isLoading);
const authError = computed(() => authStore.authError);

const handleRegister = async () => {
    if (!username.value || !email.value || !password.value) {
        authStore.setError("Please fill in all fields.");
        return;
    }
    if (password.value.length < 6) {
        authStore.setError("Password must be at least 6 characters long.");
        return;
    }

    const success = await authStore.register({
        username: username.value,
        email: email.value,
        password: password.value,
    });

    if (success) {
        // Use a notification instead of alert
        const notification = document.createElement('div');
        notification.className =
            'fixed top-4 right-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded shadow-md z-50';
        notification.innerHTML = `
        <div class="flex">
            <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            </div>
            <div class="ml-3">
            <p class="text-sm">Registration successful! Please log in.</p>
            </div>
        </div>
        `;
        document.body.appendChild(notification);

        // Remove notification after 3 seconds and redirect
        setTimeout(() => {
            notification.remove();
            router.push('/login');
        }, 3000);
    }
};
</script>

================================================================================

Filename: tailwind.config.js
Content:
// tailwind.config.js
/** @type {import('tailwindcss').Config} */
export default {
  // ===>>> ADD THIS CONTENT ARRAY BACK! <<<===
  content: [
    "./index.html",
    "./src/**/*.{vue,js,ts,jsx,tsx}", // Scans these files for classes
  ],
  // =========================================
  theme: {
    extend: {
      // Your existing animations/keyframes can stay here
      animation: {
        'portal-pulse': 'portal-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',
        'portal-glow': 'portal-glow 2s ease-in-out infinite',
        'piece-movement': 'piece-movement 2s ease-in-out infinite',
      },
      keyframes: {
        'portal-pulse': {
          '0%, 100%': { transform: 'scale(1)', opacity: '1' },
          '50%': { transform: 'scale(1.1)', opacity: '0.8' },
        },
        'portal-glow': {
          '0%, 100%': { opacity: '0.5' },
          '50%': { opacity: '0.8' },
        },
        'piece-movement': {
          '0%': { transform: 'translate(0, 0)', opacity: '0' },
          '20%': { opacity: '1' },
          '60%': { transform: 'translate(100%, 100%)', opacity: '1' },
          '80%, 100%': { transform: 'translate(100%, 100%)', opacity: '0' },
        },
      },
    },
  },
  plugins: [],
}

================================================================================

Filename: vite.config.js
Content:
// vite.config.js
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import tailwindcss from '@tailwindcss/vite'

// https://vite.dev/config/
export default defineConfig({
  plugins: [
    vue(),
    tailwindcss()
  ],
  base: '/TerraQuest/',
  build: {
    outDir: 'dist',
  }
})

================================================================================
